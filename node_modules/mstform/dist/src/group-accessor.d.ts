import { FormDefinition, Group } from "./form";
import { FormState } from "./state";
import { FormAccessorBase } from "./form-accessor-base";
export declare class GroupAccessor<D extends FormDefinition<any>> {
    state: FormState<any, any, any>;
    definition: D;
    parent: FormAccessorBase<any, any, any>;
    group: Group<D>;
    constructor(state: FormState<any, any, any>, definition: D, parent: FormAccessorBase<any, any, any>, group: Group<D>);
    get isValid(): boolean;
    get isWarningFree(): boolean;
    hasFeedback(feedbackFunc: Function): boolean;
    notExcluded(names: (keyof D)[]): (keyof D)[];
    isValidForNames(names: (keyof D)[]): boolean;
    isWarningFreeForNames(names: (keyof D)[]): boolean;
}
