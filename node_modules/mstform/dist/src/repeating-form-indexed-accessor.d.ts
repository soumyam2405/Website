import { IAnyModelType, Instance } from "mobx-state-tree";
import { FormDefinition, GroupDefinition } from "./form";
import { FormState } from "./state";
import { FormAccessorBase } from "./form-accessor-base";
import { IRepeatingFormIndexedAccessor, IRepeatingFormAccessor } from "./interfaces";
export declare class RepeatingFormIndexedAccessor<D extends FormDefinition<M>, G extends GroupDefinition<D>, M extends IAnyModelType> extends FormAccessorBase<D, G, M> implements IRepeatingFormIndexedAccessor<D, G, M> {
    state: FormState<any, any, any>;
    parent: IRepeatingFormAccessor<D, G, M>;
    index: number;
    constructor(state: FormState<any, any, any>, definition: D, groupDefinition: G | undefined, parent: IRepeatingFormAccessor<D, G, M>, index: number);
    clear(): void;
    get path(): string;
    get isValid(): boolean;
    get value(): Instance<M>;
    setIndex(index: number): void;
    setAddMode(addModeDefaults: string[]): void;
    get addMode(): boolean;
}
