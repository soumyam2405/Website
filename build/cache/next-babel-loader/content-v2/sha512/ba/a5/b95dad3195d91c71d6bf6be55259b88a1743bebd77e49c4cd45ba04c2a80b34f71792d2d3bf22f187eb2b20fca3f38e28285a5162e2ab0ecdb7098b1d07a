{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\DiscordHookSite\\\\pages\\\\index.tsx\";\nimport { useObserver } from \"mobx-react-lite\";\nimport { destroy, getSnapshot } from \"mobx-state-tree\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { base64UrlEncode } from \"../common/base64/base64UrlEncode\";\nimport { ModalManagerContext } from \"../common/modal/ModalManagerContext\";\nimport { Footer } from \"../common/page/Footer\";\nimport { Header } from \"../common/page/Header\";\nimport { PageHead } from \"../common/page/PageHead\";\nimport { PreferencesModal } from \"../common/settings/PreferencesModal\";\nimport { useAutorun } from \"../common/state/useAutorun\";\nimport { useLazyValue } from \"../common/state/useLazyValue\";\nimport { useRequiredContext } from \"../common/state/useRequiredContext\";\nimport { timeout } from \"../common/utilities/timeout\";\nimport { Editor } from \"../modules/editor/Editor\";\nimport { EditorManager } from \"../modules/editor/EditorManager\";\nimport { EditorManagerProvider } from \"../modules/editor/EditorManagerContext\";\nimport { getEditorManagerFromQuery } from \"../modules/editor/getEditorManagerFromQuery\";\nimport { Preview } from \"../modules/message/preview/Preview\";\nconst Container = styled.div.withConfig({\n  displayName: \"pages__Container\",\n  componentId: \"nf398x-0\"\n})([\"display:flex;flex-direction:column;height:100%;\"]);\nconst View = styled.main.attrs({\n  translate: \"no\"\n}).withConfig({\n  displayName: \"pages__View\",\n  componentId: \"nf398x-1\"\n})([\"max-height:calc(100% - 48px);display:flex;flex-direction:row-reverse;align-items:stretch;flex:1;& > *{flex:1;height:100%;overflow-y:scroll;}\"]);\nexport default function Main(props) {\n  const {\n    state,\n    mobile\n  } = props;\n  const editorManager = useLazyValue(() => EditorManager.create(state));\n  useEffect(() => () => destroy(editorManager), [editorManager]);\n  const cancelRef = useRef();\n  useAutorun(() => {\n    var _cancelRef$current;\n\n    const messages = editorManager.messages.map(message => ({\n      data: message.data\n    }));\n    (_cancelRef$current = cancelRef.current) === null || _cancelRef$current === void 0 ? void 0 : _cancelRef$current.call(cancelRef);\n    cancelRef.current = timeout(() => {\n      const json = JSON.stringify({\n        messages\n      });\n      const base64 = base64UrlEncode(json);\n      history.replaceState({\n        __N: false\n      }, \"\", `/?data=${base64}`);\n    }, 500);\n  });\n  const {\n    0: activeTab,\n    1: setActiveTab\n  } = useState(\"Preview\");\n  const modalManager = useRequiredContext(ModalManagerContext);\n\n  const spawnSettingsModal = () => modalManager.spawn({\n    render: () => /*#__PURE__*/_jsxDEV(PreferencesModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 40\n    }, this)\n  });\n\n  return useObserver(() => /*#__PURE__*/_jsxDEV(EditorManagerProvider, {\n    value: editorManager,\n    children: [/*#__PURE__*/_jsxDEV(PageHead, {\n      title: \"Discohook\",\n      description: \"The easiest way to build and send Discord messages with embeds using webhooks.\",\n      children: /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"referrer\",\n        content: \"strict-origin\"\n      }, \"referrer\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        items: [{\n          name: \"Settings\",\n          handler: spawnSettingsModal\n        }],\n        tabs: mobile ? {\n          items: [\"Editor\", \"Preview\"],\n          current: activeTab,\n          onChange: setActiveTab\n        } : undefined\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(View, {\n        children: [(!mobile || activeTab === \"Preview\") && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Preview, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), (!mobile || activeTab === \"Editor\") && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Editor, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this));\n}\nexport const getServerSideProps = context => {\n  var _context$req$headers$;\n\n  return {\n    props: {\n      state: getSnapshot(getEditorManagerFromQuery(context.query)),\n      mobile: /mobile/i.test((_context$req$headers$ = context.req.headers[\"user-agent\"]) !== null && _context$req$headers$ !== void 0 ? _context$req$headers$ : \"\")\n    }\n  };\n};","map":{"version":3,"sources":["F:/DiscordHookSite/pages/index.tsx"],"names":["useObserver","destroy","getSnapshot","React","useEffect","useRef","useState","styled","base64UrlEncode","ModalManagerContext","Footer","Header","PageHead","PreferencesModal","useAutorun","useLazyValue","useRequiredContext","timeout","Editor","EditorManager","EditorManagerProvider","getEditorManagerFromQuery","Preview","Container","div","View","main","attrs","translate","Main","props","state","mobile","editorManager","create","cancelRef","messages","map","message","data","current","json","JSON","stringify","base64","history","replaceState","__N","activeTab","setActiveTab","modalManager","spawnSettingsModal","spawn","render","name","handler","items","onChange","undefined","getServerSideProps","context","query","test","req","headers"],"mappings":"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","sourcesContent":["import { useObserver } from \"mobx-react-lite\"\r\nimport { destroy, getSnapshot, SnapshotOut } from \"mobx-state-tree\"\r\nimport type { GetServerSidePropsContext } from \"next\"\r\nimport React, { useEffect, useRef, useState } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { base64UrlEncode } from \"../common/base64/base64UrlEncode\"\r\nimport { ModalManagerContext } from \"../common/modal/ModalManagerContext\"\r\nimport { Footer } from \"../common/page/Footer\"\r\nimport { Header } from \"../common/page/Header\"\r\nimport { PageHead } from \"../common/page/PageHead\"\r\nimport { PreferencesModal } from \"../common/settings/PreferencesModal\"\r\nimport { useAutorun } from \"../common/state/useAutorun\"\r\nimport { useLazyValue } from \"../common/state/useLazyValue\"\r\nimport { useRequiredContext } from \"../common/state/useRequiredContext\"\r\nimport { timeout } from \"../common/utilities/timeout\"\r\nimport { Editor } from \"../modules/editor/Editor\"\r\nimport { EditorManager } from \"../modules/editor/EditorManager\"\r\nimport { EditorManagerProvider } from \"../modules/editor/EditorManagerContext\"\r\nimport { getEditorManagerFromQuery } from \"../modules/editor/getEditorManagerFromQuery\"\r\nimport { Preview } from \"../modules/message/preview/Preview\"\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  height: 100%;\r\n`\r\n\r\nconst View = styled.main.attrs({ translate: \"no\" })`\r\n  max-height: calc(100% - 48px);\r\n\r\n  display: flex;\r\n  flex-direction: row-reverse;\r\n  align-items: stretch;\r\n\r\n  flex: 1;\r\n\r\n  & > * {\r\n    flex: 1;\r\n    height: 100%;\r\n    overflow-y: scroll;\r\n  }\r\n`\r\n\r\nexport type MainProps = {\r\n  state: SnapshotOut<typeof EditorManager>\r\n  mobile: boolean\r\n}\r\n\r\nexport default function Main(props: MainProps) {\r\n  const { state, mobile } = props\r\n\r\n  const editorManager = useLazyValue(() => EditorManager.create(state))\r\n  useEffect(() => () => destroy(editorManager), [editorManager])\r\n\r\n  const cancelRef = useRef<() => void>()\r\n  useAutorun(() => {\r\n    const messages = editorManager.messages.map(message => ({\r\n      data: message.data,\r\n    }))\r\n\r\n    cancelRef.current?.()\r\n    cancelRef.current = timeout(() => {\r\n      const json = JSON.stringify({ messages })\r\n      const base64 = base64UrlEncode(json)\r\n\r\n      history.replaceState({ __N: false }, \"\", `/?data=${base64}`)\r\n    }, 500)\r\n  })\r\n\r\n  const [activeTab, setActiveTab] = useState<\"Preview\" | \"Editor\">(\"Preview\")\r\n\r\n  const modalManager = useRequiredContext(ModalManagerContext)\r\n  const spawnSettingsModal = () =>\r\n    modalManager.spawn({ render: () => <PreferencesModal /> })\r\n\r\n  return useObserver(() => (\r\n    <EditorManagerProvider value={editorManager}>\r\n      <PageHead\r\n        title=\"Discohook\"\r\n        description=\"The easiest way to build and send Discord messages with embeds using webhooks.\"\r\n      >\r\n        <meta key=\"referrer\" name=\"referrer\" content=\"strict-origin\" />\r\n      </PageHead>\r\n      <Container>\r\n        <Header\r\n          items={[\r\n            { name: \"Settings\", handler: spawnSettingsModal },\r\n          ]}\r\n          tabs={\r\n            mobile\r\n              ? {\r\n                  items: [\"Editor\", \"Preview\"],\r\n                  current: activeTab,\r\n                  onChange: setActiveTab,\r\n                }\r\n              : undefined\r\n          }\r\n        />\r\n        <View>\r\n          {(!mobile || activeTab === \"Preview\") && (\r\n            <div>\r\n              <Preview />\r\n            </div>\r\n          )}\r\n          {(!mobile || activeTab === \"Editor\") && (\r\n            <div>\r\n              <Editor />\r\n              <Footer />\r\n            </div>\r\n          )}\r\n        </View>\r\n      </Container>\r\n    </EditorManagerProvider>\r\n  ))\r\n}\r\n\r\nexport const getServerSideProps = (\r\n  context: GetServerSidePropsContext,\r\n): { props: MainProps } => {\r\n  return {\r\n    props: {\r\n      state: getSnapshot(getEditorManagerFromQuery(context.query)),\r\n      mobile: /mobile/i.test(context.req.headers[\"user-agent\"] ?? \"\"),\r\n    },\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}