{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\DiscordHookSite\\\\common\\\\layout\\\\IconButton.tsx\";\nimport React, { forwardRef } from \"react\";\nimport { Interactive } from \"../input/Interactive\";\nimport { TooltipWrapper } from \"../tooltip/TooltipWrapper\";\nimport { Icon } from \"./Icon\";\nimport { VisuallyHidden } from \"./VisuallyHidden\";\n\nfunction IconButtonRenderer(props, ref) {\n  const {\n    icon,\n    label,\n    className,\n    tooltip = true,\n    onClick: handleClick\n  } = props;\n\n  const render = anchorRef => {\n    return /*#__PURE__*/_jsxDEV(Interactive, {\n      className: className,\n      ref: ref,\n      onClick: handleClick,\n      children: [/*#__PURE__*/_jsxDEV(VisuallyHidden, {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Icon, {\n        ref: anchorRef,\n        \"aria-hidden\": true,\n        children: icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  };\n\n  return tooltip ? /*#__PURE__*/_jsxDEV(TooltipWrapper, {\n    label: label,\n    children: render\n  }, label, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this) : render();\n}\n\nexport const IconButton = /*#__PURE__*/forwardRef(IconButtonRenderer);","map":{"version":3,"sources":["F:/DiscordHookSite/common/layout/IconButton.tsx"],"names":["React","forwardRef","Interactive","TooltipWrapper","Icon","VisuallyHidden","IconButtonRenderer","props","ref","icon","label","className","tooltip","onClick","handleClick","render","anchorRef","IconButton"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,WAAT,QAA4B,sBAA5B;AAEA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,cAAT,QAA+B,kBAA/B;;AAUA,SAASC,kBAAT,CACEC,KADF,EAEEC,GAFF,EAGE;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,SAAf;AAA0BC,IAAAA,OAAO,GAAG,IAApC;AAA0CC,IAAAA,OAAO,EAAEC;AAAnD,MAAmEP,KAAzE;;AAEA,QAAMQ,MAAM,GAAIC,SAAD,IAAkC;AAC/C,wBACE,QAAC,WAAD;AAAa,MAAA,SAAS,EAAEL,SAAxB;AAAmC,MAAA,GAAG,EAAEH,GAAxC;AAA6C,MAAA,OAAO,EAAEM,WAAtD;AAAA,8BACE,QAAC,cAAD;AAAA,kBAAiBJ;AAAjB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,GAAG,EAAEM,SAAX;AAAsB,2BAAtB;AAAA,kBACGP;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD,GATD;;AAWA,SAAOG,OAAO,gBACZ,QAAC,cAAD;AAA4B,IAAA,KAAK,EAAEF,KAAnC;AAAA,cACGK;AADH,KAAqBL,KAArB;AAAA;AAAA;AAAA;AAAA,UADY,GAKZK,MAAM,EALR;AAOD;;AAED,OAAO,MAAME,UAAU,gBAAGhB,UAAU,CAACK,kBAAD,CAA7B","sourcesContent":["import type { ReactElement, RefObject } from \"react\"\r\nimport React, { forwardRef } from \"react\"\r\nimport { Interactive } from \"../input/Interactive\"\r\nimport type { ReactRef } from \"../state/ReactRef\"\r\nimport { TooltipWrapper } from \"../tooltip/TooltipWrapper\"\r\nimport { Icon } from \"./Icon\"\r\nimport { VisuallyHidden } from \"./VisuallyHidden\"\r\n\r\nexport type IconButtonProps = {\r\n  icon: ReactElement\r\n  label: string\r\n  className?: string\r\n  tooltip?: boolean\r\n  onClick?: () => void\r\n}\r\n\r\nfunction IconButtonRenderer(\r\n  props: IconButtonProps,\r\n  ref: ReactRef<HTMLButtonElement>,\r\n) {\r\n  const { icon, label, className, tooltip = true, onClick: handleClick } = props\r\n\r\n  const render = (anchorRef?: RefObject<never>) => {\r\n    return (\r\n      <Interactive className={className} ref={ref} onClick={handleClick}>\r\n        <VisuallyHidden>{label}</VisuallyHidden>\r\n        <Icon ref={anchorRef} aria-hidden>\r\n          {icon}\r\n        </Icon>\r\n      </Interactive>\r\n    )\r\n  }\r\n\r\n  return tooltip ? (\r\n    <TooltipWrapper key={label} label={label}>\r\n      {render}\r\n    </TooltipWrapper>\r\n  ) : (\r\n    render()\r\n  )\r\n}\r\n\r\nexport const IconButton = forwardRef(IconButtonRenderer)\r\n"]},"metadata":{},"sourceType":"module"}