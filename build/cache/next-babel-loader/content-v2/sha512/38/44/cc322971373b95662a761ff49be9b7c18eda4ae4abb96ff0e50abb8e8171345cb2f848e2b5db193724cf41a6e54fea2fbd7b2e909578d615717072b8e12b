{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\DiscordHookSite\\\\modules\\\\editor\\\\message\\\\PrimaryContentEditor.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useObserver } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { InputError } from \"../../../common/input/error/InputError\";\nimport { FileInputField } from \"../../../common/input/file/FileInputField\";\nimport { InputField } from \"../../../common/input/text/InputField\";\nimport { Section } from \"../../../common/layout/Section\";\nimport { Stack } from \"../../../common/layout/Stack\";\nexport function PrimaryContentEditor(props) {\n  const {\n    message,\n    form\n  } = props;\n  const isEditing = Boolean(message.reference);\n  return useObserver(() => /*#__PURE__*/_jsxDEV(Stack, {\n    gap: 12,\n    children: [/*#__PURE__*/_jsxDEV(InputField, _objectSpread({\n      id: `_${message.id}_content`,\n      label: \"Content\",\n      maxLength: 2000,\n      rows: 4,\n      error: form.field(\"content\").error\n    }, form.field(\"content\").inputProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      name: \"Profile\",\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        gap: 12,\n        children: [/*#__PURE__*/_jsxDEV(InputField, _objectSpread(_objectSpread({\n          id: `_${message.id}_username`,\n          label: \"Username\",\n          maxLength: 80,\n          error: form.field(\"username\").error\n        }, form.field(\"username\").inputProps), {}, {\n          disabled: isEditing\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputField, _objectSpread(_objectSpread({\n          id: `_${message.id}_avatar`,\n          label: \"Avatar URL\",\n          error: form.field(\"avatar\").error\n        }, form.field(\"avatar\").inputProps), {}, {\n          disabled: isEditing\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputError, {\n          variant: \"warning\",\n          error: isEditing ? \"You cannot edit the username and avatar for previously sent messages\" : undefined\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FileInputField, {\n      id: `_${message.id}_files`,\n      label: \"Files\",\n      maxSize: 8 * 1024 ** 2,\n      value: message.files,\n      onChange: files => message.set(\"files\", files)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this));\n}","map":{"version":3,"sources":["F:/DiscordHookSite/modules/editor/message/PrimaryContentEditor.tsx"],"names":["useObserver","React","InputError","FileInputField","InputField","Section","Stack","PrimaryContentEditor","props","message","form","isEditing","Boolean","reference","id","field","error","inputProps","undefined","files","set"],"mappings":";;;;;;;;;AAAA,SAASA,WAAT,QAA4B,iBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,wCAA3B;AACA,SAASC,cAAT,QAA+B,2CAA/B;AACA,SAASC,UAAT,QAA2B,uCAA3B;AACA,SAASC,OAAT,QAAwB,gCAAxB;AACA,SAASC,KAAT,QAAsB,8BAAtB;AASA,OAAO,SAASC,oBAAT,CAA8BC,KAA9B,EAAgE;AACrE,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBF,KAA1B;AAEA,QAAMG,SAAS,GAAGC,OAAO,CAACH,OAAO,CAACI,SAAT,CAAzB;AAEA,SAAOb,WAAW,CAAC,mBACjB,QAAC,KAAD;AAAO,IAAA,GAAG,EAAE,EAAZ;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,EAAE,EAAG,IAAGS,OAAO,CAACK,EAAG,UADrB;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,SAAS,EAAE,IAHb;AAIE,MAAA,IAAI,EAAE,CAJR;AAKE,MAAA,KAAK,EAAEJ,IAAI,CAACK,KAAL,CAAW,SAAX,EAAsBC;AAL/B,OAMMN,IAAI,CAACK,KAAL,CAAW,SAAX,EAAsBE,UAN5B;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,OAAD;AAAS,MAAA,IAAI,EAAC,SAAd;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,GAAG,EAAE,EAAZ;AAAA,gCACE,QAAC,UAAD;AACE,UAAA,EAAE,EAAG,IAAGR,OAAO,CAACK,EAAG,WADrB;AAEE,UAAA,KAAK,EAAC,UAFR;AAGE,UAAA,SAAS,EAAE,EAHb;AAIE,UAAA,KAAK,EAAEJ,IAAI,CAACK,KAAL,CAAW,UAAX,EAAuBC;AAJhC,WAKMN,IAAI,CAACK,KAAL,CAAW,UAAX,EAAuBE,UAL7B;AAME,UAAA,QAAQ,EAAEN;AANZ;AAAA;AAAA;AAAA;AAAA,gBADF,eASE,QAAC,UAAD;AACE,UAAA,EAAE,EAAG,IAAGF,OAAO,CAACK,EAAG,SADrB;AAEE,UAAA,KAAK,EAAC,YAFR;AAGE,UAAA,KAAK,EAAEJ,IAAI,CAACK,KAAL,CAAW,QAAX,EAAqBC;AAH9B,WAIMN,IAAI,CAACK,KAAL,CAAW,QAAX,EAAqBE,UAJ3B;AAKE,UAAA,QAAQ,EAAEN;AALZ;AAAA;AAAA;AAAA;AAAA,gBATF,eAgBE,QAAC,UAAD;AACE,UAAA,OAAO,EAAC,SADV;AAEE,UAAA,KAAK,EACHA,SAAS,GACL,sEADK,GAELO;AALR;AAAA;AAAA;AAAA;AAAA,gBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF,eAoCE,QAAC,cAAD;AACE,MAAA,EAAE,EAAG,IAAGT,OAAO,CAACK,EAAG,QADrB;AAEE,MAAA,KAAK,EAAC,OAFR;AAGE,MAAA,OAAO,EAAE,IAAI,QAAQ,CAHvB;AAIE,MAAA,KAAK,EAAEL,OAAO,CAACU,KAJjB;AAKE,MAAA,QAAQ,EAAEA,KAAK,IAAIV,OAAO,CAACW,GAAR,CAAY,OAAZ,EAAqBD,KAArB;AALrB;AAAA;AAAA;AAAA;AAAA,YApCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADgB,CAAlB;AA8CD","sourcesContent":["import { useObserver } from \"mobx-react-lite\"\r\nimport React from \"react\"\r\nimport { InputError } from \"../../../common/input/error/InputError\"\r\nimport { FileInputField } from \"../../../common/input/file/FileInputField\"\r\nimport { InputField } from \"../../../common/input/text/InputField\"\r\nimport { Section } from \"../../../common/layout/Section\"\r\nimport { Stack } from \"../../../common/layout/Stack\"\r\nimport type { MessageItemFormState } from \"../../message/state/editorForm\"\r\nimport type { MessageLike } from \"../../message/state/models/MessageModel\"\r\n\r\nexport type PrimaryContentEditorProps = {\r\n  message: MessageLike\r\n  form: MessageItemFormState\r\n}\r\n\r\nexport function PrimaryContentEditor(props: PrimaryContentEditorProps) {\r\n  const { message, form } = props\r\n\r\n  const isEditing = Boolean(message.reference)\r\n\r\n  return useObserver(() => (\r\n    <Stack gap={12}>\r\n      <InputField\r\n        id={`_${message.id}_content`}\r\n        label=\"Content\"\r\n        maxLength={2000}\r\n        rows={4}\r\n        error={form.field(\"content\").error}\r\n        {...form.field(\"content\").inputProps}\r\n      />\r\n      <Section name=\"Profile\">\r\n        <Stack gap={12}>\r\n          <InputField\r\n            id={`_${message.id}_username`}\r\n            label=\"Username\"\r\n            maxLength={80}\r\n            error={form.field(\"username\").error}\r\n            {...form.field(\"username\").inputProps}\r\n            disabled={isEditing}\r\n          />\r\n          <InputField\r\n            id={`_${message.id}_avatar`}\r\n            label=\"Avatar URL\"\r\n            error={form.field(\"avatar\").error}\r\n            {...form.field(\"avatar\").inputProps}\r\n            disabled={isEditing}\r\n          />\r\n          <InputError\r\n            variant=\"warning\"\r\n            error={\r\n              isEditing\r\n                ? \"You cannot edit the username and avatar for previously sent messages\"\r\n                : undefined\r\n            }\r\n          />\r\n        </Stack>\r\n      </Section>\r\n      <FileInputField\r\n        id={`_${message.id}_files`}\r\n        label=\"Files\"\r\n        maxSize={8 * 1024 ** 2}\r\n        value={message.files}\r\n        onChange={files => message.set(\"files\", files)}\r\n      />\r\n    </Stack>\r\n  ))\r\n}\r\n"]},"metadata":{},"sourceType":"module"}