{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\DiscordHookSite\\\\pages\\\\_app.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"@reach/slider/styles.css\";\nimport \"@reach/tabs/styles.css\";\nimport { autorun } from \"mobx\";\nimport { Observer } from \"mobx-react-lite\";\nimport App from \"next/app\";\nimport React from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport { ModalManager } from \"../common/modal/ModalManager\";\nimport { ModalManagerProvider } from \"../common/modal/ModalManagerContext\";\nimport { ModalOverlay } from \"../common/modal/ModalOverlay\";\nimport { ErrorBoundary } from \"../common/page/ErrorBoundary\";\nimport { PopoverManager } from \"../common/popover/PopoverManager\";\nimport { PopoverManagerProvider } from \"../common/popover/PopoverManagerContext\";\nimport { PopoverOverlay } from \"../common/popover/PopoverOverlay\";\nimport { PreferenceManager } from \"../common/settings/PreferenceManager\";\nimport { PreferenceManagerProvider } from \"../common/settings/PreferenceManagerContext\";\nimport { resetNextId } from \"../common/state/uid\";\nimport { GlobalStyle } from \"../common/theming/GlobalStyle\";\nimport { TooltipManager } from \"../common/tooltip/TooltipManager\";\nimport { TooltipManagerProvider } from \"../common/tooltip/TooltipManagerContext\";\nimport { TooltipOverlay } from \"../common/tooltip/TooltipOverlay\";\nexport default class Application extends App {\n  constructor(props) {\n    super(props);\n    this.preferenceManager = new PreferenceManager();\n    this.modalManager = new ModalManager();\n    this.popoverManager = new PopoverManager();\n    this.tooltipManager = new TooltipManager();\n    this.disposers = [];\n\n    if (true) {\n      resetNextId();\n    }\n  }\n\n  componentDidMount() {\n    this.preferenceManager.load();\n    this.disposers.push(autorun(() => this.preferenceManager.dump(), {\n      delay: 500\n    }));\n  }\n\n  componentWillUnmount() {\n    for (const disposer of this.disposers) {\n      disposer();\n    }\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Observer, {\n      children: () => /*#__PURE__*/_jsxDEV(ThemeProvider, {\n        theme: this.preferenceManager.theme,\n        children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n          children: /*#__PURE__*/_jsxDEV(PreferenceManagerProvider, {\n            value: this.preferenceManager,\n            children: /*#__PURE__*/_jsxDEV(ModalManagerProvider, {\n              value: this.modalManager,\n              children: /*#__PURE__*/_jsxDEV(PopoverManagerProvider, {\n                value: this.popoverManager,\n                children: /*#__PURE__*/_jsxDEV(TooltipManagerProvider, {\n                  value: this.tooltipManager,\n                  children: [/*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(PopoverOverlay, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TooltipOverlay, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["F:/DiscordHookSite/pages/_app.tsx"],"names":["autorun","Observer","App","React","ThemeProvider","ModalManager","ModalManagerProvider","ModalOverlay","ErrorBoundary","PopoverManager","PopoverManagerProvider","PopoverOverlay","PreferenceManager","PreferenceManagerProvider","resetNextId","GlobalStyle","TooltipManager","TooltipManagerProvider","TooltipOverlay","Application","constructor","props","preferenceManager","modalManager","popoverManager","tooltipManager","disposers","componentDidMount","load","push","dump","delay","componentWillUnmount","disposer","render","Component","pageProps","theme"],"mappings":"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","sourcesContent":["import \"@reach/slider/styles.css\"\r\nimport \"@reach/tabs/styles.css\"\r\nimport { autorun } from \"mobx\"\r\nimport { Observer } from \"mobx-react-lite\"\r\nimport App, { AppProps } from \"next/app\"\r\nimport React from \"react\"\r\nimport { ThemeProvider } from \"styled-components\"\r\nimport { ModalManager } from \"../common/modal/ModalManager\"\r\nimport { ModalManagerProvider } from \"../common/modal/ModalManagerContext\"\r\nimport { ModalOverlay } from \"../common/modal/ModalOverlay\"\r\nimport { ErrorBoundary } from \"../common/page/ErrorBoundary\"\r\nimport { PopoverManager } from \"../common/popover/PopoverManager\"\r\nimport { PopoverManagerProvider } from \"../common/popover/PopoverManagerContext\"\r\nimport { PopoverOverlay } from \"../common/popover/PopoverOverlay\"\r\nimport { PreferenceManager } from \"../common/settings/PreferenceManager\"\r\nimport { PreferenceManagerProvider } from \"../common/settings/PreferenceManagerContext\"\r\nimport { resetNextId } from \"../common/state/uid\"\r\nimport { GlobalStyle } from \"../common/theming/GlobalStyle\"\r\nimport { TooltipManager } from \"../common/tooltip/TooltipManager\"\r\nimport { TooltipManagerProvider } from \"../common/tooltip/TooltipManagerContext\"\r\nimport { TooltipOverlay } from \"../common/tooltip/TooltipOverlay\"\r\n\r\nexport default class Application extends App {\r\n  private readonly preferenceManager = new PreferenceManager()\r\n  private readonly modalManager = new ModalManager()\r\n  private readonly popoverManager = new PopoverManager()\r\n  private readonly tooltipManager = new TooltipManager()\r\n\r\n  private readonly disposers: (() => void)[] = []\r\n\r\n  constructor(props: Readonly<AppProps>) {\r\n    super(props)\r\n\r\n    if (typeof window === \"undefined\") {\r\n      resetNextId()\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.preferenceManager.load()\r\n\r\n    this.disposers.push(\r\n      autorun(() => this.preferenceManager.dump(), {\r\n        delay: 500,\r\n      }),\r\n    )\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    for (const disposer of this.disposers) {\r\n      disposer()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { Component, pageProps } = this.props\r\n\r\n    return (\r\n      <Observer>\r\n        {() => (\r\n          <ThemeProvider theme={this.preferenceManager.theme}>\r\n            <GlobalStyle />\r\n            <ErrorBoundary>\r\n              <PreferenceManagerProvider value={this.preferenceManager}>\r\n                <ModalManagerProvider value={this.modalManager}>\r\n                  <PopoverManagerProvider value={this.popoverManager}>\r\n                    <TooltipManagerProvider value={this.tooltipManager}>\r\n                      <Component {...pageProps} />\r\n                      <ModalOverlay />\r\n                      <PopoverOverlay />\r\n                      <TooltipOverlay />\r\n                    </TooltipManagerProvider>\r\n                  </PopoverManagerProvider>\r\n                </ModalManagerProvider>\r\n              </PreferenceManagerProvider>\r\n            </ErrorBoundary>\r\n          </ThemeProvider>\r\n        )}\r\n      </Observer>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}