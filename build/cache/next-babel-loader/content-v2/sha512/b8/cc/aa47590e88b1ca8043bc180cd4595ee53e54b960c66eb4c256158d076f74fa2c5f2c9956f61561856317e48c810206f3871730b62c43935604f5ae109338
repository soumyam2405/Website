{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useObserver } from \"mobx-react-lite\";\nimport { rem } from \"polished\";\nimport React, { useRef } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { useReaction } from \"../../../common/state/useReaction\";\nimport { Markdown } from \"../../markdown/Markdown\";\nimport { MarkdownContainer } from \"../../markdown/styles/MarkdownContainer\";\nimport { EmbedAuthor } from \"./EmbedAuthor\";\nimport { EmbedField } from \"./EmbedField\";\nimport { EmbedFooter } from \"./EmbedFooter\";\nimport { EmbedGallery } from \"./EmbedGallery\";\nimport { RichEmbedContainer } from \"./RichEmbedContainer\";\nconst EmbedGrid = styled.div.withConfig({\n  componentId: \"sc-3qrykn-0\"\n})([\"padding:\", \" \", \" \", \" \", \";display:inline-grid;grid-template-columns:auto;grid-template-rows:auto;\"], rem(8), rem(16), rem(16), rem(12));\nconst EmbedTitleNormal = styled.span.withConfig({\n  componentId: \"sc-3qrykn-1\"\n})([\"min-width:0;display:inline-block;margin:8px 0 0;grid-column:1 / 2;& > \", \"{font-size:\", \";font-weight:600;color:\", \";}\"], MarkdownContainer, rem(16), ({\n  theme\n}) => theme.header.primary);\nconst EmbedTitleLink = styled(EmbedTitleNormal.withComponent(\"a\")).withConfig({\n  componentId: \"sc-3qrykn-2\"\n})([\"& > \", \"{color:\", \";}\"], MarkdownContainer, ({\n  theme\n}) => theme.text.link);\nconst EmbedDescription = styled.div.withConfig({\n  componentId: \"sc-3qrykn-3\"\n})([\"min-width:0;margin:8px 0 0;grid-column:1 / 2;& > \", \"{font-size:\", \";color:\", \";line-height:\", \";white-space:pre-line;}\"], MarkdownContainer, rem(14), ({\n  theme\n}) => theme.text.normal, rem(18));\nconst EmbedFields = styled.div.withConfig({\n  componentId: \"sc-3qrykn-4\"\n})([\"min-width:0;margin:8px 0 0;display:grid;grid-column:1 / 2;grid-gap:8px;\"]);\nconst EmbedImage = styled.img.withConfig({\n  componentId: \"sc-3qrykn-5\"\n})([\"min-width:0;max-width:400px;max-height:300px;margin:16px 0 0;border-radius:4px;cursor:pointer;grid-column:1 / 2;\", \";\"], ({\n  hasThumbnail\n}) => hasThumbnail && css([\"grid-column:1 / 3;\"]));\nconst EmbedThumbnailContainer = styled.div.withConfig({\n  componentId: \"sc-3qrykn-6\"\n})([\"margin:8px 0 0 16px;grid-row:1 / 8;grid-column:2 / 3;justify-self:end;cursor:pointer;\"]);\nconst EmbedThumbnail = styled.img.withConfig({\n  componentId: \"sc-3qrykn-7\"\n})([\"max-width:80px;max-height:80px;border-radius:4px;\"]);\nexport function RichEmbed(props) {\n  const {\n    embed\n  } = props;\n  const containerRef = useRef(null);\n  const imageRef = useRef(null);\n  useReaction(() => embed.gallery.length === 1 && embed.gallery[0], () => {\n    const {\n      current: container\n    } = containerRef;\n    if (!container) return;\n    container.style.maxWidth = \"\";\n  });\n  return useObserver(() => {\n    const color = embed.color.raw === 0xffffff ? undefined : embed.color.hex;\n    return /*#__PURE__*/_jsx(RichEmbedContainer, {\n      ref: containerRef,\n      style: {\n        borderColor: color\n      },\n      children: /*#__PURE__*/_jsxs(EmbedGrid, {\n        children: [embed.hasAuthor && /*#__PURE__*/_jsx(EmbedAuthor, {\n          embed: embed\n        }), embed.hasTitle && (embed.url ? /*#__PURE__*/_jsx(EmbedTitleLink, {\n          href: embed.url,\n          rel: \"noopener noreferrer nofollow ugc\",\n          target: \"_blank\",\n          children: /*#__PURE__*/_jsx(Markdown, {\n            content: embed.title,\n            type: \"embed-header\"\n          })\n        }) : /*#__PURE__*/_jsx(EmbedTitleNormal, {\n          children: /*#__PURE__*/_jsx(Markdown, {\n            content: embed.title,\n            type: \"embed-header\"\n          })\n        })), embed.hasDescription && /*#__PURE__*/_jsx(EmbedDescription, {\n          children: /*#__PURE__*/_jsx(Markdown, {\n            content: embed.description,\n            type: \"embed-content\"\n          })\n        }), embed.fields.length > 0 && /*#__PURE__*/_jsx(EmbedFields, {\n          children: embed.fields.map(field => /*#__PURE__*/_jsx(EmbedField, {\n            field: field\n          }, field.id))\n        }), embed.gallery.length > 1 ? /*#__PURE__*/_jsx(EmbedGallery, {\n          embed: embed\n        }) : embed.gallery.length === 1 ? /*#__PURE__*/_jsx(EmbedImage, {\n          ref: imageRef,\n          src: embed.gallery[0],\n          alt: \"Image\",\n          hasThumbnail: Boolean(embed.thumbnail),\n          onLoad: () => {\n            const {\n              current: container\n            } = containerRef;\n            const {\n              current: image\n            } = imageRef;\n            if (!container || !image) return;\n            const {\n              width\n            } = image.getBoundingClientRect();\n            container.style.maxWidth = width >= 300 ? `${width + 32}px` : \"\";\n          }\n        }) : undefined, embed.hasFooter && /*#__PURE__*/_jsx(EmbedFooter, {\n          embed: embed\n        }), embed.thumbnail && /*#__PURE__*/_jsx(EmbedThumbnailContainer, {\n          children: /*#__PURE__*/_jsx(EmbedThumbnail, {\n            src: embed.thumbnail,\n            alt: \"Thumbnail\"\n          })\n        })]\n      })\n    });\n  });\n}","map":{"version":3,"sources":["F:/DiscordHookSite/modules/message/preview/RichEmbed.tsx"],"names":["useObserver","rem","React","useRef","styled","css","useReaction","Markdown","MarkdownContainer","EmbedAuthor","EmbedField","EmbedFooter","EmbedGallery","RichEmbedContainer","EmbedGrid","div","EmbedTitleNormal","span","theme","header","primary","EmbedTitleLink","withComponent","text","link","EmbedDescription","normal","EmbedFields","EmbedImage","img","hasThumbnail","EmbedThumbnailContainer","EmbedThumbnail","RichEmbed","props","embed","containerRef","imageRef","gallery","length","current","container","style","maxWidth","color","raw","undefined","hex","borderColor","hasAuthor","hasTitle","url","title","hasDescription","description","fields","map","field","id","Boolean","thumbnail","image","width","getBoundingClientRect","hasFooter"],"mappings":"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","sourcesContent":["import { useObserver } from \"mobx-react-lite\"\r\nimport { rem } from \"polished\"\r\nimport React, { useRef } from \"react\"\r\nimport styled, { css } from \"styled-components\"\r\nimport { useReaction } from \"../../../common/state/useReaction\"\r\nimport { Markdown } from \"../../markdown/Markdown\"\r\nimport { MarkdownContainer } from \"../../markdown/styles/MarkdownContainer\"\r\nimport type { EmbedLike } from \"../state/models/EmbedModel\"\r\nimport { EmbedAuthor } from \"./EmbedAuthor\"\r\nimport { EmbedField } from \"./EmbedField\"\r\nimport { EmbedFooter } from \"./EmbedFooter\"\r\nimport { EmbedGallery } from \"./EmbedGallery\"\r\nimport { RichEmbedContainer } from \"./RichEmbedContainer\"\r\n\r\nconst EmbedGrid = styled.div`\r\n  padding: ${rem(8)} ${rem(16)} ${rem(16)} ${rem(12)};\r\n  display: inline-grid;\r\n\r\n  grid-template-columns: auto;\r\n  grid-template-rows: auto;\r\n`\r\n\r\nconst EmbedTitleNormal = styled.span`\r\n  min-width: 0;\r\n\r\n  display: inline-block;\r\n  margin: 8px 0 0;\r\n  grid-column: 1 / 2;\r\n\r\n  & > ${MarkdownContainer} {\r\n    font-size: ${rem(16)};\r\n    font-weight: 600;\r\n    color: ${({ theme }) => theme.header.primary};\r\n  }\r\n`\r\n\r\nconst EmbedTitleLink = styled(EmbedTitleNormal.withComponent(\"a\"))`\r\n  & > ${MarkdownContainer} {\r\n    color: ${({ theme }) => theme.text.link};\r\n  }\r\n`\r\n\r\nconst EmbedDescription = styled.div`\r\n  min-width: 0;\r\n\r\n  margin: 8px 0 0;\r\n  grid-column: 1 / 2;\r\n\r\n  & > ${MarkdownContainer} {\r\n    font-size: ${rem(14)};\r\n    color: ${({ theme }) => theme.text.normal};\r\n\r\n    line-height: ${rem(18)};\r\n    white-space: pre-line;\r\n  }\r\n`\r\n\r\nconst EmbedFields = styled.div`\r\n  min-width: 0;\r\n\r\n  margin: 8px 0 0;\r\n\r\n  display: grid;\r\n  grid-column: 1 / 2;\r\n  grid-gap: 8px;\r\n`\r\n\r\nconst EmbedImage = styled.img<{ hasThumbnail?: boolean }>`\r\n  min-width: 0;\r\n\r\n  max-width: 400px;\r\n  max-height: 300px;\r\n\r\n  margin: 16px 0 0;\r\n  border-radius: 4px;\r\n\r\n  cursor: pointer;\r\n\r\n  grid-column: 1 / 2;\r\n\r\n  ${({ hasThumbnail }) =>\r\n    hasThumbnail &&\r\n    css`\r\n      grid-column: 1 / 3;\r\n    `};\r\n`\r\n\r\nconst EmbedThumbnailContainer = styled.div`\r\n  margin: 8px 0 0 16px;\r\n\r\n  grid-row: 1 / 8;\r\n  grid-column: 2 / 3;\r\n  justify-self: end;\r\n\r\n  cursor: pointer;\r\n`\r\n\r\nconst EmbedThumbnail = styled.img`\r\n  max-width: 80px;\r\n  max-height: 80px;\r\n\r\n  border-radius: 4px;\r\n`\r\n\r\nexport type RichEmbedProps = {\r\n  embed: EmbedLike\r\n}\r\n\r\nexport function RichEmbed(props: RichEmbedProps) {\r\n  const { embed } = props\r\n\r\n  const containerRef = useRef<HTMLDivElement>(null)\r\n  const imageRef = useRef<HTMLImageElement>(null)\r\n\r\n  useReaction(\r\n    () => embed.gallery.length === 1 && embed.gallery[0],\r\n    () => {\r\n      const { current: container } = containerRef\r\n      if (!container) return\r\n\r\n      container.style.maxWidth = \"\"\r\n    },\r\n  )\r\n\r\n  return useObserver(() => {\r\n    const color = embed.color.raw === 0xffffff ? undefined : embed.color.hex\r\n\r\n    return (\r\n      <RichEmbedContainer ref={containerRef} style={{ borderColor: color }}>\r\n        <EmbedGrid>\r\n          {embed.hasAuthor && <EmbedAuthor embed={embed} />}\r\n          {embed.hasTitle &&\r\n            (embed.url ? (\r\n              <EmbedTitleLink\r\n                href={embed.url}\r\n                rel=\"noopener noreferrer nofollow ugc\"\r\n                target=\"_blank\"\r\n              >\r\n                <Markdown content={embed.title} type=\"embed-header\" />\r\n              </EmbedTitleLink>\r\n            ) : (\r\n              <EmbedTitleNormal>\r\n                <Markdown content={embed.title} type=\"embed-header\" />\r\n              </EmbedTitleNormal>\r\n            ))}\r\n          {embed.hasDescription && (\r\n            <EmbedDescription>\r\n              <Markdown content={embed.description} type=\"embed-content\" />\r\n            </EmbedDescription>\r\n          )}\r\n          {embed.fields.length > 0 && (\r\n            <EmbedFields>\r\n              {embed.fields.map(field => (\r\n                <EmbedField key={field.id} field={field} />\r\n              ))}\r\n            </EmbedFields>\r\n          )}\r\n          {embed.gallery.length > 1 ? (\r\n            <EmbedGallery embed={embed} />\r\n          ) : embed.gallery.length === 1 ? (\r\n            <EmbedImage\r\n              ref={imageRef}\r\n              src={embed.gallery[0]}\r\n              alt=\"Image\"\r\n              hasThumbnail={Boolean(embed.thumbnail)}\r\n              onLoad={() => {\r\n                const { current: container } = containerRef\r\n                const { current: image } = imageRef\r\n                if (!container || !image) return\r\n\r\n                const { width } = image.getBoundingClientRect()\r\n                container.style.maxWidth = width >= 300 ? `${width + 32}px` : \"\"\r\n              }}\r\n            />\r\n          ) : undefined}\r\n          {embed.hasFooter && <EmbedFooter embed={embed} />}\r\n          {embed.thumbnail && (\r\n            <EmbedThumbnailContainer>\r\n              <EmbedThumbnail src={embed.thumbnail} alt=\"Thumbnail\" />\r\n            </EmbedThumbnailContainer>\r\n          )}\r\n        </EmbedGrid>\r\n      </RichEmbedContainer>\r\n    )\r\n  })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}