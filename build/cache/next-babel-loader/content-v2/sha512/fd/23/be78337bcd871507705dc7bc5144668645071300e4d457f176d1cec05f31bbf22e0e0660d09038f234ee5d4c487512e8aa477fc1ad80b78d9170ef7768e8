{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\DiscordHookSite\\\\modules\\\\markdown\\\\Markdown.tsx\";\nimport React, { memo } from \"react\";\nimport { PARSERS } from \"./parsers/parsers\";\nimport { MarkdownContainer } from \"./styles/MarkdownContainer\";\n\nfunction MarkdownRenderer(props) {\n  const {\n    className,\n    content,\n    type = \"default\"\n  } = props;\n  const parse = PARSERS[type];\n  return /*#__PURE__*/_jsxDEV(MarkdownContainer, {\n    className: className,\n    children: parse(content.trim())\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MarkdownRenderer;\nexport const Markdown = /*#__PURE__*/memo(MarkdownRenderer);\n_c2 = Markdown;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MarkdownRenderer\");\n$RefreshReg$(_c2, \"Markdown\");","map":{"version":3,"sources":["F:/DiscordHookSite/modules/markdown/Markdown.tsx"],"names":["React","memo","PARSERS","MarkdownContainer","MarkdownRenderer","props","className","content","type","parse","trim","Markdown"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,iBAAT,QAAkC,4BAAlC;;AAQA,SAASC,gBAAT,CAA0BC,KAA1B,EAAgD;AAC9C,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA,IAAI,GAAG;AAA7B,MAA2CH,KAAjD;AAEA,QAAMI,KAAK,GAAGP,OAAO,CAACM,IAAD,CAArB;AAEA,sBACE,QAAC,iBAAD;AAAmB,IAAA,SAAS,EAAEF,SAA9B;AAAA,cACGG,KAAK,CAACF,OAAO,CAACG,IAAR,EAAD;AADR;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;KAVQN,gB;AAYT,OAAO,MAAMO,QAAQ,gBAAGV,IAAI,CAACG,gBAAD,CAArB;MAAMO,Q","sourcesContent":["import React, { memo } from \"react\"\r\nimport { PARSERS } from \"./parsers/parsers\"\r\nimport { MarkdownContainer } from \"./styles/MarkdownContainer\"\r\n\r\nexport type MarkdownProps = {\r\n  className?: string\r\n  content: string\r\n  type?: keyof typeof PARSERS\r\n}\r\n\r\nfunction MarkdownRenderer(props: MarkdownProps) {\r\n  const { className, content, type = \"default\" } = props\r\n\r\n  const parse = PARSERS[type]\r\n\r\n  return (\r\n    <MarkdownContainer className={className}>\r\n      {parse(content.trim())}\r\n    </MarkdownContainer>\r\n  )\r\n}\r\n\r\nexport const Markdown = memo(MarkdownRenderer)\r\n"]},"metadata":{},"sourceType":"module"}