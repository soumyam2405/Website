{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\DiscordHookSite\\\\common\\\\utilities\\\\omitProps.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nexport const omitProp = (Component, ...omit) => {\n  return (_ref) => {\n    let props = Object.assign({}, _ref);\n\n    for (const prop of omit) {\n      delete props[prop];\n    }\n\n    return /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  };\n};","map":{"version":3,"sources":["F:/DiscordHookSite/common/utilities/omitProps.tsx"],"names":["React","omitProp","Component","omit","props","prop"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAqC,OAArC;AAEA,OAAO,MAAMC,QAAQ,GAAG,CACtBC,SADsB,EAEtB,GAAGC,IAFmB,KAGnB;AACH,SAAO,UAAqB;AAAA,QAAfC,KAAe;;AAC1B,SAAK,MAAMC,IAAX,IAAmBF,IAAnB,EAAyB;AACvB,aAAOC,KAAK,CAACC,IAAD,CAAZ;AACD;;AAED,wBAAO,QAAC,SAAD,oBAAeD,KAAf;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAND;AAOD,CAXM","sourcesContent":["import React, { ComponentType } from \"react\"\r\n\r\nexport const omitProp = <P extends Record<string, unknown>>(\r\n  Component: ComponentType<P>,\r\n  ...omit: string[]\r\n) => {\r\n  return ({ ...props }: P) => {\r\n    for (const prop of omit) {\r\n      delete props[prop]\r\n    }\r\n\r\n    return <Component {...props} />\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}