{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { overflow } from \"../../icons/overflow\";\nimport { usePopover } from \"../popover/usePopover\";\nimport { ActionOverflowMenu } from \"./ActionOverflowMenu\";\nimport { IconButton } from \"./IconButton\";\nconst Container = styled.div.withConfig({\n  componentId: \"sc-119c5qa-0\"\n})([\"display:flex;justify-content:end;margin:0 -8px;\"]);\nexport function ActionButtons(props) {\n  const {\n    actions\n  } = props;\n  const overflowActions = actions.filter(action => action.overflow);\n  const moreRef = useRef(null);\n  const popover = usePopover({\n    ref: moreRef,\n    render: () => /*#__PURE__*/_jsx(ActionOverflowMenu, {\n      actions: overflowActions\n    }),\n    placement: \"bottom-end\"\n  });\n  return /*#__PURE__*/_jsxs(Container, {\n    children: [actions.map(action => !action.overflow && /*#__PURE__*/_jsx(IconButton, {\n      icon: action.icon,\n      label: action.label,\n      onClick: () => action.handler()\n    }, action.label)), overflowActions.length > 0 && /*#__PURE__*/_jsx(IconButton, {\n      ref: moreRef,\n      icon: overflow,\n      label: \"More actions\",\n      tooltip: false,\n      onClick: () => popover.spawn()\n    })]\n  });\n}","map":{"version":3,"sources":["F:/DiscordHookSite/common/layout/ActionButtons.tsx"],"names":["React","useRef","styled","overflow","usePopover","ActionOverflowMenu","IconButton","Container","div","ActionButtons","props","actions","overflowActions","filter","action","moreRef","popover","ref","render","placement","map","icon","label","handler","length","spawn"],"mappings":";;AAAA,OAAOA,KAAP,IAA8BC,MAA9B,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,MAAMC,SAAS,GAAGL,MAAM,CAACM,GAAV;AAAA;AAAA,uDAAf;AAiBA,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAAkD;AACvD,QAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AAEA,QAAME,eAAe,GAAGD,OAAO,CAACE,MAAR,CAAeC,MAAM,IAAIA,MAAM,CAACX,QAAhC,CAAxB;AAEA,QAAMY,OAAO,GAAGd,MAAM,CAAoB,IAApB,CAAtB;AACA,QAAMe,OAAO,GAAGZ,UAAU,CAAC;AACzBa,IAAAA,GAAG,EAAEF,OADoB;AAEzBG,IAAAA,MAAM,EAAE,mBAAM,KAAC,kBAAD;AAAoB,MAAA,OAAO,EAAEN;AAA7B,MAFW;AAGzBO,IAAAA,SAAS,EAAE;AAHc,GAAD,CAA1B;AAMA,sBACE,MAAC,SAAD;AAAA,eACGR,OAAO,CAACS,GAAR,CACCN,MAAM,IACJ,CAACA,MAAM,CAACX,QAAR,iBACE,KAAC,UAAD;AAEE,MAAA,IAAI,EAAEW,MAAM,CAACO,IAFf;AAGE,MAAA,KAAK,EAAEP,MAAM,CAACQ,KAHhB;AAIE,MAAA,OAAO,EAAE,MAAMR,MAAM,CAACS,OAAP;AAJjB,OACOT,MAAM,CAACQ,KADd,CAHL,CADH,EAYGV,eAAe,CAACY,MAAhB,GAAyB,CAAzB,iBACC,KAAC,UAAD;AACE,MAAA,GAAG,EAAET,OADP;AAEE,MAAA,IAAI,EAAEZ,QAFR;AAGE,MAAA,KAAK,EAAC,cAHR;AAIE,MAAA,OAAO,EAAE,KAJX;AAKE,MAAA,OAAO,EAAE,MAAMa,OAAO,CAACS,KAAR;AALjB,MAbJ;AAAA,IADF;AAwBD","sourcesContent":["import React, { ReactElement, useRef } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { overflow } from \"../../icons/overflow\"\r\nimport { usePopover } from \"../popover/usePopover\"\r\nimport { ActionOverflowMenu } from \"./ActionOverflowMenu\"\r\nimport { IconButton } from \"./IconButton\"\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: end;\r\n  margin: 0 -8px;\r\n`\r\n\r\nexport type Action = {\r\n  icon: ReactElement\r\n  label: string\r\n  handler: () => void\r\n  overflow?: boolean\r\n}\r\n\r\nexport type ActionButtonsProps = {\r\n  actions: Action[]\r\n}\r\n\r\nexport function ActionButtons(props: ActionButtonsProps) {\r\n  const { actions } = props\r\n\r\n  const overflowActions = actions.filter(action => action.overflow)\r\n\r\n  const moreRef = useRef<HTMLButtonElement>(null)\r\n  const popover = usePopover({\r\n    ref: moreRef,\r\n    render: () => <ActionOverflowMenu actions={overflowActions} />,\r\n    placement: \"bottom-end\",\r\n  })\r\n\r\n  return (\r\n    <Container>\r\n      {actions.map(\r\n        action =>\r\n          !action.overflow && (\r\n            <IconButton\r\n              key={action.label}\r\n              icon={action.icon}\r\n              label={action.label}\r\n              onClick={() => action.handler()}\r\n            />\r\n          ),\r\n      )}\r\n      {overflowActions.length > 0 && (\r\n        <IconButton\r\n          ref={moreRef}\r\n          icon={overflow}\r\n          label=\"More actions\"\r\n          tooltip={false}\r\n          onClick={() => popover.spawn()}\r\n        />\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}