{"ast":null,"code":"import { ATTACHMENT_TYPE_MATCHERS } from \"../matchers\";\nexport const getAttachmentType = (name, mime) => {\n  for (const descriptor of ATTACHMENT_TYPE_MATCHERS) {\n    const regex = new RegExp(descriptor.regex);\n\n    if (regex.test(descriptor.check === \"name\" ? name : mime)) {\n      return descriptor.type;\n    }\n  }\n\n  return \"unknown\";\n};","map":{"version":3,"sources":["F:/DiscordHookSite/modules/message/preview/attachment/helpers/getAttachmentType.ts"],"names":["ATTACHMENT_TYPE_MATCHERS","getAttachmentType","name","mime","descriptor","regex","RegExp","test","check","type"],"mappings":"AACA,SAASA,wBAAT,QAAyC,aAAzC;AAEA,OAAO,MAAMC,iBAAiB,GAAG,CAC/BC,IAD+B,EAE/BC,IAF+B,KAGZ;AACnB,OAAK,MAAMC,UAAX,IAAyBJ,wBAAzB,EAAmD;AACjD,UAAMK,KAAK,GAAG,IAAIC,MAAJ,CAAWF,UAAU,CAACC,KAAtB,CAAd;;AACA,QAAIA,KAAK,CAACE,IAAN,CAAWH,UAAU,CAACI,KAAX,KAAqB,MAArB,GAA8BN,IAA9B,GAAqCC,IAAhD,CAAJ,EAA2D;AACzD,aAAOC,UAAU,CAACK,IAAlB;AACD;AACF;;AAED,SAAO,SAAP;AACD,CAZM","sourcesContent":["import type { AttachmentType } from \"../AttachmentType\"\r\nimport { ATTACHMENT_TYPE_MATCHERS } from \"../matchers\"\r\n\r\nexport const getAttachmentType = (\r\n  name: string,\r\n  mime: string,\r\n): AttachmentType => {\r\n  for (const descriptor of ATTACHMENT_TYPE_MATCHERS) {\r\n    const regex = new RegExp(descriptor.regex)\r\n    if (regex.test(descriptor.check === \"name\" ? name : mime)) {\r\n      return descriptor.type\r\n    }\r\n  }\r\n\r\n  return \"unknown\"\r\n}\r\n"]},"metadata":{},"sourceType":"module"}