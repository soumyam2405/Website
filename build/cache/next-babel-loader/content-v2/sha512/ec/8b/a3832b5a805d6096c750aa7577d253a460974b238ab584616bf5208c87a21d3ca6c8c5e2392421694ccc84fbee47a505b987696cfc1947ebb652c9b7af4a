{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\DiscordHookSite\\\\modules\\\\message\\\\preview\\\\attachment\\\\components\\\\ImageAttachment.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useLayoutEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { DefaultAttachment } from \"./DefaultAttachment\";\nconst Image = styled.img.withConfig({\n  displayName: \"ImageAttachment__Image\",\n  componentId: \"sc-17lta1j-0\"\n})([\"display:block;max-width:400px;max-height:300px;border-radius:3px;cursor:pointer;\"]);\n_c = Image;\nexport function ImageAttachment(props) {\n  _s();\n\n  const {\n    file\n  } = props;\n  const {\n    0: objectUrl,\n    1: setObjectUrl\n  } = useState(\"\");\n  useLayoutEffect(() => {\n    const objectUrl = URL.createObjectURL(file);\n    setObjectUrl(objectUrl);\n    return () => {\n      if (objectUrl) URL.revokeObjectURL(objectUrl);\n    };\n  }, [file]);\n  const {\n    0: errored,\n    1: setErrored\n  } = useState(false);\n  useLayoutEffect(() => setErrored(false), [objectUrl]);\n\n  if (errored) {\n    return /*#__PURE__*/_jsxDEV(DefaultAttachment, {\n      file: file,\n      type: \"image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Image, {\n    src: objectUrl,\n    alt: file.name,\n    onError: () => setErrored(true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ImageAttachment, \"NO5kb0gnaMR/nNcuncissKyF+Bc=\");\n\n_c2 = ImageAttachment;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Image\");\n$RefreshReg$(_c2, \"ImageAttachment\");","map":{"version":3,"sources":["F:/DiscordHookSite/modules/message/preview/attachment/components/ImageAttachment.tsx"],"names":["React","useLayoutEffect","useState","styled","DefaultAttachment","Image","img","ImageAttachment","props","file","objectUrl","setObjectUrl","URL","createObjectURL","revokeObjectURL","errored","setErrored","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,eAAhB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AAEA,MAAMC,KAAK,GAAGF,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,wFAAX;KAAMD,K;AAcN,OAAO,SAASE,eAAT,CAAyBC,KAAzB,EAAsD;AAAA;;AAC3D,QAAM;AAAEC,IAAAA;AAAF,MAAWD,KAAjB;AAEA,QAAM;AAAA,OAACE,SAAD;AAAA,OAAYC;AAAZ,MAA4BT,QAAQ,CAAC,EAAD,CAA1C;AACAD,EAAAA,eAAe,CAAC,MAAM;AACpB,UAAMS,SAAS,GAAGE,GAAG,CAACC,eAAJ,CAAoBJ,IAApB,CAAlB;AACAE,IAAAA,YAAY,CAACD,SAAD,CAAZ;AAEA,WAAO,MAAM;AACX,UAAIA,SAAJ,EAAeE,GAAG,CAACE,eAAJ,CAAoBJ,SAApB;AAChB,KAFD;AAGD,GAPc,EAOZ,CAACD,IAAD,CAPY,CAAf;AASA,QAAM;AAAA,OAACM,OAAD;AAAA,OAAUC;AAAV,MAAwBd,QAAQ,CAAC,KAAD,CAAtC;AACAD,EAAAA,eAAe,CAAC,MAAMe,UAAU,CAAC,KAAD,CAAjB,EAA0B,CAACN,SAAD,CAA1B,CAAf;;AAEA,MAAIK,OAAJ,EAAa;AACX,wBAAO,QAAC,iBAAD;AAAmB,MAAA,IAAI,EAAEN,IAAzB;AAA+B,MAAA,IAAI,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,KAAD;AAAO,IAAA,GAAG,EAAEC,SAAZ;AAAuB,IAAA,GAAG,EAAED,IAAI,CAACQ,IAAjC;AAAuC,IAAA,OAAO,EAAE,MAAMD,UAAU,CAAC,IAAD;AAAhE;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;GAvBeT,e;;MAAAA,e","sourcesContent":["import React, { useLayoutEffect, useState } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { DefaultAttachment } from \"./DefaultAttachment\"\r\n\r\nconst Image = styled.img`\r\n  display: block;\r\n\r\n  max-width: 400px;\r\n  max-height: 300px;\r\n\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n`\r\n\r\nexport type ImageAttachmentProps = {\r\n  file: File\r\n}\r\n\r\nexport function ImageAttachment(props: ImageAttachmentProps) {\r\n  const { file } = props\r\n\r\n  const [objectUrl, setObjectUrl] = useState(\"\")\r\n  useLayoutEffect(() => {\r\n    const objectUrl = URL.createObjectURL(file)\r\n    setObjectUrl(objectUrl)\r\n\r\n    return () => {\r\n      if (objectUrl) URL.revokeObjectURL(objectUrl)\r\n    }\r\n  }, [file])\r\n\r\n  const [errored, setErrored] = useState(false)\r\n  useLayoutEffect(() => setErrored(false), [objectUrl])\r\n\r\n  if (errored) {\r\n    return <DefaultAttachment file={file} type=\"image\" />\r\n  }\r\n\r\n  return (\r\n    <Image src={objectUrl} alt={file.name} onError={() => setErrored(true)} />\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}