{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\DiscordHookSite\\\\modules\\\\database\\\\persist\\\\PersistentStorageWarning.tsx\",\n    _s = $RefreshSig$();\n\nimport { useObserver } from \"mobx-react-lite\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { PrimaryButton } from \"../../../common/input/button/PrimaryButton\";\nimport { SecondaryButton } from \"../../../common/input/button/SecondaryButton\";\nimport { ButtonRow } from \"../../../common/layout/ButtonRow\";\nimport { ModalManagerContext } from \"../../../common/modal/ModalManagerContext\";\nimport { useRequiredContext } from \"../../../common/state/useRequiredContext\";\nimport { Markdown } from \"../../markdown/Markdown\";\nimport { DatabaseManagerContext } from \"../DatabaseManagerContext\";\nimport { PushNotificationModal } from \"./PushNotificationModal\";\nconst Container = styled.div.withConfig({\n  displayName: \"PersistentStorageWarning__Container\",\n  componentId: \"sc-3x6mdx-0\"\n})([\"margin-top:16px;padding:16px;background:\", \";border-radius:3px;\"], ({\n  theme\n}) => theme.background.secondary);\n_c = Container;\nconst Header = styled.h5.withConfig({\n  displayName: \"PersistentStorageWarning__Header\",\n  componentId: \"sc-3x6mdx-1\"\n})([\"margin:0 0 8px;color:\", \";font-size:1em;font-weight:500;line-height:1.375;\"], ({\n  theme\n}) => theme.header.primary);\n_c2 = Header;\nconst Buttons = styled(ButtonRow).withConfig({\n  displayName: \"PersistentStorageWarning__Buttons\",\n  componentId: \"sc-3x6mdx-2\"\n})([\"margin-top:16px;\"]);\n_c3 = Buttons;\nexport function PersistentStorageWarning() {\n  _s();\n\n  const modalManager = useRequiredContext(ModalManagerContext);\n  const databaseManager = useRequiredContext(DatabaseManagerContext);\n  return useObserver(() => /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: \"Warning\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Markdown, {\n      content: \"Your browser did not grant permission to use persistent storage\" + \" for this site. Data stored might be deleted by the browser when\" + \" this permission is not granted.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n      children: [/*#__PURE__*/_jsxDEV(PrimaryButton, {\n        onClick: async () => {\n          if (\"chrome\" in window) {\n            modalManager.spawn({\n              render: () => /*#__PURE__*/_jsxDEV(PushNotificationModal, {\n                databaseManager: databaseManager\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, this)\n            });\n          } else {\n            await databaseManager.requestPersistence();\n          }\n        },\n        children: \"Request permission\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SecondaryButton, {\n        onClick: () => {\n          databaseManager.persistenceMessageDismissed = true;\n        },\n        children: \"Dismiss\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this));\n}\n\n_s(PersistentStorageWarning, \"KupnOlN39LIjUJKH6XxunU058oQ=\", false, function () {\n  return [useRequiredContext, useRequiredContext, useObserver];\n});\n\n_c4 = PersistentStorageWarning;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Buttons\");\n$RefreshReg$(_c4, \"PersistentStorageWarning\");","map":{"version":3,"sources":["F:/DiscordHookSite/modules/database/persist/PersistentStorageWarning.tsx"],"names":["useObserver","React","styled","PrimaryButton","SecondaryButton","ButtonRow","ModalManagerContext","useRequiredContext","Markdown","DatabaseManagerContext","PushNotificationModal","Container","div","theme","background","secondary","Header","h5","header","primary","Buttons","PersistentStorageWarning","modalManager","databaseManager","window","spawn","render","requestPersistence","persistenceMessageDismissed"],"mappings":";;;;;AAAA,SAASA,WAAT,QAA4B,iBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,aAAT,QAA8B,4CAA9B;AACA,SAASC,eAAT,QAAgC,8CAAhC;AACA,SAASC,SAAT,QAA0B,kCAA1B;AACA,SAASC,mBAAT,QAAoC,2CAApC;AACA,SAASC,kBAAT,QAAmC,0CAAnC;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,SAASC,sBAAT,QAAuC,2BAAvC;AACA,SAASC,qBAAT,QAAsC,yBAAtC;AAEA,MAAMC,SAAS,GAAGT,MAAM,CAACU,GAAV;AAAA;AAAA;AAAA,wEAIC,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,UAAN,CAAiBC,SAJjC,CAAf;KAAMJ,S;AAQN,MAAMK,MAAM,GAAGd,MAAM,CAACe,EAAV;AAAA;AAAA;AAAA,mFAGD,CAAC;AAAEJ,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACK,MAAN,CAAaC,OAH3B,CAAZ;MAAMH,M;AASN,MAAMI,OAAO,GAAGlB,MAAM,CAACG,SAAD,CAAT;AAAA;AAAA;AAAA,wBAAb;MAAMe,O;AAIN,OAAO,SAASC,wBAAT,GAAoC;AAAA;;AACzC,QAAMC,YAAY,GAAGf,kBAAkB,CAACD,mBAAD,CAAvC;AACA,QAAMiB,eAAe,GAAGhB,kBAAkB,CAACE,sBAAD,CAA1C;AAEA,SAAOT,WAAW,CAAC,mBACjB,QAAC,SAAD;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AACE,MAAA,OAAO,EACL,oEACA,kEADA,GAEA;AAJJ;AAAA;AAAA;AAAA;AAAA,YAFF,eASE,QAAC,OAAD;AAAA,8BACE,QAAC,aAAD;AACE,QAAA,OAAO,EAAE,YAAY;AACnB,cAAI,YAAYwB,MAAhB,EAAwB;AACtBF,YAAAA,YAAY,CAACG,KAAb,CAAmB;AACjBC,cAAAA,MAAM,EAAE,mBACN,QAAC,qBAAD;AAAuB,gBAAA,eAAe,EAAEH;AAAxC;AAAA;AAAA;AAAA;AAAA;AAFe,aAAnB;AAKD,WAND,MAMO;AACL,kBAAMA,eAAe,CAACI,kBAAhB,EAAN;AACD;AACF,SAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAgBE,QAAC,eAAD;AACE,QAAA,OAAO,EAAE,MAAM;AACbJ,UAAAA,eAAe,CAACK,2BAAhB,GAA8C,IAA9C;AACD,SAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADgB,CAAlB;AAoCD;;GAxCeP,wB;UACOd,kB,EACGA,kB,EAEjBP,W;;;MAJOqB,wB","sourcesContent":["import { useObserver } from \"mobx-react-lite\"\r\nimport React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { PrimaryButton } from \"../../../common/input/button/PrimaryButton\"\r\nimport { SecondaryButton } from \"../../../common/input/button/SecondaryButton\"\r\nimport { ButtonRow } from \"../../../common/layout/ButtonRow\"\r\nimport { ModalManagerContext } from \"../../../common/modal/ModalManagerContext\"\r\nimport { useRequiredContext } from \"../../../common/state/useRequiredContext\"\r\nimport { Markdown } from \"../../markdown/Markdown\"\r\nimport { DatabaseManagerContext } from \"../DatabaseManagerContext\"\r\nimport { PushNotificationModal } from \"./PushNotificationModal\"\r\n\r\nconst Container = styled.div`\r\n  margin-top: 16px;\r\n  padding: 16px;\r\n\r\n  background: ${({ theme }) => theme.background.secondary};\r\n  border-radius: 3px;\r\n`\r\n\r\nconst Header = styled.h5`\r\n  margin: 0 0 8px;\r\n\r\n  color: ${({ theme }) => theme.header.primary};\r\n  font-size: 1em;\r\n  font-weight: 500;\r\n  line-height: 1.375;\r\n`\r\n\r\nconst Buttons = styled(ButtonRow)`\r\n  margin-top: 16px;\r\n`\r\n\r\nexport function PersistentStorageWarning() {\r\n  const modalManager = useRequiredContext(ModalManagerContext)\r\n  const databaseManager = useRequiredContext(DatabaseManagerContext)\r\n\r\n  return useObserver(() => (\r\n    <Container>\r\n      <Header>Warning</Header>\r\n      <Markdown\r\n        content={\r\n          \"Your browser did not grant permission to use persistent storage\" +\r\n          \" for this site. Data stored might be deleted by the browser when\" +\r\n          \" this permission is not granted.\"\r\n        }\r\n      />\r\n      <Buttons>\r\n        <PrimaryButton\r\n          onClick={async () => {\r\n            if (\"chrome\" in window) {\r\n              modalManager.spawn({\r\n                render: () => (\r\n                  <PushNotificationModal databaseManager={databaseManager} />\r\n                ),\r\n              })\r\n            } else {\r\n              await databaseManager.requestPersistence()\r\n            }\r\n          }}\r\n        >\r\n          Request permission\r\n        </PrimaryButton>\r\n        <SecondaryButton\r\n          onClick={() => {\r\n            databaseManager.persistenceMessageDismissed = true\r\n          }}\r\n        >\r\n          Dismiss\r\n        </SecondaryButton>\r\n      </Buttons>\r\n    </Container>\r\n  ))\r\n}\r\n"]},"metadata":{},"sourceType":"module"}