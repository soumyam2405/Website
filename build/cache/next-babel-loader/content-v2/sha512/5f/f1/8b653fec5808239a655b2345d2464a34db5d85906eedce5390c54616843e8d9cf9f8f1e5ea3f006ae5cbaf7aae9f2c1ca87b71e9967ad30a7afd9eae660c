{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\DiscordHookSite\\\\common\\\\layout\\\\ActionOverflowMenu.tsx\";\nimport { animated, useSpring } from \"@react-spring/web\";\nimport React, { useContext, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { useMeasure } from \"../dom/useMeasure\";\nimport { Interactive } from \"../input/Interactive\";\nimport { PopoverContext } from \"../popover/PopoverContext\";\nimport { PopoverManagerContext } from \"../popover/PopoverManagerContext\";\nimport { useIsomorphicLayoutEffect } from \"../state/useIsomorphicLayoutEffect\";\nconst Container = styled(animated.div).withConfig({\n  displayName: \"ActionOverflowMenu__Container\",\n  componentId: \"y5sqkf-0\"\n})([\"overflow:hidden;background:\", \";border:1px solid \", \";border-radius:4px;box-shadow:\", \";\"], ({\n  theme\n}) => theme.background.primary, ({\n  theme\n}) => theme.background.secondary, ({\n  theme\n}) => theme.elavation.high);\nconst List = styled.ul.withConfig({\n  displayName: \"ActionOverflowMenu__List\",\n  componentId: \"y5sqkf-1\"\n})([\"padding:0;margin:0;&::before,&::after{content:\\\"\\\";display:block;height:8px;}\"]);\nconst Item = styled.li.withConfig({\n  displayName: \"ActionOverflowMenu__Item\",\n  componentId: \"y5sqkf-2\"\n})([\"list-style:none;\"]);\nconst Content = styled(Interactive).withConfig({\n  displayName: \"ActionOverflowMenu__Content\",\n  componentId: \"y5sqkf-3\"\n})([\"width:100%;padding:8px 15px;display:flex;font-weight:500;\"]);\nconst Icon = styled.div.withConfig({\n  displayName: \"ActionOverflowMenu__Icon\",\n  componentId: \"y5sqkf-4\"\n})([\"margin-right:16px;& > svg{display:block;}\"]);\nexport function ActionOverflowMenu(props) {\n  const {\n    actions\n  } = props;\n  const [listRef, {\n    height\n  }] = useMeasure();\n  const style = useSpring({\n    height\n  });\n  const manager = useContext(PopoverManagerContext);\n  const popover = useContext(PopoverContext);\n  const containerRef = useRef(null);\n  useIsomorphicLayoutEffect(() => {\n    const {\n      current: container\n    } = containerRef;\n    if (!container) return;\n    container.scrollTop = 1;\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    ref: containerRef,\n    style: style,\n    children: /*#__PURE__*/_jsxDEV(List, {\n      ref: listRef,\n      children: actions.map(action => /*#__PURE__*/_jsxDEV(Item, {\n        children: /*#__PURE__*/_jsxDEV(Content, {\n          onClick: () => {\n            action.handler();\n\n            if (manager && popover) {\n              manager.dismiss(popover.name);\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            \"aria-hidden\": true,\n            children: action.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), action.label]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, action.label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["F:/DiscordHookSite/common/layout/ActionOverflowMenu.tsx"],"names":["animated","useSpring","React","useContext","useRef","styled","useMeasure","Interactive","PopoverContext","PopoverManagerContext","useIsomorphicLayoutEffect","Container","div","theme","background","primary","secondary","elavation","high","List","ul","Item","li","Content","Icon","ActionOverflowMenu","props","actions","listRef","height","style","manager","popover","containerRef","current","container","scrollTop","map","action","handler","dismiss","name","icon","label"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,mBAApC;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,MAA5B,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,qBAAT,QAAsC,kCAAtC;AACA,SAASC,yBAAT,QAA0C,oCAA1C;AAGA,MAAMC,SAAS,GAAGN,MAAM,CAACL,QAAQ,CAACY,GAAV,CAAT;AAAA;AAAA;AAAA,iGAGC,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,UAAN,CAAiBC,OAHjC,EAIO,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,UAAN,CAAiBE,SAJvC,EAOC,CAAC;AAAEH,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACI,SAAN,CAAgBC,IAPhC,CAAf;AAUA,MAAMC,IAAI,GAAGd,MAAM,CAACe,EAAV;AAAA;AAAA;AAAA,qFAAV;AAYA,MAAMC,IAAI,GAAGhB,MAAM,CAACiB,EAAV;AAAA;AAAA;AAAA,wBAAV;AAIA,MAAMC,OAAO,GAAGlB,MAAM,CAACE,WAAD,CAAT;AAAA;AAAA;AAAA,iEAAb;AASA,MAAMiB,IAAI,GAAGnB,MAAM,CAACO,GAAV;AAAA;AAAA;AAAA,iDAAV;AAYA,OAAO,SAASa,kBAAT,CAA4BC,KAA5B,EAA4D;AACjE,QAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AAEA,QAAM,CAACE,OAAD,EAAU;AAAEC,IAAAA;AAAF,GAAV,IAAwBvB,UAAU,EAAxC;AACA,QAAMwB,KAAK,GAAG7B,SAAS,CAAC;AACtB4B,IAAAA;AADsB,GAAD,CAAvB;AAIA,QAAME,OAAO,GAAG5B,UAAU,CAACM,qBAAD,CAA1B;AACA,QAAMuB,OAAO,GAAG7B,UAAU,CAACK,cAAD,CAA1B;AAEA,QAAMyB,YAAY,GAAG7B,MAAM,CAAiB,IAAjB,CAA3B;AACAM,EAAAA,yBAAyB,CAAC,MAAM;AAC9B,UAAM;AAAEwB,MAAAA,OAAO,EAAEC;AAAX,QAAyBF,YAA/B;AACA,QAAI,CAACE,SAAL,EAAgB;AAEhBA,IAAAA,SAAS,CAACC,SAAV,GAAsB,CAAtB;AACD,GALwB,CAAzB;AAOA,sBACE,QAAC,SAAD;AAAW,IAAA,GAAG,EAAEH,YAAhB;AAA8B,IAAA,KAAK,EAAEH,KAArC;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,GAAG,EAAEF,OAAX;AAAA,gBACGD,OAAO,CAACU,GAAR,CAAYC,MAAM,iBACjB,QAAC,IAAD;AAAA,+BACE,QAAC,OAAD;AACE,UAAA,OAAO,EAAE,MAAM;AACbA,YAAAA,MAAM,CAACC,OAAP;;AAEA,gBAAIR,OAAO,IAAIC,OAAf,EAAwB;AACtBD,cAAAA,OAAO,CAACS,OAAR,CAAgBR,OAAO,CAACS,IAAxB;AACD;AACF,WAPH;AAAA,kCASE,QAAC,IAAD;AAAM,+BAAN;AAAA,sBAAmBH,MAAM,CAACI;AAA1B;AAAA;AAAA;AAAA;AAAA,kBATF,EAUGJ,MAAM,CAACK,KAVV;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,SAAWL,MAAM,CAACK,KAAlB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD","sourcesContent":["import { animated, useSpring } from \"@react-spring/web\"\r\nimport React, { useContext, useRef } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { useMeasure } from \"../dom/useMeasure\"\r\nimport { Interactive } from \"../input/Interactive\"\r\nimport { PopoverContext } from \"../popover/PopoverContext\"\r\nimport { PopoverManagerContext } from \"../popover/PopoverManagerContext\"\r\nimport { useIsomorphicLayoutEffect } from \"../state/useIsomorphicLayoutEffect\"\r\nimport type { Action } from \"./ActionButtons\"\r\n\r\nconst Container = styled(animated.div)`\r\n  overflow: hidden;\r\n\r\n  background: ${({ theme }) => theme.background.primary};\r\n  border: 1px solid ${({ theme }) => theme.background.secondary};\r\n  border-radius: 4px;\r\n\r\n  box-shadow: ${({ theme }) => theme.elavation.high};\r\n`\r\n\r\nconst List = styled.ul`\r\n  padding: 0;\r\n  margin: 0;\r\n\r\n  &::before,\r\n  &::after {\r\n    content: \"\";\r\n    display: block;\r\n    height: 8px;\r\n  }\r\n`\r\n\r\nconst Item = styled.li`\r\n  list-style: none;\r\n`\r\n\r\nconst Content = styled(Interactive)`\r\n  width: 100%;\r\n\r\n  padding: 8px 15px;\r\n  display: flex;\r\n\r\n  font-weight: 500;\r\n`\r\n\r\nconst Icon = styled.div`\r\n  margin-right: 16px;\r\n\r\n  & > svg {\r\n    display: block;\r\n  }\r\n`\r\n\r\nexport type ActionOverflowMenuProps = {\r\n  actions: Action[]\r\n}\r\n\r\nexport function ActionOverflowMenu(props: ActionOverflowMenuProps) {\r\n  const { actions } = props\r\n\r\n  const [listRef, { height }] = useMeasure()\r\n  const style = useSpring({\r\n    height,\r\n  })\r\n\r\n  const manager = useContext(PopoverManagerContext)\r\n  const popover = useContext(PopoverContext)\r\n\r\n  const containerRef = useRef<HTMLDivElement>(null)\r\n  useIsomorphicLayoutEffect(() => {\r\n    const { current: container } = containerRef\r\n    if (!container) return\r\n\r\n    container.scrollTop = 1\r\n  })\r\n\r\n  return (\r\n    <Container ref={containerRef} style={style}>\r\n      <List ref={listRef}>\r\n        {actions.map(action => (\r\n          <Item key={action.label}>\r\n            <Content\r\n              onClick={() => {\r\n                action.handler()\r\n\r\n                if (manager && popover) {\r\n                  manager.dismiss(popover.name)\r\n                }\r\n              }}\r\n            >\r\n              <Icon aria-hidden>{action.icon}</Icon>\r\n              {action.label}\r\n            </Content>\r\n          </Item>\r\n        ))}\r\n      </List>\r\n    </Container>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}