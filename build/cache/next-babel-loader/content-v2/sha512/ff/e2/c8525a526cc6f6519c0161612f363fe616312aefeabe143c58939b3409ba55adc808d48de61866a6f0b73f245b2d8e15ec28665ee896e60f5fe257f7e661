{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _defineProperty from \"F:/DiscordHookSite/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useObserver } from \"mobx-react-lite\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { ListInputField } from \"../../../common/input/list/ListInputField\";\nimport { InputField } from \"../../../common/input/text/InputField\";\nimport { RowContainer } from \"../../../common/layout/RowContainer\";\nimport { Section } from \"../../../common/layout/Section\";\nimport { Stack } from \"../../../common/layout/Stack\";\nimport { Markdown } from \"../../markdown/Markdown\";\nconst Message = styled(Markdown).withConfig({\n  componentId: \"sc-5bwb8l-0\"\n})([\"margin-top:-8px;font-size:15px;\"]);\nexport function EmbedImagesEditor(props) {\n  const {\n    embed,\n    form\n  } = props;\n  return useObserver(() => /*#__PURE__*/_jsx(Section, {\n    name: \"Images\",\n    hasError: !form.group(\"images\").isValid,\n    children: /*#__PURE__*/_jsxs(Stack, {\n      gap: 12,\n      children: [/*#__PURE__*/_jsx(ListInputField, _objectSpread({\n        id: `_${embed.id}_gallery`,\n        label: {\n          singular: \"Image\",\n          plural: \"Image URLs\"\n        },\n        limit: embed.url ? 4 : 1,\n        error: form.field(\"gallery\").error\n      }, form.field(\"gallery\").inputProps)), /*#__PURE__*/_jsx(Message, {\n        content: \"*Adding up to 4 images is possible when the URL in the Body \" + \"section is set.*\"\n      }), /*#__PURE__*/_jsx(RowContainer, {\n        children: /*#__PURE__*/_jsx(InputField, _objectSpread({\n          id: `_${embed.id}_thumbnail`,\n          label: \"Thumbnail URL\",\n          error: form.field(\"thumbnail\").error\n        }, form.field(\"thumbnail\").inputProps))\n      })]\n    })\n  }));\n}","map":{"version":3,"sources":["F:/DiscordHookSite/modules/editor/message/EmbedImagesEditor.tsx"],"names":["useObserver","React","styled","ListInputField","InputField","RowContainer","Section","Stack","Markdown","Message","EmbedImagesEditor","props","embed","form","group","isValid","id","singular","plural","url","field","error","inputProps"],"mappings":";;;;;;;;AAAA,SAASA,WAAT,QAA4B,iBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,cAAT,QAA+B,2CAA/B;AACA,SAASC,UAAT,QAA2B,uCAA3B;AACA,SAASC,YAAT,QAA6B,qCAA7B;AACA,SAASC,OAAT,QAAwB,gCAAxB;AACA,SAASC,KAAT,QAAsB,8BAAtB;AACA,SAASC,QAAT,QAAyB,yBAAzB;AAIA,MAAMC,OAAO,GAAGP,MAAM,CAACM,QAAD,CAAT;AAAA;AAAA,uCAAb;AAUA,OAAO,SAASE,iBAAT,CAA2BC,KAA3B,EAA0D;AAC/D,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAkBF,KAAxB;AAEA,SAAOX,WAAW,CAAC,mBACjB,KAAC,OAAD;AAAS,IAAA,IAAI,EAAC,QAAd;AAAuB,IAAA,QAAQ,EAAE,CAACa,IAAI,CAACC,KAAL,CAAW,QAAX,EAAqBC,OAAvD;AAAA,2BACE,MAAC,KAAD;AAAO,MAAA,GAAG,EAAE,EAAZ;AAAA,8BACE,KAAC,cAAD;AACE,QAAA,EAAE,EAAG,IAAGH,KAAK,CAACI,EAAG,UADnB;AAEE,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE,OAAZ;AAAqBC,UAAAA,MAAM,EAAE;AAA7B,SAFT;AAGE,QAAA,KAAK,EAAEN,KAAK,CAACO,GAAN,GAAY,CAAZ,GAAgB,CAHzB;AAIE,QAAA,KAAK,EAAEN,IAAI,CAACO,KAAL,CAAW,SAAX,EAAsBC;AAJ/B,SAKMR,IAAI,CAACO,KAAL,CAAW,SAAX,EAAsBE,UAL5B,EADF,eAQE,KAAC,OAAD;AACE,QAAA,OAAO,EACL,iEACA;AAHJ,QARF,eAcE,KAAC,YAAD;AAAA,+BACE,KAAC,UAAD;AACE,UAAA,EAAE,EAAG,IAAGV,KAAK,CAACI,EAAG,YADnB;AAEE,UAAA,KAAK,EAAC,eAFR;AAGE,UAAA,KAAK,EAAEH,IAAI,CAACO,KAAL,CAAW,WAAX,EAAwBC;AAHjC,WAIMR,IAAI,CAACO,KAAL,CAAW,WAAX,EAAwBE,UAJ9B;AADF,QAdF;AAAA;AADF,IADgB,CAAlB;AA2BD","sourcesContent":["import { useObserver } from \"mobx-react-lite\"\r\nimport React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { ListInputField } from \"../../../common/input/list/ListInputField\"\r\nimport { InputField } from \"../../../common/input/text/InputField\"\r\nimport { RowContainer } from \"../../../common/layout/RowContainer\"\r\nimport { Section } from \"../../../common/layout/Section\"\r\nimport { Stack } from \"../../../common/layout/Stack\"\r\nimport { Markdown } from \"../../markdown/Markdown\"\r\nimport type { EmbedItemFormState } from \"../../message/state/editorForm\"\r\nimport type { EmbedLike } from \"../../message/state/models/EmbedModel\"\r\n\r\nconst Message = styled(Markdown)`\r\n  margin-top: -8px;\r\n  font-size: 15px;\r\n`\r\n\r\nexport type EmbedImagesEditorProps = {\r\n  embed: EmbedLike\r\n  form: EmbedItemFormState\r\n}\r\n\r\nexport function EmbedImagesEditor(props: EmbedImagesEditorProps) {\r\n  const { embed, form } = props\r\n\r\n  return useObserver(() => (\r\n    <Section name=\"Images\" hasError={!form.group(\"images\").isValid}>\r\n      <Stack gap={12}>\r\n        <ListInputField\r\n          id={`_${embed.id}_gallery`}\r\n          label={{ singular: \"Image\", plural: \"Image URLs\" }}\r\n          limit={embed.url ? 4 : 1}\r\n          error={form.field(\"gallery\").error}\r\n          {...form.field(\"gallery\").inputProps}\r\n        />\r\n        <Message\r\n          content={\r\n            \"*Adding up to 4 images is possible when the URL in the Body \" +\r\n            \"section is set.*\"\r\n          }\r\n        />\r\n        <RowContainer>\r\n          <InputField\r\n            id={`_${embed.id}_thumbnail`}\r\n            label=\"Thumbnail URL\"\r\n            error={form.field(\"thumbnail\").error}\r\n            {...form.field(\"thumbnail\").inputProps}\r\n          />\r\n        </RowContainer>\r\n      </Stack>\r\n    </Section>\r\n  ))\r\n}\r\n"]},"metadata":{},"sourceType":"module"}