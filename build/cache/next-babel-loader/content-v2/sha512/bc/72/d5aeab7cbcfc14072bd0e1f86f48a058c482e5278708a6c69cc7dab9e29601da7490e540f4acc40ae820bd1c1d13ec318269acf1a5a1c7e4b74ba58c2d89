{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\DiscordHookSite\\\\common\\\\input\\\\text\\\\InputField.tsx\";\nimport React, { forwardRef } from \"react\";\nimport styled from \"styled-components\";\nimport { FlexContainer } from \"../../layout/FlexContainer\";\nimport { InputError } from \"../error/InputError\";\nimport { getLengthConstraintColor } from \"../getLengthConstraintColor\";\nimport { Input } from \"../layout/Input\";\nimport { InputConstraint } from \"../layout/InputConstraint\";\nimport { InputContainer } from \"../layout/InputContainer\";\nimport { InputLabel } from \"../layout/InputLabel\";\nconst TextInput = styled(Input).withConfig({\n  displayName: \"InputField__TextInput\",\n  componentId: \"sc-7tcyzw-0\"\n})([\"\", \" > &{flex:1;}\"], FlexContainer);\n_c = TextInput;\n\nfunction InputFieldRenderer(props, ref) {\n  const {\n    id,\n    value,\n    onChange: handleChange,\n    label,\n    hideLabel,\n    type,\n    rows,\n    placeholder,\n    maxLength,\n    required,\n    disabled,\n    readOnly,\n    error,\n    className,\n    onClick: handleClick,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    children\n  } = props;\n\n  const input = /*#__PURE__*/_jsxDEV(TextInput, {\n    ref: ref,\n    as: rows ? \"textarea\" : \"input\",\n    id: id,\n    type: type,\n    value: value,\n    placeholder: placeholder,\n    disabled: disabled,\n    readOnly: readOnly,\n    required: required,\n    style: {\n      height: rows ? 15 + 21 * rows : undefined\n    },\n    onChange: event => handleChange(event.target.value),\n    onClick: handleClick,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    \"aria-label\": hideLabel ? label : undefined\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(InputContainer, {\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n      children: [!hideLabel && /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: id,\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 24\n      }, this), required && /*#__PURE__*/_jsxDEV(InputConstraint, {\n        state: \"normal\",\n        children: \"Required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 22\n      }, this), maxLength && /*#__PURE__*/_jsxDEV(InputConstraint, {\n        state: getLengthConstraintColor(value.length, maxLength),\n        children: [value.length, \"/\", maxLength]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), Object.prototype.hasOwnProperty.call(props, \"children\") ? /*#__PURE__*/_jsxDEV(FlexContainer, {\n      children: [input, children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this) : input, /*#__PURE__*/_jsxDEV(InputError, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = InputFieldRenderer;\nexport const InputField = /*#__PURE__*/forwardRef(InputFieldRenderer);\n_c3 = InputField;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TextInput\");\n$RefreshReg$(_c2, \"InputFieldRenderer\");\n$RefreshReg$(_c3, \"InputField\");","map":{"version":3,"sources":["F:/DiscordHookSite/common/input/text/InputField.tsx"],"names":["React","forwardRef","styled","FlexContainer","InputError","getLengthConstraintColor","Input","InputConstraint","InputContainer","InputLabel","TextInput","InputFieldRenderer","props","ref","id","value","onChange","handleChange","label","hideLabel","type","rows","placeholder","maxLength","required","disabled","readOnly","error","className","onClick","handleClick","onFocus","handleFocus","onBlur","handleBlur","children","input","height","undefined","event","target","length","Object","prototype","hasOwnProperty","call","InputField"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, FocusEvent, forwardRef, ReactNode } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { FlexContainer } from \"../../layout/FlexContainer\"\r\nimport type { ReactRef } from \"../../state/ReactRef\"\r\nimport { InputError } from \"../error/InputError\"\r\nimport { getLengthConstraintColor } from \"../getLengthConstraintColor\"\r\nimport { Input } from \"../layout/Input\"\r\nimport { InputConstraint } from \"../layout/InputConstraint\"\r\nimport { InputContainer } from \"../layout/InputContainer\"\r\nimport { InputLabel } from \"../layout/InputLabel\"\r\n\r\nconst TextInput = styled(Input)`\r\n  ${FlexContainer} > & {\r\n    flex: 1;\r\n  }\r\n`\r\n\r\ntype InputChangeEvent = ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\ntype InputFocusEvent = FocusEvent<HTMLInputElement | HTMLTextAreaElement>\r\n\r\nexport type InputFieldProps = {\r\n  id: string\r\n  value: string\r\n  onChange: (value: string) => void\r\n  label: string\r\n  hideLabel?: boolean\r\n  type?: string\r\n  rows?: number\r\n  placeholder?: string\r\n  maxLength?: number\r\n  required?: boolean\r\n  disabled?: boolean\r\n  readOnly?: boolean\r\n  error?: string\r\n  className?: string\r\n  onClick?: () => void\r\n  onFocus?: (event: InputFocusEvent) => void\r\n  onBlur?: (event: InputFocusEvent) => void\r\n  children?: ReactNode\r\n}\r\n\r\nfunction InputFieldRenderer(\r\n  props: InputFieldProps,\r\n  ref: ReactRef<HTMLInputElement> | ReactRef<HTMLTextAreaElement>,\r\n) {\r\n  const {\r\n    id,\r\n    value,\r\n    onChange: handleChange,\r\n    label,\r\n    hideLabel,\r\n    type,\r\n    rows,\r\n    placeholder,\r\n    maxLength,\r\n    required,\r\n    disabled,\r\n    readOnly,\r\n    error,\r\n    className,\r\n    onClick: handleClick,\r\n    onFocus: handleFocus,\r\n    onBlur: handleBlur,\r\n    children,\r\n  } = props\r\n\r\n  const input = (\r\n    <TextInput\r\n      ref={ref}\r\n      as={rows ? \"textarea\" : \"input\"}\r\n      id={id}\r\n      type={type}\r\n      value={value}\r\n      placeholder={placeholder}\r\n      disabled={disabled}\r\n      readOnly={readOnly}\r\n      required={required}\r\n      style={{ height: rows ? 15 + 21 * rows : undefined }}\r\n      onChange={(event: InputChangeEvent) => handleChange(event.target.value)}\r\n      onClick={handleClick}\r\n      onFocus={handleFocus}\r\n      onBlur={handleBlur}\r\n      aria-label={hideLabel ? label : undefined}\r\n    />\r\n  )\r\n\r\n  return (\r\n    <InputContainer className={className}>\r\n      <InputLabel>\r\n        {!hideLabel && <label htmlFor={id}>{label}</label>}\r\n        {required && <InputConstraint state=\"normal\">Required</InputConstraint>}\r\n        {maxLength && (\r\n          <InputConstraint\r\n            state={getLengthConstraintColor(value.length, maxLength)}\r\n          >\r\n            {value.length}/{maxLength}\r\n          </InputConstraint>\r\n        )}\r\n      </InputLabel>\r\n      {Object.prototype.hasOwnProperty.call(props, \"children\") ? (\r\n        <FlexContainer>\r\n          {input}\r\n          {children}\r\n        </FlexContainer>\r\n      ) : (\r\n        input\r\n      )}\r\n      <InputError error={error} />\r\n    </InputContainer>\r\n  )\r\n}\r\n\r\nexport const InputField = forwardRef(InputFieldRenderer)\r\n"]},"metadata":{},"sourceType":"module"}