{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useObserver } from \"mobx-react-lite\";\nimport { rem, size } from \"polished\";\nimport React from \"react\";\nimport styled, { css } from \"styled-components\";\nconst Container = styled.div.withConfig({\n  componentId: \"k1ck82-0\"\n})([\"min-width:0;display:flex;align-items:center;grid-column:1 / 2;margin:8px 0 0;\"]);\nconst AuthorImage = styled.img.withConfig({\n  componentId: \"k1ck82-1\"\n})([\"\", \";margin:0 8px 0 0;object-fit:contain;border-radius:50%;\"], size(24));\nconst AuthorNameNormal = styled.span.withConfig({\n  componentId: \"k1ck82-2\"\n})([\"font-size:\", \";font-weight:500;color:\", \";white-space:pre-wrap;display:inline-block;\", \";\"], rem(14), ({\n  theme\n}) => theme.header.primary, ({\n  theme\n}) => theme.appearance.color === \"light\" && css([\"@media (max-resolution:1dppx){font-weight:500;}\"]));\nconst AuthorNameLink = AuthorNameNormal.withComponent(\"a\");\nexport function EmbedAuthor(props) {\n  const {\n    embed\n  } = props;\n  return useObserver(() => /*#__PURE__*/_jsxs(Container, {\n    children: [embed.authorIcon && /*#__PURE__*/_jsx(AuthorImage, {\n      src: embed.authorIcon,\n      alt: \"Author image\"\n    }), embed.author && (embed.authorUrl ? /*#__PURE__*/_jsx(AuthorNameLink, {\n      href: embed.authorUrl,\n      rel: \"noopener noreferrer nofollow ugc\",\n      target: \"_blank\",\n      children: embed.author\n    }) : /*#__PURE__*/_jsx(AuthorNameNormal, {\n      children: embed.author\n    }))]\n  }));\n}","map":{"version":3,"sources":["F:/DiscordHookSite/modules/message/preview/EmbedAuthor.tsx"],"names":["useObserver","rem","size","React","styled","css","Container","div","AuthorImage","img","AuthorNameNormal","span","theme","header","primary","appearance","color","AuthorNameLink","withComponent","EmbedAuthor","props","embed","authorIcon","author","authorUrl"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,iBAA5B;AACA,SAASC,GAAT,EAAcC,IAAd,QAA0B,UAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AAGA,MAAMC,SAAS,GAAGF,MAAM,CAACG,GAAV;AAAA;AAAA,qFAAf;AASA,MAAMC,WAAW,GAAGJ,MAAM,CAACK,GAAV;AAAA;AAAA,oEACbP,IAAI,CAAC,EAAD,CADS,CAAjB;AASA,MAAMQ,gBAAgB,GAAGN,MAAM,CAACO,IAAV;AAAA;AAAA,kGACPV,GAAG,CAAC,EAAD,CADI,EAGX,CAAC;AAAEW,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaC,OAHjB,EAQlB,CAAC;AAAEF,EAAAA;AAAF,CAAD,KACAA,KAAK,CAACG,UAAN,CAAiBC,KAAjB,KAA2B,OAA3B,IACAX,GADA,qDATkB,CAAtB;AAiBA,MAAMY,cAAc,GAAGP,gBAAgB,CAACQ,aAAjB,CAA+B,GAA/B,CAAvB;AAMA,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAA8C;AACnD,QAAM;AAAEC,IAAAA;AAAF,MAAYD,KAAlB;AAEA,SAAOpB,WAAW,CAAC,mBACjB,MAAC,SAAD;AAAA,eACGqB,KAAK,CAACC,UAAN,iBACC,KAAC,WAAD;AAAa,MAAA,GAAG,EAAED,KAAK,CAACC,UAAxB;AAAoC,MAAA,GAAG,EAAC;AAAxC,MAFJ,EAIGD,KAAK,CAACE,MAAN,KACEF,KAAK,CAACG,SAAN,gBACC,KAAC,cAAD;AACE,MAAA,IAAI,EAAEH,KAAK,CAACG,SADd;AAEE,MAAA,GAAG,EAAC,kCAFN;AAGE,MAAA,MAAM,EAAC,QAHT;AAAA,gBAKGH,KAAK,CAACE;AALT,MADD,gBASC,KAAC,gBAAD;AAAA,gBAAmBF,KAAK,CAACE;AAAzB,MAVH,CAJH;AAAA,IADgB,CAAlB;AAmBD","sourcesContent":["import { useObserver } from \"mobx-react-lite\"\r\nimport { rem, size } from \"polished\"\r\nimport React from \"react\"\r\nimport styled, { css } from \"styled-components\"\r\nimport type { EmbedLike } from \"../state/models/EmbedModel\"\r\n\r\nconst Container = styled.div`\r\n  min-width: 0;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  grid-column: 1 / 2;\r\n  margin: 8px 0 0;\r\n`\r\n\r\nconst AuthorImage = styled.img`\r\n  ${size(24)};\r\n\r\n  margin: 0 8px 0 0;\r\n\r\n  object-fit: contain;\r\n  border-radius: 50%;\r\n`\r\n\r\nconst AuthorNameNormal = styled.span`\r\n  font-size: ${rem(14)};\r\n  font-weight: 500;\r\n  color: ${({ theme }) => theme.header.primary};\r\n\r\n  white-space: pre-wrap;\r\n  display: inline-block;\r\n\r\n  ${({ theme }) =>\r\n    theme.appearance.color === \"light\" &&\r\n    css`\r\n      @media (max-resolution: 1dppx) {\r\n        font-weight: 500;\r\n      }\r\n    `};\r\n`\r\n\r\nconst AuthorNameLink = AuthorNameNormal.withComponent(\"a\")\r\n\r\nexport type EmbedAuthorProps = {\r\n  embed: EmbedLike\r\n}\r\n\r\nexport function EmbedAuthor(props: EmbedAuthorProps) {\r\n  const { embed } = props\r\n\r\n  return useObserver(() => (\r\n    <Container>\r\n      {embed.authorIcon && (\r\n        <AuthorImage src={embed.authorIcon} alt=\"Author image\" />\r\n      )}\r\n      {embed.author &&\r\n        (embed.authorUrl ? (\r\n          <AuthorNameLink\r\n            href={embed.authorUrl}\r\n            rel=\"noopener noreferrer nofollow ugc\"\r\n            target=\"_blank\"\r\n          >\r\n            {embed.author}\r\n          </AuthorNameLink>\r\n        ) : (\r\n          <AuthorNameNormal>{embed.author}</AuthorNameNormal>\r\n        ))}\r\n    </Container>\r\n  ))\r\n}\r\n"]},"metadata":{},"sourceType":"module"}