{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\DiscordHookSite\\\\modules\\\\message\\\\preview\\\\Preview.tsx\",\n    _s = $RefreshSig$();\n\nimport { useObserver } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { useRequiredContext } from \"../../../common/state/useRequiredContext\";\nimport { EditorManagerContext } from \"../../editor/EditorManagerContext\";\nimport { MessagePreview } from \"./MessagePreview\";\nexport function Preview() {\n  _s();\n\n  const editorManager = useRequiredContext(EditorManagerContext);\n  return useObserver(() => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: editorManager.messages.map(message => /*#__PURE__*/_jsxDEV(MessagePreview, {\n      message: message\n    }, message.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this))\n  }, void 0, false));\n}\n\n_s(Preview, \"FH51SIMfoqmcje3FcazBMlXILBI=\", false, function () {\n  return [useRequiredContext, useObserver];\n});\n\n_c = Preview;\n\nvar _c;\n\n$RefreshReg$(_c, \"Preview\");","map":{"version":3,"sources":["F:/DiscordHookSite/modules/message/preview/Preview.tsx"],"names":["useObserver","React","useRequiredContext","EditorManagerContext","MessagePreview","Preview","editorManager","messages","map","message","id"],"mappings":";;;;;;AAAA,SAASA,WAAT,QAA4B,iBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,0CAAnC;AACA,SAASC,oBAAT,QAAqC,mCAArC;AACA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,OAAO,SAASC,OAAT,GAAmB;AAAA;;AACxB,QAAMC,aAAa,GAAGJ,kBAAkB,CAACC,oBAAD,CAAxC;AAEA,SAAOH,WAAW,CAAC,mBACjB;AAAA,cACGM,aAAa,CAACC,QAAd,CAAuBC,GAAvB,CAA2BC,OAAO,iBACjC,QAAC,cAAD;AAAiC,MAAA,OAAO,EAAEA;AAA1C,OAAqBA,OAAO,CAACC,EAA7B;AAAA;AAAA;AAAA;AAAA,YADD;AADH,mBADgB,CAAlB;AAOD;;GAVeL,O;UACQH,kB,EAEfF,W;;;KAHOK,O","sourcesContent":["import { useObserver } from \"mobx-react-lite\"\r\nimport React from \"react\"\r\nimport { useRequiredContext } from \"../../../common/state/useRequiredContext\"\r\nimport { EditorManagerContext } from \"../../editor/EditorManagerContext\"\r\nimport { MessagePreview } from \"./MessagePreview\"\r\n\r\nexport function Preview() {\r\n  const editorManager = useRequiredContext(EditorManagerContext)\r\n\r\n  return useObserver(() => (\r\n    <>\r\n      {editorManager.messages.map(message => (\r\n        <MessagePreview key={message.id} message={message} />\r\n      ))}\r\n    </>\r\n  ))\r\n}\r\n"]},"metadata":{},"sourceType":"module"}