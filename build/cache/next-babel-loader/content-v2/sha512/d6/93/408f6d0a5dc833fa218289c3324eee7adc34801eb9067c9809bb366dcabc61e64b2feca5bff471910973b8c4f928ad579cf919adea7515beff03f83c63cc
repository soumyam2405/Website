{"ast":null,"code":"export const maxLength = length => (value, key) => typeof value === \"string\" && value.trim().length > length ? [`${key}: Must be at most ${length} long`] : Array.isArray(value) && value.length > length ? [`${key}: Must contain at most ${length} values`] : [];","map":{"version":3,"sources":["F:/DiscordHookSite/modules/editor/data/validation/maxLength.ts"],"names":["maxLength","length","value","key","trim","Array","isArray"],"mappings":"AAEA,OAAO,MAAMA,SAAS,GAAIC,MAAD,IAA+B,CAACC,KAAD,EAAQC,GAAR,KACtD,OAAOD,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACE,IAAN,GAAaH,MAAb,GAAsBA,MAAnD,GACI,CAAE,GAAEE,GAAI,qBAAoBF,MAAO,OAAnC,CADJ,GAEII,KAAK,CAACC,OAAN,CAAcJ,KAAd,KAAwBA,KAAK,CAACD,MAAN,GAAeA,MAAvC,GACA,CAAE,GAAEE,GAAI,0BAAyBF,MAAO,SAAxC,CADA,GAEA,EALC","sourcesContent":["import type { Validator } from \"./Validator\"\r\n\r\nexport const maxLength = (length: number): Validator => (value, key) =>\r\n  typeof value === \"string\" && value.trim().length > length\r\n    ? [`${key}: Must be at most ${length} long`]\r\n    : Array.isArray(value) && value.length > length\r\n    ? [`${key}: Must contain at most ${length} values`]\r\n    : []\r\n"]},"metadata":{},"sourceType":"module"}