{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\DiscordHookSite\\\\modules\\\\editor\\\\data\\\\DataEditorModal.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useObserver } from \"mobx-react-lite\";\nimport { applySnapshot } from \"mobx-state-tree\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { copyTextToClipboard } from \"../../../common/dom/copyTextToClipboard\";\nimport { PrimaryButton } from \"../../../common/input/button/PrimaryButton\";\nimport { SecondaryButton } from \"../../../common/input/button/SecondaryButton\";\nimport { Input } from \"../../../common/input/layout/Input\";\nimport { ModalAction } from \"../../../common/modal/layout/ModalAction\";\nimport { ModalBody } from \"../../../common/modal/layout/ModalBody\";\nimport { ModalContainer } from \"../../../common/modal/layout/ModalContainer\";\nimport { ModalFooter } from \"../../../common/modal/layout/ModalFooter\";\nimport { ModalHeader } from \"../../../common/modal/layout/ModalHeader\";\nimport { ModalTitle } from \"../../../common/modal/layout/ModalTitle\";\nimport { ModalContext } from \"../../../common/modal/ModalContext\";\nimport { parseJson } from \"../../../common/object/parseJson\";\nimport { useRequiredContext } from \"../../../common/state/useRequiredContext\";\nimport { remove } from \"../../../icons/remove\";\nimport { messageOf } from \"../../message/helpers/messageOf\";\nimport { stringifyMessage } from \"../../message/helpers/stringifyMessage\";\nimport { isMessage } from \"./validation/isMessage\";\nconst Container = styled(ModalContainer).withConfig({\n  displayName: \"DataEditorModal__Container\",\n  componentId: \"cbip1o-0\"\n})([\"width:1024px;height:768px;display:flex;flex-flow:column;\"]);\nconst Body = styled(ModalBody).withConfig({\n  displayName: \"DataEditorModal__Body\",\n  componentId: \"cbip1o-1\"\n})([\"flex:1;display:flex;flex-flow:column;\"]);\nconst CodeInput = styled(Input).withConfig({\n  displayName: \"DataEditorModal__CodeInput\",\n  componentId: \"cbip1o-2\"\n})([\"&&{width:100%;resize:none;}flex:1;font-family:\", \";font-size:14px;line-height:1.375;overflow-y:auto;\"], ({\n  theme\n}) => theme.font.mono);\nconst ErrorContainer = styled.div.withConfig({\n  displayName: \"DataEditorModal__ErrorContainer\",\n  componentId: \"cbip1o-3\"\n})([\"margin-top:8px;max-height:max(20%,96px);overflow-y:auto;\"]);\nconst ErrorLine = styled.code.withConfig({\n  displayName: \"DataEditorModal__ErrorLine\",\n  componentId: \"cbip1o-4\"\n})([\"display:block;color:\", \";font-size:14px;line-height:1.375;& + &{margin-top:8px;}\"], ({\n  theme\n}) => theme.accent.danger);\nexport function DataEditorModal(props) {\n  const {\n    message\n  } = props;\n  const modal = useRequiredContext(ModalContext);\n  const {\n    0: value,\n    1: setValue\n  } = useState(() => stringifyMessage(message.data));\n  const {\n    value: data,\n    error\n  } = parseJson(value);\n  const errors = error ? [error] : isMessage(data, \"$\");\n  return useObserver(() => /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      children: [/*#__PURE__*/_jsxDEV(ModalTitle, {\n        children: \"JSON Editor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalAction, {\n        icon: remove,\n        label: \"Close\",\n        onClick: () => modal.dismiss()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Body, {\n      children: [/*#__PURE__*/_jsxDEV(CodeInput, {\n        as: \"textarea\",\n        id: \"data-editor\",\n        value: value,\n        onChange: event => {\n          setValue(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), errors.length > 0 && /*#__PURE__*/_jsxDEV(ErrorContainer, {\n        children: errors.map((error, index) =>\n        /*#__PURE__*/\n        // eslint-disable-next-line react/no-array-index-key\n        _jsxDEV(ErrorLine, {\n          children: error\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n      children: [/*#__PURE__*/_jsxDEV(SecondaryButton, {\n        onClick: () => copyTextToClipboard(value),\n        children: \"Copy to Clipboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SecondaryButton, {\n        onClick: () => modal.dismiss(),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PrimaryButton, {\n        disabled: errors.length > 0,\n        onClick: () => {\n          applySnapshot(message, _objectSpread(_objectSpread({}, messageOf(JSON.parse(value))), {}, {\n            id: message.id\n          }));\n          modal.dismiss();\n        },\n        children: \"Apply Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this));\n}","map":{"version":3,"sources":["F:/DiscordHookSite/modules/editor/data/DataEditorModal.tsx"],"names":["useObserver","applySnapshot","React","useState","styled","copyTextToClipboard","PrimaryButton","SecondaryButton","Input","ModalAction","ModalBody","ModalContainer","ModalFooter","ModalHeader","ModalTitle","ModalContext","parseJson","useRequiredContext","remove","messageOf","stringifyMessage","isMessage","Container","Body","CodeInput","theme","font","mono","ErrorContainer","div","ErrorLine","code","accent","danger","DataEditorModal","props","message","modal","value","setValue","data","error","errors","dismiss","event","target","length","map","index","JSON","parse","id"],"mappings":"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","sourcesContent":["import { useObserver } from \"mobx-react-lite\"\r\nimport { applySnapshot } from \"mobx-state-tree\"\r\nimport React, { ChangeEvent, useState } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { copyTextToClipboard } from \"../../../common/dom/copyTextToClipboard\"\r\nimport { PrimaryButton } from \"../../../common/input/button/PrimaryButton\"\r\nimport { SecondaryButton } from \"../../../common/input/button/SecondaryButton\"\r\nimport { Input } from \"../../../common/input/layout/Input\"\r\nimport { ModalAction } from \"../../../common/modal/layout/ModalAction\"\r\nimport { ModalBody } from \"../../../common/modal/layout/ModalBody\"\r\nimport { ModalContainer } from \"../../../common/modal/layout/ModalContainer\"\r\nimport { ModalFooter } from \"../../../common/modal/layout/ModalFooter\"\r\nimport { ModalHeader } from \"../../../common/modal/layout/ModalHeader\"\r\nimport { ModalTitle } from \"../../../common/modal/layout/ModalTitle\"\r\nimport { ModalContext } from \"../../../common/modal/ModalContext\"\r\nimport { parseJson } from \"../../../common/object/parseJson\"\r\nimport { useRequiredContext } from \"../../../common/state/useRequiredContext\"\r\nimport { remove } from \"../../../icons/remove\"\r\nimport { messageOf } from \"../../message/helpers/messageOf\"\r\nimport { stringifyMessage } from \"../../message/helpers/stringifyMessage\"\r\nimport type { MessageLike } from \"../../message/state/models/MessageModel\"\r\nimport { isMessage } from \"./validation/isMessage\"\r\n\r\nconst Container = styled(ModalContainer)`\r\n  width: 1024px;\r\n  height: 768px;\r\n\r\n  display: flex;\r\n  flex-flow: column;\r\n`\r\n\r\nconst Body = styled(ModalBody)`\r\n  flex: 1;\r\n\r\n  display: flex;\r\n  flex-flow: column;\r\n`\r\n\r\nconst CodeInput = styled(Input)`\r\n  && {\r\n    width: 100%;\r\n    resize: none;\r\n  }\r\n\r\n  flex: 1;\r\n\r\n  font-family: ${({ theme }) => theme.font.mono};\r\n  font-size: 14px;\r\n  line-height: 1.375;\r\n\r\n  overflow-y: auto;\r\n`\r\n\r\nconst ErrorContainer = styled.div`\r\n  margin-top: 8px;\r\n\r\n  max-height: max(20%, 96px);\r\n  overflow-y: auto;\r\n`\r\n\r\nconst ErrorLine = styled.code`\r\n  display: block;\r\n\r\n  color: ${({ theme }) => theme.accent.danger};\r\n  font-size: 14px;\r\n  line-height: 1.375;\r\n\r\n  & + & {\r\n    margin-top: 8px;\r\n  }\r\n`\r\n\r\nexport type DataEditorModalProps = {\r\n  message: MessageLike\r\n}\r\n\r\nexport function DataEditorModal(props: DataEditorModalProps) {\r\n  const { message } = props\r\n\r\n  const modal = useRequiredContext(ModalContext)\r\n\r\n  const [value, setValue] = useState(() => stringifyMessage(message.data))\r\n\r\n  const { value: data, error } = parseJson(value)\r\n  const errors = error ? [error] : isMessage(data, \"$\")\r\n\r\n  return useObserver(() => (\r\n    <Container>\r\n      <ModalHeader>\r\n        <ModalTitle>JSON Editor</ModalTitle>\r\n        <ModalAction\r\n          icon={remove}\r\n          label=\"Close\"\r\n          onClick={() => modal.dismiss()}\r\n        />\r\n      </ModalHeader>\r\n      <Body>\r\n        <CodeInput\r\n          as=\"textarea\"\r\n          id=\"data-editor\"\r\n          value={value}\r\n          onChange={(event: ChangeEvent<HTMLTextAreaElement>) => {\r\n            setValue(event.target.value)\r\n          }}\r\n        />\r\n        {errors.length > 0 && (\r\n          <ErrorContainer>\r\n            {errors.map((error, index) => (\r\n              // eslint-disable-next-line react/no-array-index-key\r\n              <ErrorLine key={index}>{error}</ErrorLine>\r\n            ))}\r\n          </ErrorContainer>\r\n        )}\r\n      </Body>\r\n      <ModalFooter>\r\n        <SecondaryButton onClick={() => copyTextToClipboard(value)}>\r\n          Copy to Clipboard\r\n        </SecondaryButton>\r\n        <SecondaryButton onClick={() => modal.dismiss()}>\r\n          Cancel\r\n        </SecondaryButton>\r\n        <PrimaryButton\r\n          disabled={errors.length > 0}\r\n          onClick={() => {\r\n            applySnapshot(message, {\r\n              ...messageOf(JSON.parse(value)),\r\n              id: message.id,\r\n            })\r\n            modal.dismiss()\r\n          }}\r\n        >\r\n          Apply Changes\r\n        </PrimaryButton>\r\n      </ModalFooter>\r\n    </Container>\r\n  ))\r\n}\r\n"]},"metadata":{},"sourceType":"module"}