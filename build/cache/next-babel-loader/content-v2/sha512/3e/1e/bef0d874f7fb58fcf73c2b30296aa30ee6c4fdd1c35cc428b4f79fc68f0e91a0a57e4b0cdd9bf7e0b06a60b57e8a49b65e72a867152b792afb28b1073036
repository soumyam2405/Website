{"ast":null,"code":"import _defineProperty from \"F:/DiscordHookSite/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\DiscordHookSite\\\\common\\\\page\\\\PageHead.tsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Head from \"next/head\";\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nconst links = [{\n  rel: \"shortcut icon\",\n  href: \"/favicon.ico\",\n  sizes: \"16x16 32x32\",\n  type: \"image/x-icon\"\n}, [16, 32].map(size => ({\n  rel: \"icon\",\n  href: `/static/favicon-${size}.png`,\n  sizes: `${size}x${size}`,\n  type: \"image/png\"\n})), {\n  rel: \"icon\",\n  href: \"/static/favicon.svg\",\n  sizes: \"any\",\n  type: \"image/svg+xml\"\n}, [64, 96, 128, 192, 256].map(size => ({\n  rel: \"apple-touch-icon\",\n  href: `/static/icon-${size}.png`,\n  sizes: `${size}x${size}`,\n  type: \"image/png\"\n})), {\n  rel: \"apple-touch-icon\",\n  href: \"/static/icon.svg\",\n  sizes: \"any\",\n  type: \"image/svg+xml\"\n}, {\n  rel: \"mask-icon\",\n  href: \"/static/mask-icon.svg\",\n  type: \"image/svg+xml\"\n}, {\n  rel: \"manifest\",\n  href: \"/static/manifest.webmanifest\"\n}].flat();\nexport function PageHead(props) {\n  _s();\n\n  const {\n    title,\n    description,\n    children\n  } = props;\n  const router = useRouter();\n  return /*#__PURE__*/_jsxDEV(Head, {\n    children: [/*#__PURE__*/_jsxDEV(\"meta\", {\n      charSet: \"UTF-8\"\n    }, \"charset\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n      name: \"viewport\",\n      content: \"width=device-width, initial-scale=1.0\"\n    }, \"viewport\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"title\", {\n      children: title === \"Discohook\" ? title : `${title} â€¢ CoolBoy`\n    }, \"title\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n      name: \"description\",\n      content: description\n    }, \"description\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n      property: \"og:title\",\n      content: title\n    }, \"og:title\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n      property: \"og:type\",\n      content: \"website\"\n    }, \"og:type\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n      property: \"og:image\",\n      content: \"/static/icon-256.png\"\n    }, \"og:image\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n      property: \"og:url\",\n      content: `https://discohook.org${router.pathname}`\n    }, \"og:url\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n      property: \"og:description\",\n      content: description\n    }, \"og:description\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n      property: \"og:site_name\",\n      content: \"Discohook\"\n    }, \"og:site_name\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n      rel: \"canonical\",\n      href: `https://discohook.org${router.pathname}`\n    }, \"canonical\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), links.map(link => /*#__PURE__*/_jsxDEV(\"link\", _objectSpread({}, link), `${link.rel}:${link.href}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"meta\", {\n      name: \"application-name\",\n      content: \"Discohook\"\n    }, \"application-name\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n      name: \"theme-color\",\n      content: \"#58b9ff\"\n    }, \"theme-color\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n      name: \"color-scheme\",\n      content: \"dark light\"\n    }, \"color-scheme\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n      name: \"google\",\n      content: \"notranslate\"\n    }, \"google\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PageHead, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = PageHead;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageHead\");","map":{"version":3,"sources":["F:/DiscordHookSite/common/page/PageHead.tsx"],"names":["Head","useRouter","React","links","rel","href","sizes","type","map","size","flat","PageHead","props","title","description","children","router","pathname","link"],"mappings":"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","sourcesContent":["import Head from \"next/head\"\r\nimport { useRouter } from \"next/router\"\r\nimport React, { ReactNode } from \"react\"\r\n\r\nconst links = [\r\n  {\r\n    rel: \"shortcut icon\",\r\n    href: \"/favicon.ico\",\r\n    sizes: \"16x16 32x32\",\r\n    type: \"image/x-icon\",\r\n  },\r\n  [16, 32].map(size => ({\r\n    rel: \"icon\",\r\n    href: `/static/favicon-${size}.png`,\r\n    sizes: `${size}x${size}`,\r\n    type: \"image/png\",\r\n  })),\r\n  {\r\n    rel: \"icon\",\r\n    href: \"/static/favicon.svg\",\r\n    sizes: \"any\",\r\n    type: \"image/svg+xml\",\r\n  },\r\n  [64, 96, 128, 192, 256].map(size => ({\r\n    rel: \"apple-touch-icon\",\r\n    href: `/static/icon-${size}.png`,\r\n    sizes: `${size}x${size}`,\r\n    type: \"image/png\",\r\n  })),\r\n  {\r\n    rel: \"apple-touch-icon\",\r\n    href: \"/static/icon.svg\",\r\n    sizes: \"any\",\r\n    type: \"image/svg+xml\",\r\n  },\r\n  {\r\n    rel: \"mask-icon\",\r\n    href: \"/static/mask-icon.svg\",\r\n    type: \"image/svg+xml\",\r\n  },\r\n  {\r\n    rel: \"manifest\",\r\n    href: \"/static/manifest.webmanifest\",\r\n  },\r\n].flat()\r\n\r\nexport type PageHeadProps = {\r\n  title: string\r\n  description: string\r\n  children?: ReactNode\r\n}\r\n\r\nexport function PageHead(props: PageHeadProps) {\r\n  const { title, description, children } = props\r\n\r\n  const router = useRouter()\r\n\r\n  return (\r\n    <Head>\r\n      <meta key=\"charset\" charSet=\"UTF-8\" />\r\n      <meta\r\n        key=\"viewport\"\r\n        name=\"viewport\"\r\n        content=\"width=device-width, initial-scale=1.0\"\r\n      />\r\n      <title key=\"title\">\r\n        {title === \"Discohook\" ? title : `${title} â€¢ CoolBoy`}\r\n      </title>\r\n      <meta key=\"description\" name=\"description\" content={description} />\r\n      <meta key=\"og:title\" property=\"og:title\" content={title} />\r\n      <meta key=\"og:type\" property=\"og:type\" content=\"website\" />\r\n      <meta key=\"og:image\" property=\"og:image\" content=\"/static/icon-256.png\" />\r\n      <meta\r\n        key=\"og:url\"\r\n        property=\"og:url\"\r\n        content={`https://discohook.org${router.pathname}`}\r\n      />\r\n      <meta\r\n        key=\"og:description\"\r\n        property=\"og:description\"\r\n        content={description}\r\n      />\r\n      <meta key=\"og:site_name\" property=\"og:site_name\" content=\"Discohook\" />\r\n      <link\r\n        key=\"canonical\"\r\n        rel=\"canonical\"\r\n        href={`https://discohook.org${router.pathname}`}\r\n      />\r\n      {links.map(link => (\r\n        <link key={`${link.rel}:${link.href}`} {...link} />\r\n      ))}\r\n      <meta\r\n        key=\"application-name\"\r\n        name=\"application-name\"\r\n        content=\"Discohook\"\r\n      />\r\n      <meta key=\"theme-color\" name=\"theme-color\" content=\"#58b9ff\" />\r\n      <meta key=\"color-scheme\" name=\"color-scheme\" content=\"dark light\" />\r\n      <meta key=\"google\" name=\"google\" content=\"notranslate\" />\r\n      {children}\r\n    </Head>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}