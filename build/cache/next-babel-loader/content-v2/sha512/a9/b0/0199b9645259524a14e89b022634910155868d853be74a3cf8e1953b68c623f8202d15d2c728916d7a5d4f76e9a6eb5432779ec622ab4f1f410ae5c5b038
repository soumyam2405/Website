{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useObserver } from \"mobx-react-lite\";\nimport { ellipsis } from \"polished\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Button } from \"../../../../common/input/button/Button\";\nimport { ActionButtons } from \"../../../../common/layout/ActionButtons\";\nimport { ModalManagerContext } from \"../../../../common/modal/ModalManagerContext\";\nimport { useRequiredContext } from \"../../../../common/state/useRequiredContext\";\nimport { copy } from \"../../../../icons/copy\";\nimport { save } from \"../../../../icons/save\";\nimport { trash } from \"../../../../icons/trash\";\nimport { upload } from \"../../../../icons/upload\";\nimport { BackupManagerContext } from \"../BackupManagerContext\";\nimport { DeletionConfirmationModal } from \"./DeletionConfirmationModal\";\nconst Container = styled.li.withConfig({\n  componentId: \"sc-4y1qwg-0\"\n})([\"height:48px;display:flex;align-items:center;list-style:none;border:0 solid \", \";& + &{border-top-width:1px;}& > \", \"{margin:0;}\"], ({\n  theme\n}) => theme.backgroundModifier.accent, Button);\nconst BackupName = styled.div.withConfig({\n  componentId: \"sc-4y1qwg-1\"\n})([\"\", \";flex:1;font-weight:500;\"], ellipsis());\nexport function BackupItem(props) {\n  const {\n    backup\n  } = props;\n  const modalManager = useRequiredContext(ModalManagerContext);\n  const backupManager = useRequiredContext(BackupManagerContext);\n  return useObserver(() => /*#__PURE__*/_jsxs(Container, {\n    children: [/*#__PURE__*/_jsx(BackupName, {\n      children: backup.name\n    }), /*#__PURE__*/_jsx(ActionButtons, {\n      actions: [{\n        icon: upload,\n        label: \"Load\",\n        handler: async () => backupManager.loadBackup(backup.name)\n      }, {\n        icon: save,\n        label: \"Export\",\n        handler: async () => backupManager.exportBackup(backup.name),\n        overflow: true\n      }, {\n        icon: copy,\n        label: \"Overwrite\",\n        handler: async () => backupManager.saveBackup(backup.name),\n        overflow: true\n      }, {\n        icon: trash,\n        label: \"Delete\",\n        handler: () => modalManager.spawn({\n          render: () => /*#__PURE__*/_jsx(DeletionConfirmationModal, {\n            backupManager: backupManager,\n            backup: backup\n          })\n        }),\n        overflow: true\n      }]\n    })]\n  }));\n}","map":{"version":3,"sources":["F:/DiscordHookSite/modules/database/backup/modal/BackupItem.tsx"],"names":["useObserver","ellipsis","React","styled","Button","ActionButtons","ModalManagerContext","useRequiredContext","copy","save","trash","upload","BackupManagerContext","DeletionConfirmationModal","Container","li","theme","backgroundModifier","accent","BackupName","div","BackupItem","props","backup","modalManager","backupManager","name","icon","label","handler","loadBackup","exportBackup","overflow","saveBackup","spawn","render"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,iBAA5B;AACA,SAASC,QAAT,QAAyB,UAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,QAAuB,wCAAvB;AACA,SAASC,aAAT,QAA8B,yCAA9B;AACA,SAASC,mBAAT,QAAoC,8CAApC;AACA,SAASC,kBAAT,QAAmC,6CAAnC;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,SAASC,KAAT,QAAsB,yBAAtB;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,SAASC,oBAAT,QAAqC,yBAArC;AAEA,SAASC,yBAAT,QAA0C,6BAA1C;AAEA,MAAMC,SAAS,GAAGX,MAAM,CAACY,EAAV;AAAA;AAAA,wIAQK,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,kBAAN,CAAyBC,MAR7C,EAcPd,MAdO,CAAf;AAmBA,MAAMe,UAAU,GAAGhB,MAAM,CAACiB,GAAV;AAAA;AAAA,qCACZnB,QAAQ,EADI,CAAhB;AAWA,OAAO,SAASoB,UAAT,CAAoBC,KAApB,EAA4C;AACjD,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAnB;AAEA,QAAME,YAAY,GAAGjB,kBAAkB,CAACD,mBAAD,CAAvC;AACA,QAAMmB,aAAa,GAAGlB,kBAAkB,CAACK,oBAAD,CAAxC;AAEA,SAAOZ,WAAW,CAAC,mBACjB,MAAC,SAAD;AAAA,4BACE,KAAC,UAAD;AAAA,gBAAauB,MAAM,CAACG;AAApB,MADF,eAEE,KAAC,aAAD;AACE,MAAA,OAAO,EAAE,CACP;AACEC,QAAAA,IAAI,EAAEhB,MADR;AAEEiB,QAAAA,KAAK,EAAE,MAFT;AAGEC,QAAAA,OAAO,EAAE,YAAYJ,aAAa,CAACK,UAAd,CAAyBP,MAAM,CAACG,IAAhC;AAHvB,OADO,EAMP;AACEC,QAAAA,IAAI,EAAElB,IADR;AAEEmB,QAAAA,KAAK,EAAE,QAFT;AAGEC,QAAAA,OAAO,EAAE,YAAYJ,aAAa,CAACM,YAAd,CAA2BR,MAAM,CAACG,IAAlC,CAHvB;AAIEM,QAAAA,QAAQ,EAAE;AAJZ,OANO,EAYP;AACEL,QAAAA,IAAI,EAAEnB,IADR;AAEEoB,QAAAA,KAAK,EAAE,WAFT;AAGEC,QAAAA,OAAO,EAAE,YAAYJ,aAAa,CAACQ,UAAd,CAAyBV,MAAM,CAACG,IAAhC,CAHvB;AAIEM,QAAAA,QAAQ,EAAE;AAJZ,OAZO,EAkBP;AACEL,QAAAA,IAAI,EAAEjB,KADR;AAEEkB,QAAAA,KAAK,EAAE,QAFT;AAGEC,QAAAA,OAAO,EAAE,MACPL,YAAY,CAACU,KAAb,CAAmB;AACjBC,UAAAA,MAAM,EAAE,mBACN,KAAC,yBAAD;AACE,YAAA,aAAa,EAAEV,aADjB;AAEE,YAAA,MAAM,EAAEF;AAFV;AAFe,SAAnB,CAJJ;AAYES,QAAAA,QAAQ,EAAE;AAZZ,OAlBO;AADX,MAFF;AAAA,IADgB,CAAlB;AAwCD","sourcesContent":["import { useObserver } from \"mobx-react-lite\"\r\nimport { ellipsis } from \"polished\"\r\nimport React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { Button } from \"../../../../common/input/button/Button\"\r\nimport { ActionButtons } from \"../../../../common/layout/ActionButtons\"\r\nimport { ModalManagerContext } from \"../../../../common/modal/ModalManagerContext\"\r\nimport { useRequiredContext } from \"../../../../common/state/useRequiredContext\"\r\nimport { copy } from \"../../../../icons/copy\"\r\nimport { save } from \"../../../../icons/save\"\r\nimport { trash } from \"../../../../icons/trash\"\r\nimport { upload } from \"../../../../icons/upload\"\r\nimport { BackupManagerContext } from \"../BackupManagerContext\"\r\nimport type { BackupData } from \"../types/BackupData\"\r\nimport { DeletionConfirmationModal } from \"./DeletionConfirmationModal\"\r\n\r\nconst Container = styled.li`\r\n  height: 48px;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  list-style: none;\r\n\r\n  border: 0 solid ${({ theme }) => theme.backgroundModifier.accent};\r\n\r\n  & + & {\r\n    border-top-width: 1px;\r\n  }\r\n\r\n  & > ${Button} {\r\n    margin: 0;\r\n  }\r\n`\r\n\r\nconst BackupName = styled.div`\r\n  ${ellipsis()};\r\n\r\n  flex: 1;\r\n  font-weight: 500;\r\n`\r\n\r\nexport type BackupItemProps = {\r\n  backup: BackupData\r\n}\r\n\r\nexport function BackupItem(props: BackupItemProps) {\r\n  const { backup } = props\r\n\r\n  const modalManager = useRequiredContext(ModalManagerContext)\r\n  const backupManager = useRequiredContext(BackupManagerContext)\r\n\r\n  return useObserver(() => (\r\n    <Container>\r\n      <BackupName>{backup.name}</BackupName>\r\n      <ActionButtons\r\n        actions={[\r\n          {\r\n            icon: upload,\r\n            label: \"Load\",\r\n            handler: async () => backupManager.loadBackup(backup.name),\r\n          },\r\n          {\r\n            icon: save,\r\n            label: \"Export\",\r\n            handler: async () => backupManager.exportBackup(backup.name),\r\n            overflow: true,\r\n          },\r\n          {\r\n            icon: copy,\r\n            label: \"Overwrite\",\r\n            handler: async () => backupManager.saveBackup(backup.name),\r\n            overflow: true,\r\n          },\r\n          {\r\n            icon: trash,\r\n            label: \"Delete\",\r\n            handler: () =>\r\n              modalManager.spawn({\r\n                render: () => (\r\n                  <DeletionConfirmationModal\r\n                    backupManager={backupManager}\r\n                    backup={backup}\r\n                  />\r\n                ),\r\n              }),\r\n            overflow: true,\r\n          },\r\n        ]}\r\n      />\r\n    </Container>\r\n  ))\r\n}\r\n"]},"metadata":{},"sourceType":"module"}