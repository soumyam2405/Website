{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\DiscordHookSite\\\\modules\\\\database\\\\backup\\\\modal\\\\BackupCreationControls.tsx\",\n    _s = $RefreshSig$();\n\nimport { useObserver } from \"mobx-react-lite\";\nimport React, { useState } from \"react\";\nimport { PrimaryButton } from \"../../../../common/input/button/PrimaryButton\";\nimport { InputField } from \"../../../../common/input/text/InputField\";\nimport { useRequiredContext } from \"../../../../common/state/useRequiredContext\";\nimport { BackupManagerContext } from \"../BackupManagerContext\";\nexport function BackupCreationControls() {\n  _s();\n\n  const backupManager = useRequiredContext(BackupManagerContext);\n  const {\n    0: backupName,\n    1: setBackupName\n  } = useState(\"\");\n  return useObserver(() => /*#__PURE__*/_jsxDEV(InputField, {\n    id: \"backup-name\",\n    value: backupName,\n    onChange: setBackupName,\n    label: \"Backup name\",\n    children: /*#__PURE__*/_jsxDEV(PrimaryButton, {\n      disabled: backupName.length === 0,\n      onClick: async () => {\n        await backupManager.saveBackup(backupName.trim());\n        setBackupName(\"\");\n      },\n      children: backupManager.backups.some(backup => backup.name === backupName.trim()) ? \"Overwrite\" : \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this));\n}\n\n_s(BackupCreationControls, \"QJ10jc7MtzD8YeRCmhfYQHcHgX0=\", false, function () {\n  return [useRequiredContext, useObserver];\n});\n\n_c = BackupCreationControls;\n\nvar _c;\n\n$RefreshReg$(_c, \"BackupCreationControls\");","map":{"version":3,"sources":["F:/DiscordHookSite/modules/database/backup/modal/BackupCreationControls.tsx"],"names":["useObserver","React","useState","PrimaryButton","InputField","useRequiredContext","BackupManagerContext","BackupCreationControls","backupManager","backupName","setBackupName","length","saveBackup","trim","backups","some","backup","name"],"mappings":";;;;;AAAA,SAASA,WAAT,QAA4B,iBAA5B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,+CAA9B;AACA,SAASC,UAAT,QAA2B,0CAA3B;AACA,SAASC,kBAAT,QAAmC,6CAAnC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AAEA,OAAO,SAASC,sBAAT,GAAkC;AAAA;;AACvC,QAAMC,aAAa,GAAGH,kBAAkB,CAACC,oBAAD,CAAxC;AAEA,QAAM;AAAA,OAACG,UAAD;AAAA,OAAaC;AAAb,MAA8BR,QAAQ,CAAC,EAAD,CAA5C;AAEA,SAAOF,WAAW,CAAC,mBACjB,QAAC,UAAD;AACE,IAAA,EAAE,EAAC,aADL;AAEE,IAAA,KAAK,EAAES,UAFT;AAGE,IAAA,QAAQ,EAAEC,aAHZ;AAIE,IAAA,KAAK,EAAC,aAJR;AAAA,2BAME,QAAC,aAAD;AACE,MAAA,QAAQ,EAAED,UAAU,CAACE,MAAX,KAAsB,CADlC;AAEE,MAAA,OAAO,EAAE,YAAY;AACnB,cAAMH,aAAa,CAACI,UAAd,CAAyBH,UAAU,CAACI,IAAX,EAAzB,CAAN;AACAH,QAAAA,aAAa,CAAC,EAAD,CAAb;AACD,OALH;AAAA,gBAOGF,aAAa,CAACM,OAAd,CAAsBC,IAAtB,CAA2BC,MAAM,IAAIA,MAAM,CAACC,IAAP,KAAgBR,UAAU,CAACI,IAAX,EAArD,IACG,WADH,GAEG;AATN;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,UADgB,CAAlB;AAoBD;;GAzBeN,sB;UACQF,kB,EAIfL,W;;;KALOO,sB","sourcesContent":["import { useObserver } from \"mobx-react-lite\"\r\nimport React, { useState } from \"react\"\r\nimport { PrimaryButton } from \"../../../../common/input/button/PrimaryButton\"\r\nimport { InputField } from \"../../../../common/input/text/InputField\"\r\nimport { useRequiredContext } from \"../../../../common/state/useRequiredContext\"\r\nimport { BackupManagerContext } from \"../BackupManagerContext\"\r\n\r\nexport function BackupCreationControls() {\r\n  const backupManager = useRequiredContext(BackupManagerContext)\r\n\r\n  const [backupName, setBackupName] = useState(\"\")\r\n\r\n  return useObserver(() => (\r\n    <InputField\r\n      id=\"backup-name\"\r\n      value={backupName}\r\n      onChange={setBackupName}\r\n      label=\"Backup name\"\r\n    >\r\n      <PrimaryButton\r\n        disabled={backupName.length === 0}\r\n        onClick={async () => {\r\n          await backupManager.saveBackup(backupName.trim())\r\n          setBackupName(\"\")\r\n        }}\r\n      >\r\n        {backupManager.backups.some(backup => backup.name === backupName.trim())\r\n          ? \"Overwrite\"\r\n          : \"Save\"}\r\n      </PrimaryButton>\r\n    </InputField>\r\n  ))\r\n}\r\n"]},"metadata":{},"sourceType":"module"}