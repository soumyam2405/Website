{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { base64Decode } from \"../../common/base64/base64Decode\";\nimport { parseJson } from \"../../common/object/parseJson\";\nimport { toSnakeCase } from \"../../common/object/toSnakeCase\";\nimport { messageOf } from \"../message/helpers/messageOf\";\nimport { MESSAGE_REF_RE } from \"../webhook/constants\";\nimport { DEFAULT_EDITOR_MANAGER_STATE } from \"./defaultEditorManagerState\";\nimport { EditorManager } from \"./EditorManager\";\nexport const getEditorManagerFromQuery = query => {\n  var _base64Decode, _ref, _query$data;\n\n  const {\n    value,\n    error\n  } = parseJson((_base64Decode = base64Decode(String((_ref = (_query$data = query.data) !== null && _query$data !== void 0 ? _query$data : query.message) !== null && _ref !== void 0 ? _ref : \"\"))) !== null && _base64Decode !== void 0 ? _base64Decode : \"\");\n\n  if (error || !value || typeof value !== \"object\") {\n    return EditorManager.create(DEFAULT_EDITOR_MANAGER_STATE);\n  }\n\n  if (\"message\" in value) {\n    return EditorManager.create({\n      messages: [messageOf(toSnakeCase(value.message))]\n    });\n  }\n\n  if (!(\"messages\" in value) || !Array.isArray(value.messages)) {\n    return EditorManager.create(DEFAULT_EDITOR_MANAGER_STATE);\n  }\n\n  return EditorManager.create({\n    messages: value.messages.map(message => {\n      var _MESSAGE_REF_RE$exec;\n\n      if (typeof message !== \"object\" || !message || !(\"data\" in message)) {\n        return {};\n      }\n\n      return _objectSpread(_objectSpread({}, messageOf(message.data)), {}, {\n        reference: message.reference && ((_MESSAGE_REF_RE$exec = MESSAGE_REF_RE.exec(String(message.reference))) === null || _MESSAGE_REF_RE$exec === void 0 ? void 0 : _MESSAGE_REF_RE$exec[0]) || undefined,\n        timestamp: \"timestamp\" in message ? new Date(String(message.timestamp)) : undefined,\n        badge: \"badge\" in message ? message.badge === null ? null : String(message.badge) : undefined\n      });\n    }),\n    targets: \"targets\" in value && Array.isArray(value.targets) ? value.targets.map(target => {\n      if (typeof target !== \"object\" || !target || !(\"url\" in target)) {\n        return {};\n      }\n\n      return {\n        url: String(target.url)\n      };\n    }) : [{}]\n  });\n};","map":{"version":3,"sources":["F:/DiscordHookSite/modules/editor/getEditorManagerFromQuery.ts"],"names":["base64Decode","parseJson","toSnakeCase","messageOf","MESSAGE_REF_RE","DEFAULT_EDITOR_MANAGER_STATE","EditorManager","getEditorManagerFromQuery","query","value","error","String","data","message","create","messages","Array","isArray","map","reference","exec","undefined","timestamp","Date","badge","targets","target","url"],"mappings":";;;;;;AACA,SAASA,YAAT,QAA6B,kCAA7B;AACA,SAASC,SAAT,QAA0B,+BAA1B;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,SAASC,SAAT,QAA0B,8BAA1B;AAEA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,4BAAT,QAA6C,6BAA7C;AACA,SAASC,aAAT,QAA8B,iBAA9B;AAEA,OAAO,MAAMC,yBAAyB,GAAIC,KAAD,IAA2B;AAAA;;AAClE,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAmBT,SAAS,kBAChCD,YAAY,CAACW,MAAM,wBAACH,KAAK,CAACI,IAAP,qDAAeJ,KAAK,CAACK,OAArB,uCAAgC,EAAhC,CAAP,CADoB,yDAC2B,EAD3B,CAAlC;;AAIA,MAAIH,KAAK,IAAI,CAACD,KAAV,IAAmB,OAAOA,KAAP,KAAiB,QAAxC,EAAkD;AAChD,WAAOH,aAAa,CAACQ,MAAd,CAAqBT,4BAArB,CAAP;AACD;;AAED,MAAI,aAAaI,KAAjB,EAAwB;AACtB,WAAOH,aAAa,CAACQ,MAAd,CAAqB;AAC1BC,MAAAA,QAAQ,EAAE,CAACZ,SAAS,CAACD,WAAW,CAACO,KAAK,CAACI,OAAP,CAAZ,CAAV;AADgB,KAArB,CAAP;AAGD;;AAED,MAAI,EAAE,cAAcJ,KAAhB,KAA0B,CAACO,KAAK,CAACC,OAAN,CAAcR,KAAK,CAACM,QAApB,CAA/B,EAA8D;AAC5D,WAAOT,aAAa,CAACQ,MAAd,CAAqBT,4BAArB,CAAP;AACD;;AAED,SAAOC,aAAa,CAACQ,MAAd,CAAqB;AAC1BC,IAAAA,QAAQ,EAAEN,KAAK,CAACM,QAAN,CAAeG,GAAf,CAAmBL,OAAO,IAAI;AAAA;;AACtC,UAAI,OAAOA,OAAP,KAAmB,QAAnB,IAA+B,CAACA,OAAhC,IAA2C,EAAE,UAAUA,OAAZ,CAA/C,EAAqE;AACnE,eAAO,EAAP;AACD;;AAED,6CACKV,SAAS,CAACU,OAAO,CAACD,IAAT,CADd;AAEEO,QAAAA,SAAS,EACNN,OAAO,CAACM,SAAR,6BACCf,cAAc,CAACgB,IAAf,CAAoBT,MAAM,CAACE,OAAO,CAACM,SAAT,CAA1B,CADD,yDACC,qBAAiD,CAAjD,CADD,CAAD,IAEAE,SALJ;AAMEC,QAAAA,SAAS,EACP,eAAeT,OAAf,GACI,IAAIU,IAAJ,CAASZ,MAAM,CAACE,OAAO,CAACS,SAAT,CAAf,CADJ,GAEID,SATR;AAUEG,QAAAA,KAAK,EACH,WAAWX,OAAX,GACIA,OAAO,CAACW,KAAR,KAAkB,IAAlB,GACE,IADF,GAEEb,MAAM,CAACE,OAAO,CAACW,KAAT,CAHZ,GAIIH;AAfR;AAiBD,KAtBS,CADgB;AAwB1BI,IAAAA,OAAO,EACL,aAAahB,KAAb,IAAsBO,KAAK,CAACC,OAAN,CAAcR,KAAK,CAACgB,OAApB,CAAtB,GACIhB,KAAK,CAACgB,OAAN,CAAcP,GAAd,CAAkBQ,MAAM,IAAI;AAC1B,UAAI,OAAOA,MAAP,KAAkB,QAAlB,IAA8B,CAACA,MAA/B,IAAyC,EAAE,SAASA,MAAX,CAA7C,EAAiE;AAC/D,eAAO,EAAP;AACD;;AAED,aAAO;AACLC,QAAAA,GAAG,EAAEhB,MAAM,CAACe,MAAM,CAACC,GAAR;AADN,OAAP;AAGD,KARD,CADJ,GAUI,CAAC,EAAD;AAnCoB,GAArB,CAAP;AAqCD,CAxDM","sourcesContent":["import type { ParsedUrlQuery } from \"querystring\"\r\nimport { base64Decode } from \"../../common/base64/base64Decode\"\r\nimport { parseJson } from \"../../common/object/parseJson\"\r\nimport { toSnakeCase } from \"../../common/object/toSnakeCase\"\r\nimport { messageOf } from \"../message/helpers/messageOf\"\r\nimport type { MessageData } from \"../message/state/data/MessageData\"\r\nimport { MESSAGE_REF_RE } from \"../webhook/constants\"\r\nimport { DEFAULT_EDITOR_MANAGER_STATE } from \"./defaultEditorManagerState\"\r\nimport { EditorManager } from \"./EditorManager\"\r\n\r\nexport const getEditorManagerFromQuery = (query: ParsedUrlQuery) => {\r\n  const { value, error } = parseJson(\r\n    base64Decode(String(query.data ?? query.message ?? \"\")) ?? \"\",\r\n  )\r\n\r\n  if (error || !value || typeof value !== \"object\") {\r\n    return EditorManager.create(DEFAULT_EDITOR_MANAGER_STATE)\r\n  }\r\n\r\n  if (\"message\" in value) {\r\n    return EditorManager.create({\r\n      messages: [messageOf(toSnakeCase(value.message) as MessageData)],\r\n    })\r\n  }\r\n\r\n  if (!(\"messages\" in value) || !Array.isArray(value.messages)) {\r\n    return EditorManager.create(DEFAULT_EDITOR_MANAGER_STATE)\r\n  }\r\n\r\n  return EditorManager.create({\r\n    messages: value.messages.map(message => {\r\n      if (typeof message !== \"object\" || !message || !(\"data\" in message)) {\r\n        return {}\r\n      }\r\n\r\n      return {\r\n        ...messageOf(message.data as MessageData),\r\n        reference:\r\n          (message.reference &&\r\n            MESSAGE_REF_RE.exec(String(message.reference))?.[0]) ||\r\n          undefined,\r\n        timestamp:\r\n          \"timestamp\" in message\r\n            ? new Date(String(message.timestamp))\r\n            : undefined,\r\n        badge:\r\n          \"badge\" in message\r\n            ? message.badge === null\r\n              ? null\r\n              : String(message.badge)\r\n            : undefined,\r\n      }\r\n    }),\r\n    targets:\r\n      \"targets\" in value && Array.isArray(value.targets)\r\n        ? value.targets.map(target => {\r\n            if (typeof target !== \"object\" || !target || !(\"url\" in target)) {\r\n              return {}\r\n            }\r\n\r\n            return {\r\n              url: String(target.url),\r\n            }\r\n          })\r\n        : [{}],\r\n  })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}