{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useObserver } from \"mobx-react-lite\";\nimport { rem } from \"polished\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Markdown } from \"../../markdown/Markdown\";\nimport { MarkdownContainer } from \"../../markdown/styles/MarkdownContainer\";\nimport { getFieldGridColumn } from \"../helpers/getFieldGridColumn\";\nconst Container = styled.div.withConfig({\n  componentId: \"rgqgux-0\"\n})([\"min-width:0;font-size:\", \";line-height:\", \";\"], rem(14), rem(18));\nconst FieldName = styled.div.withConfig({\n  componentId: \"rgqgux-1\"\n})([\"min-width:0;margin:0 0 1px;font-size:\", \";font-weight:600;color:\", \";\"], rem(14), ({\n  theme\n}) => theme.header.primary);\nconst FieldValue = styled.div.withConfig({\n  componentId: \"rgqgux-2\"\n})([\"min-width:0;& > \", \"{font-size:\", \";line-height:\", \";color:\", \";white-space:pre-line;}\"], MarkdownContainer, rem(14), rem(18), ({\n  theme\n}) => theme.text.normal);\nexport function EmbedField(props) {\n  const {\n    field\n  } = props;\n  return useObserver(() => /*#__PURE__*/_jsxs(Container, {\n    style: {\n      gridColumn: getFieldGridColumn(field)\n    },\n    children: [/*#__PURE__*/_jsx(FieldName, {\n      children: /*#__PURE__*/_jsx(Markdown, {\n        content: field.name,\n        type: \"embed-header\"\n      })\n    }), /*#__PURE__*/_jsx(FieldValue, {\n      children: /*#__PURE__*/_jsx(Markdown, {\n        content: field.value,\n        type: \"embed-content\"\n      })\n    })]\n  }));\n}","map":{"version":3,"sources":["F:/DiscordHookSite/modules/message/preview/EmbedField.tsx"],"names":["useObserver","rem","React","styled","Markdown","MarkdownContainer","getFieldGridColumn","Container","div","FieldName","theme","header","primary","FieldValue","text","normal","EmbedField","props","field","gridColumn","name","value"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,iBAA5B;AACA,SAASC,GAAT,QAAoB,UAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,SAASC,iBAAT,QAAkC,yCAAlC;AACA,SAASC,kBAAT,QAAmC,+BAAnC;AAGA,MAAMC,SAAS,GAAGJ,MAAM,CAACK,GAAV;AAAA;AAAA,qDAGAP,GAAG,CAAC,EAAD,CAHH,EAIEA,GAAG,CAAC,EAAD,CAJL,CAAf;AAOA,MAAMQ,SAAS,GAAGN,MAAM,CAACK,GAAV;AAAA;AAAA,8EAKAP,GAAG,CAAC,EAAD,CALH,EAOJ,CAAC;AAAES,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaC,OAPxB,CAAf;AAUA,MAAMC,UAAU,GAAGV,MAAM,CAACK,GAAV;AAAA;AAAA,+FAGRH,iBAHQ,EAICJ,GAAG,CAAC,EAAD,CAJJ,EAKGA,GAAG,CAAC,EAAD,CALN,EAMH,CAAC;AAAES,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACI,IAAN,CAAWC,MANvB,CAAhB;AAeA,OAAO,SAASC,UAAT,CAAoBC,KAApB,EAA4C;AACjD,QAAM;AAAEC,IAAAA;AAAF,MAAYD,KAAlB;AAEA,SAAOjB,WAAW,CAAC,mBACjB,MAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAEmB,MAAAA,UAAU,EAAEb,kBAAkB,CAACY,KAAD;AAAhC,KAAlB;AAAA,4BACE,KAAC,SAAD;AAAA,6BACE,KAAC,QAAD;AAAU,QAAA,OAAO,EAAEA,KAAK,CAACE,IAAzB;AAA+B,QAAA,IAAI,EAAC;AAApC;AADF,MADF,eAIE,KAAC,UAAD;AAAA,6BACE,KAAC,QAAD;AAAU,QAAA,OAAO,EAAEF,KAAK,CAACG,KAAzB;AAAgC,QAAA,IAAI,EAAC;AAArC;AADF,MAJF;AAAA,IADgB,CAAlB;AAUD","sourcesContent":["import { useObserver } from \"mobx-react-lite\"\r\nimport { rem } from \"polished\"\r\nimport React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { Markdown } from \"../../markdown/Markdown\"\r\nimport { MarkdownContainer } from \"../../markdown/styles/MarkdownContainer\"\r\nimport { getFieldGridColumn } from \"../helpers/getFieldGridColumn\"\r\nimport type { FieldLike } from \"../state/models/FieldModel\"\r\n\r\nconst Container = styled.div`\r\n  min-width: 0;\r\n\r\n  font-size: ${rem(14)};\r\n  line-height: ${rem(18)};\r\n`\r\n\r\nconst FieldName = styled.div`\r\n  min-width: 0;\r\n\r\n  margin: 0 0 1px;\r\n\r\n  font-size: ${rem(14)};\r\n  font-weight: 600;\r\n  color: ${({ theme }) => theme.header.primary};\r\n`\r\n\r\nconst FieldValue = styled.div`\r\n  min-width: 0;\r\n\r\n  & > ${MarkdownContainer} {\r\n    font-size: ${rem(14)};\r\n    line-height: ${rem(18)};\r\n    color: ${({ theme }) => theme.text.normal};\r\n    white-space: pre-line;\r\n  }\r\n`\r\n\r\nexport type EmbedFieldProps = {\r\n  field: FieldLike\r\n}\r\n\r\nexport function EmbedField(props: EmbedFieldProps) {\r\n  const { field } = props\r\n\r\n  return useObserver(() => (\r\n    <Container style={{ gridColumn: getFieldGridColumn(field) }}>\r\n      <FieldName>\r\n        <Markdown content={field.name} type=\"embed-header\" />\r\n      </FieldName>\r\n      <FieldValue>\r\n        <Markdown content={field.value} type=\"embed-content\" />\r\n      </FieldValue>\r\n    </Container>\r\n  ))\r\n}\r\n"]},"metadata":{},"sourceType":"module"}