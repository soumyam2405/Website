{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useObserver } from \"mobx-react-lite\";\nimport { destroy } from \"mobx-state-tree\";\nimport { useRouter } from \"next/router\";\nimport React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { ModalManagerContext } from \"../common/modal/ModalManagerContext\";\nimport { Footer } from \"../common/page/Footer\";\nimport { Header } from \"../common/page/Header\";\nimport { PageHead } from \"../common/page/PageHead\";\nimport { PreferencesModal } from \"../common/settings/PreferencesModal\";\nimport { useLazyValue } from \"../common/state/useLazyValue\";\nimport { useRequiredContext } from \"../common/state/useRequiredContext\";\nimport { EditorManager } from \"../modules/editor/EditorManager\";\nimport { EditorManagerProvider } from \"../modules/editor/EditorManagerContext\";\nimport { Preview } from \"../modules/message/preview/Preview\";\nconst Container = styled.div.withConfig({\n  componentId: \"gxogrm-0\"\n})([\"height:100%;overflow-y:auto;display:flex;flex-flow:column;\"]);\nconst Content = styled.div.withConfig({\n  componentId: \"gxogrm-1\"\n})([\"flex:1;\"]);\nexport var __N_SSP = true;\nexport default function Viewer(props) {\n  const {\n    state\n  } = props;\n  const editorManager = useLazyValue(() => EditorManager.create(state));\n  useEffect(() => () => destroy(editorManager), [editorManager]);\n  const modalManager = useRequiredContext(ModalManagerContext);\n\n  const spawnSettingsModal = () => modalManager.spawn({\n    render: () => /*#__PURE__*/_jsx(PreferencesModal, {})\n  });\n\n  const router = useRouter();\n  return useObserver(() => /*#__PURE__*/_jsxs(EditorManagerProvider, {\n    value: editorManager,\n    children: [/*#__PURE__*/_jsx(PageHead, {\n      title: \"Message Viewer\",\n      description: \"Discohook's standalone message viewer.\",\n      children: /*#__PURE__*/_jsx(\"meta\", {\n        name: \"referrer\",\n        content: \"strict-origin\"\n      }, \"referrer\")\n    }), /*#__PURE__*/_jsxs(Container, {\n      children: [/*#__PURE__*/_jsx(Header, {\n        items: [{\n          name: \"Editor\",\n          to: `/?data=${encodeURIComponent(String(router.query.data))}`\n        }, {\n          name: \"Settings\",\n          handler: spawnSettingsModal\n        }]\n      }), /*#__PURE__*/_jsx(Content, {\n        children: /*#__PURE__*/_jsx(Preview, {})\n      }), /*#__PURE__*/_jsx(Footer, {})]\n    })]\n  }));\n}","map":{"version":3,"sources":["F:/DiscordHookSite/pages/viewer.tsx"],"names":["useObserver","destroy","useRouter","React","useEffect","styled","ModalManagerContext","Footer","Header","PageHead","PreferencesModal","useLazyValue","useRequiredContext","EditorManager","EditorManagerProvider","Preview","Container","div","Content","Viewer","props","state","editorManager","create","modalManager","spawnSettingsModal","spawn","render","router","name","to","encodeURIComponent","String","query","data","handler"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,iBAA5B;AACA,SAASC,OAAT,QAAkD,iBAAlD;AAEA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,mBAAT,QAAoC,qCAApC;AACA,SAASC,MAAT,QAAuB,uBAAvB;AACA,SAASC,MAAT,QAAuB,uBAAvB;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,SAASC,gBAAT,QAAiC,qCAAjC;AACA,SAASC,YAAT,QAA6B,8BAA7B;AACA,SAASC,kBAAT,QAAmC,oCAAnC;AACA,SAASC,aAAT,QAA8B,iCAA9B;AACA,SAASC,qBAAT,QAAsC,wCAAtC;AAEA,SAASC,OAAT,QAAwB,oCAAxB;AAEA,MAAMC,SAAS,GAAGX,MAAM,CAACY,GAAV;AAAA;AAAA,kEAAf;AAOA,MAAMC,OAAO,GAAGb,MAAM,CAACY,GAAV;AAAA;AAAA,eAAb;;AAQA,eAAe,SAASE,MAAT,CAAgBC,KAAhB,EAAoC;AACjD,QAAM;AAAEC,IAAAA;AAAF,MAAYD,KAAlB;AAEA,QAAME,aAAa,GAAGX,YAAY,CAAC,MAAME,aAAa,CAACU,MAAd,CAAqBF,KAArB,CAAP,CAAlC;AACAjB,EAAAA,SAAS,CAAC,MAAM,MAAMH,OAAO,CAACqB,aAAD,CAApB,EAAqC,CAACA,aAAD,CAArC,CAAT;AAEA,QAAME,YAAY,GAAGZ,kBAAkB,CAACN,mBAAD,CAAvC;;AACA,QAAMmB,kBAAkB,GAAG,MACzBD,YAAY,CAACE,KAAb,CAAmB;AAAEC,IAAAA,MAAM,EAAE,mBAAM,KAAC,gBAAD;AAAhB,GAAnB,CADF;;AAGA,QAAMC,MAAM,GAAG1B,SAAS,EAAxB;AAEA,SAAOF,WAAW,CAAC,mBACjB,MAAC,qBAAD;AAAuB,IAAA,KAAK,EAAEsB,aAA9B;AAAA,4BACE,KAAC,QAAD;AACE,MAAA,KAAK,EAAC,gBADR;AAEE,MAAA,WAAW,EAAC,wCAFd;AAAA,6BAIE;AAAqB,QAAA,IAAI,EAAC,UAA1B;AAAqC,QAAA,OAAO,EAAC;AAA7C,SAAU,UAAV;AAJF,MADF,eAOE,MAAC,SAAD;AAAA,8BACE,KAAC,MAAD;AACE,QAAA,KAAK,EAAE,CACL;AACEO,UAAAA,IAAI,EAAE,QADR;AAEEC,UAAAA,EAAE,EAAG,UAASC,kBAAkB,CAACC,MAAM,CAACJ,MAAM,CAACK,KAAP,CAAaC,IAAd,CAAP,CAA4B;AAF9D,SADK,EAKL;AAAEL,UAAAA,IAAI,EAAE,UAAR;AAAoBM,UAAAA,OAAO,EAAEV;AAA7B,SALK;AADT,QADF,eAUE,KAAC,OAAD;AAAA,+BACE,KAAC,OAAD;AADF,QAVF,eAaE,KAAC,MAAD,KAbF;AAAA,MAPF;AAAA,IADgB,CAAlB;AAyBD","sourcesContent":["import { useObserver } from \"mobx-react-lite\"\r\nimport { destroy, getSnapshot, SnapshotOut } from \"mobx-state-tree\"\r\nimport type { GetServerSidePropsContext } from \"next\"\r\nimport { useRouter } from \"next/router\"\r\nimport React, { useEffect } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { ModalManagerContext } from \"../common/modal/ModalManagerContext\"\r\nimport { Footer } from \"../common/page/Footer\"\r\nimport { Header } from \"../common/page/Header\"\r\nimport { PageHead } from \"../common/page/PageHead\"\r\nimport { PreferencesModal } from \"../common/settings/PreferencesModal\"\r\nimport { useLazyValue } from \"../common/state/useLazyValue\"\r\nimport { useRequiredContext } from \"../common/state/useRequiredContext\"\r\nimport { EditorManager } from \"../modules/editor/EditorManager\"\r\nimport { EditorManagerProvider } from \"../modules/editor/EditorManagerContext\"\r\nimport { getEditorManagerFromQuery } from \"../modules/editor/getEditorManagerFromQuery\"\r\nimport { Preview } from \"../modules/message/preview/Preview\"\r\n\r\nconst Container = styled.div`\r\n  height: 100%;\r\n  overflow-y: auto;\r\n  display: flex;\r\n  flex-flow: column;\r\n`\r\n\r\nconst Content = styled.div`\r\n  flex: 1;\r\n`\r\n\r\nexport type ViewerProps = {\r\n  state: SnapshotOut<typeof EditorManager>\r\n}\r\n\r\nexport default function Viewer(props: ViewerProps) {\r\n  const { state } = props\r\n\r\n  const editorManager = useLazyValue(() => EditorManager.create(state))\r\n  useEffect(() => () => destroy(editorManager), [editorManager])\r\n\r\n  const modalManager = useRequiredContext(ModalManagerContext)\r\n  const spawnSettingsModal = () =>\r\n    modalManager.spawn({ render: () => <PreferencesModal /> })\r\n\r\n  const router = useRouter()\r\n\r\n  return useObserver(() => (\r\n    <EditorManagerProvider value={editorManager}>\r\n      <PageHead\r\n        title=\"Message Viewer\"\r\n        description=\"Discohook's standalone message viewer.\"\r\n      >\r\n        <meta key=\"referrer\" name=\"referrer\" content=\"strict-origin\" />\r\n      </PageHead>\r\n      <Container>\r\n        <Header\r\n          items={[\r\n            {\r\n              name: \"Editor\",\r\n              to: `/?data=${encodeURIComponent(String(router.query.data))}`,\r\n            },\r\n            { name: \"Settings\", handler: spawnSettingsModal },\r\n          ]}\r\n        />\r\n        <Content>\r\n          <Preview />\r\n        </Content>\r\n        <Footer />\r\n      </Container>\r\n    </EditorManagerProvider>\r\n  ))\r\n}\r\n\r\nexport const getServerSideProps = (\r\n  context: GetServerSidePropsContext,\r\n): { props: ViewerProps } => {\r\n  return {\r\n    props: {\r\n      state: getSnapshot(getEditorManagerFromQuery(context.query)),\r\n    },\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}