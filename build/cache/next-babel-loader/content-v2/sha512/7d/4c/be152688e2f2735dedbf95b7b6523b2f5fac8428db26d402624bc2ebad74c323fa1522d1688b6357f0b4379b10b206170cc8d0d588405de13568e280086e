{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\DiscordHookSite\\\\common\\\\input\\\\checkable\\\\Checkbox.tsx\";\nimport { cover, size } from \"polished\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { check } from \"../../../icons/check\";\nimport { CheckableButton } from \"./layout/CheckableButton\";\nimport { CheckableContainer } from \"./layout/CheckableContainer\";\nimport { CheckableInput } from \"./layout/CheckableInput\";\nimport { CheckableLabel } from \"./layout/CheckableLabel\";\nimport { Positioner } from \"./layout/Positioner\";\nconst Button = styled(CheckableButton).withConfig({\n  displayName: \"Checkbox__Button\",\n  componentId: \"cp2m0k-0\"\n})([\"border-radius:3px;& > svg{\", \";\", \";opacity:0;transition:150ms;transition-property:opacity;}input:checked + & > svg{opacity:1;}\"], cover(), size(\"100%\"));\nexport function Checkbox(props) {\n  const {\n    id,\n    label,\n    value,\n    onChange: handleChange,\n    className,\n    disabled\n  } = props;\n  return /*#__PURE__*/_jsxDEV(CheckableContainer, {\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(Positioner, {\n      children: [/*#__PURE__*/_jsxDEV(CheckableInput, {\n        id: id,\n        type: \"checkbox\",\n        disabled: disabled,\n        checked: value,\n        onChange: event => handleChange(event.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: check\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CheckableLabel, {\n      htmlFor: id,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["F:/DiscordHookSite/common/input/checkable/Checkbox.tsx"],"names":["cover","size","React","styled","check","CheckableButton","CheckableContainer","CheckableInput","CheckableLabel","Positioner","Button","Checkbox","props","id","label","value","onChange","handleChange","className","disabled","event","target","checked"],"mappings":";;AAAA,SAASA,KAAT,EAAgBC,IAAhB,QAA4B,UAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,QAAsB,sBAAtB;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,kBAAT,QAAmC,6BAAnC;AACA,SAASC,cAAT,QAA+B,yBAA/B;AACA,SAASC,cAAT,QAA+B,yBAA/B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AAEA,MAAMC,MAAM,GAAGP,MAAM,CAACE,eAAD,CAAT;AAAA;AAAA;AAAA,wIAINL,KAAK,EAJC,EAKNC,IAAI,CAAC,MAAD,CALE,CAAZ;AA0BA,OAAO,SAASU,QAAT,CAAkBC,KAAlB,EAAwC;AAC7C,QAAM;AACJC,IAAAA,EADI;AAEJC,IAAAA,KAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,QAAQ,EAAEC,YAJN;AAKJC,IAAAA,SALI;AAMJC,IAAAA;AANI,MAOFP,KAPJ;AASA,sBACE,QAAC,kBAAD;AAAoB,IAAA,SAAS,EAAEM,SAA/B;AAAA,4BACE,QAAC,UAAD;AAAA,8BACE,QAAC,cAAD;AACE,QAAA,EAAE,EAAEL,EADN;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,QAAQ,EAAEM,QAHZ;AAIE,QAAA,OAAO,EAAEJ,KAJX;AAKE,QAAA,QAAQ,EAAEK,KAAK,IAAIH,YAAY,CAACG,KAAK,CAACC,MAAN,CAAaC,OAAd;AALjC;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,MAAD;AAAA,kBAASlB;AAAT;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE,QAAC,cAAD;AAAgB,MAAA,OAAO,EAAES,EAAzB;AAAA,gBAA8BC;AAA9B;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD","sourcesContent":["import { cover, size } from \"polished\"\r\nimport React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { check } from \"../../../icons/check\"\r\nimport { CheckableButton } from \"./layout/CheckableButton\"\r\nimport { CheckableContainer } from \"./layout/CheckableContainer\"\r\nimport { CheckableInput } from \"./layout/CheckableInput\"\r\nimport { CheckableLabel } from \"./layout/CheckableLabel\"\r\nimport { Positioner } from \"./layout/Positioner\"\r\n\r\nconst Button = styled(CheckableButton)`\r\n  border-radius: 3px;\r\n\r\n  & > svg {\r\n    ${cover()};\r\n    ${size(\"100%\")};\r\n\r\n    opacity: 0;\r\n    transition: 150ms;\r\n    transition-property: opacity;\r\n  }\r\n\r\n  input:checked + & > svg {\r\n    opacity: 1;\r\n  }\r\n`\r\n\r\nexport type CheckboxProps = {\r\n  id: string\r\n  label: string\r\n  value: boolean\r\n  onChange: (value: boolean) => void\r\n  className?: string\r\n  disabled?: boolean\r\n}\r\n\r\nexport function Checkbox(props: CheckboxProps) {\r\n  const {\r\n    id,\r\n    label,\r\n    value,\r\n    onChange: handleChange,\r\n    className,\r\n    disabled,\r\n  } = props\r\n\r\n  return (\r\n    <CheckableContainer className={className}>\r\n      <Positioner>\r\n        <CheckableInput\r\n          id={id}\r\n          type=\"checkbox\"\r\n          disabled={disabled}\r\n          checked={value}\r\n          onChange={event => handleChange(event.target.checked)}\r\n        />\r\n        <Button>{check}</Button>\r\n      </Positioner>\r\n      <CheckableLabel htmlFor={id}>{label}</CheckableLabel>\r\n    </CheckableContainer>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}