{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\DiscordHookSite\\\\common\\\\input\\\\error\\\\InputError.tsx\",\n    _s = $RefreshSig$();\n\nimport { animated, useSpring } from \"@react-spring/web\";\nimport React, { useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { error } from \"../../../icons/error\";\nimport { warning } from \"../../../icons/warning\";\nimport { Icon } from \"../../layout/Icon\";\nconst InputValidationError = styled.div.withConfig({\n  displayName: \"InputError__InputValidationError\",\n  componentId: \"wmde04-0\"\n})([\"display:flex;align-items:center;color:\", \";font-size:16px;font-weight:500;padding-top:8px;height:24px;& > \", \"{margin-left:-8px;color:currentColor;}\", \";\"], ({\n  theme\n}) => theme.accent.danger, Icon, ({\n  variant\n}) => variant === \"warning\" && css([\"color:\", \";\"], ({\n  theme\n}) => theme.accent.warning));\n_c = InputValidationError;\nexport function InputError(props) {\n  _s();\n\n  const {\n    variant = \"error\",\n    error: errorMessage = \"\"\n  } = props;\n  const hasError = Boolean(errorMessage);\n  const {\n    0: shouldRenderError,\n    1: setShouldRenderError\n  } = useState(hasError);\n  const errorStyle = useSpring({\n    config: {\n      tension: 300,\n      clamp: true\n    },\n    opacity: Number(hasError),\n    height: errorMessage ? 24 : 0,\n    onRest: () => setShouldRenderError(hasError)\n  });\n  if (!shouldRenderError && !hasError) return null;\n  return /*#__PURE__*/_jsxDEV(animated.div, {\n    style: errorStyle,\n    children: /*#__PURE__*/_jsxDEV(InputValidationError, {\n      variant: variant,\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        children: variant === \"error\" ? error : warning\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), errorMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InputError, \"7hqiSEMEtY50/nYOyragpqlHz5Y=\", false, function () {\n  return [useSpring];\n});\n\n_c2 = InputError;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"InputValidationError\");\n$RefreshReg$(_c2, \"InputError\");","map":{"version":3,"sources":["F:/DiscordHookSite/common/input/error/InputError.tsx"],"names":["animated","useSpring","React","useState","styled","css","error","warning","Icon","InputValidationError","div","theme","accent","danger","variant","InputError","props","errorMessage","hasError","Boolean","shouldRenderError","setShouldRenderError","errorStyle","config","tension","clamp","opacity","Number","height","onRest"],"mappings":";;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,mBAApC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,SAASC,KAAT,QAAsB,sBAAtB;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,SAASC,IAAT,QAAqB,mBAArB;AAEA,MAAMC,oBAAoB,GAAGL,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,kKAIf,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaC,MAJb,EAWlBL,IAXkB,EAgBtB,CAAC;AAAEM,EAAAA;AAAF,CAAD,KACAA,OAAO,KAAK,SAAZ,IACAT,GADA,kBAEW,CAAC;AAAEM,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaL,OAFvC,CAjBsB,CAA1B;KAAME,oB;AA4BN,OAAO,SAASM,UAAT,CAAoBC,KAApB,EAA4C;AAAA;;AACjD,QAAM;AAAEF,IAAAA,OAAO,GAAG,OAAZ;AAAqBR,IAAAA,KAAK,EAAEW,YAAY,GAAG;AAA3C,MAAkDD,KAAxD;AAEA,QAAME,QAAQ,GAAGC,OAAO,CAACF,YAAD,CAAxB;AACA,QAAM;AAAA,OAACG,iBAAD;AAAA,OAAoBC;AAApB,MAA4ClB,QAAQ,CAACe,QAAD,CAA1D;AACA,QAAMI,UAAU,GAAGrB,SAAS,CAAC;AAC3BsB,IAAAA,MAAM,EAAE;AAAEC,MAAAA,OAAO,EAAE,GAAX;AAAgBC,MAAAA,KAAK,EAAE;AAAvB,KADmB;AAE3BC,IAAAA,OAAO,EAAGC,MAAM,CAACT,QAAD,CAFW;AAG3BU,IAAAA,MAAM,EAAEX,YAAY,GAAG,EAAH,GAAQ,CAHD;AAI3BY,IAAAA,MAAM,EAAE,MAAMR,oBAAoB,CAACH,QAAD;AAJP,GAAD,CAA5B;AAOA,MAAI,CAACE,iBAAD,IAAsB,CAACF,QAA3B,EAAqC,OAAO,IAAP;AAErC,sBACE,QAAC,QAAD,CAAU,GAAV;AAAc,IAAA,KAAK,EAAEI,UAArB;AAAA,2BACE,QAAC,oBAAD;AAAsB,MAAA,OAAO,EAAER,OAA/B;AAAA,8BACE,QAAC,IAAD;AAAA,kBAAOA,OAAO,KAAK,OAAZ,GAAsBR,KAAtB,GAA8BC;AAArC;AAAA;AAAA;AAAA;AAAA,cADF,EAEGU,YAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAtBeF,U;UAKKd,S;;;MALLc,U","sourcesContent":["import { animated, useSpring } from \"@react-spring/web\"\r\nimport React, { useState } from \"react\"\r\nimport styled, { css } from \"styled-components\"\r\nimport { error } from \"../../../icons/error\"\r\nimport { warning } from \"../../../icons/warning\"\r\nimport { Icon } from \"../../layout/Icon\"\r\n\r\nconst InputValidationError = styled.div<{ variant: \"error\" | \"warning\" }>`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  color: ${({ theme }) => theme.accent.danger};\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n\r\n  padding-top: 8px;\r\n  height: 24px;\r\n\r\n  & > ${Icon} {\r\n    margin-left: -8px;\r\n    color: currentColor;\r\n  }\r\n\r\n  ${({ variant }) =>\r\n    variant === \"warning\" &&\r\n    css`\r\n      color: ${({ theme }) => theme.accent.warning};\r\n    `};\r\n`\r\n\r\nexport type InputErrorProps = {\r\n  variant?: \"error\" | \"warning\"\r\n  error?: string\r\n}\r\n\r\nexport function InputError(props: InputErrorProps) {\r\n  const { variant = \"error\", error: errorMessage = \"\" } = props\r\n\r\n  const hasError = Boolean(errorMessage)\r\n  const [shouldRenderError, setShouldRenderError] = useState(hasError)\r\n  const errorStyle = useSpring({\r\n    config: { tension: 300, clamp: true },\r\n    opacity: (Number(hasError) as unknown) as undefined,\r\n    height: errorMessage ? 24 : 0,\r\n    onRest: () => setShouldRenderError(hasError),\r\n  })\r\n\r\n  if (!shouldRenderError && !hasError) return null\r\n\r\n  return (\r\n    <animated.div style={errorStyle}>\r\n      <InputValidationError variant={variant}>\r\n        <Icon>{variant === \"error\" ? error : warning}</Icon>\r\n        {errorMessage}\r\n      </InputValidationError>\r\n    </animated.div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}