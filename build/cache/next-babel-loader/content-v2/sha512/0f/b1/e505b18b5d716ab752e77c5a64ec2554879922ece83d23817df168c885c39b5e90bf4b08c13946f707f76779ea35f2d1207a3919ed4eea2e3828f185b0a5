{"ast":null,"code":"import _defineProperty from \"F:/DiscordHookSite/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { defaultRules } from \"simple-markdown\";\nimport { parseUrl } from \"../helpers/parseUrl\";\nimport { link } from \"./link\";\nexport const autolink = _objectSpread(_objectSpread({}, defaultRules.autolink), {}, {\n  parse: parseUrl,\n  react: link.react\n});","map":{"version":3,"sources":["F:/DiscordHookSite/modules/markdown/rules/autolink.ts"],"names":["defaultRules","parseUrl","link","autolink","parse","react"],"mappings":";;;;;;AAAA,SAASA,YAAT,QAA6B,iBAA7B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,SAASC,IAAT,QAAqB,QAArB;AAEA,OAAO,MAAMC,QAAsB,mCAC9BH,YAAY,CAACG,QADiB;AAEjCC,EAAAA,KAAK,EAAEH,QAF0B;AAGjCI,EAAAA,KAAK,EAAEH,IAAI,CAACG;AAHqB,EAA5B","sourcesContent":["import { defaultRules } from \"simple-markdown\"\r\nimport { parseUrl } from \"../helpers/parseUrl\"\r\nimport type { MarkdownRule } from \"../parsers/MarkdownRule\"\r\nimport { link } from \"./link\"\r\n\r\nexport const autolink: MarkdownRule = {\r\n  ...defaultRules.autolink,\r\n  parse: parseUrl,\r\n  react: link.react,\r\n}\r\n"]},"metadata":{},"sourceType":"module"}