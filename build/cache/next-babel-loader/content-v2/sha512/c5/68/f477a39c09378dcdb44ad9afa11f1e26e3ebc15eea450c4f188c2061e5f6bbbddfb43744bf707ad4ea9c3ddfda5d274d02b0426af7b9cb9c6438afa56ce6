{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\DiscordHookSite\\\\common\\\\input\\\\file\\\\FileInputField.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { getHumanReadableSize } from \"../../../modules/message/preview/attachment/helpers/getHumanReadableSize\";\nimport { SCREEN_SMALL } from \"../../layout/breakpoints\";\nimport { FlexContainer } from \"../../layout/FlexContainer\";\nimport { PrimaryButton } from \"../button/PrimaryButton\";\nimport { Input } from \"../layout/Input\";\nimport { InputConstraint } from \"../layout/InputConstraint\";\nimport { InputContainer } from \"../layout/InputContainer\";\nimport { InputLabel } from \"../layout/InputLabel\";\nimport { PasteFileButton } from \"./PasteFileButton\";\nexport const FakeInput = styled(Input).withConfig({\n  displayName: \"FileInputField__FakeInput\",\n  componentId: \"sc-3b0b62-0\"\n})([\"flex:1;input:focus + &&{border-color:\", \";}\"], ({\n  theme\n}) => theme.accent.primary);\n_c = FakeInput;\nconst ClipboardButton = styled(PasteFileButton).withConfig({\n  displayName: \"FileInputField__ClipboardButton\",\n  componentId: \"sc-3b0b62-1\"\n})([\"\", \"{display:none;}\"], SCREEN_SMALL);\n_c2 = ClipboardButton;\nexport function FileInputField(props) {\n  _s();\n\n  const {\n    id,\n    value,\n    onChange: handleChange,\n    label,\n    disabled = false,\n    maxSize\n  } = props;\n  const inputRef = useRef(null);\n\n  const handleRemoveFiles = () => {\n    if (!inputRef.current) return;\n    inputRef.current.value = \"\";\n    handleChange([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(InputContainer, {\n    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: id,\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), maxSize && /*#__PURE__*/_jsxDEV(InputConstraint, {\n        children: [getHumanReadableSize(maxSize), \" max.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FlexContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        id: id,\n        type: \"file\",\n        multiple: true,\n        disabled: disabled,\n        style: {\n          position: \"absolute\",\n          opacity: 0,\n          pointerEvents: \"none\"\n        },\n        onChange: event => {\n          var _event$target$files;\n\n          handleChange(Array.from((_event$target$files = event.target.files) !== null && _event$target$files !== void 0 ? _event$target$files : []));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FakeInput, {\n        value: value.map(file => file.name).join(\", \"),\n        readOnly: true,\n        disabled: disabled,\n        tabIndex: -1,\n        style: {\n          cursor: \"default\"\n        },\n        onClick: () => {\n          var _inputRef$current;\n\n          (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.click();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ClipboardButton, {\n        onChange: handleChange,\n        disabled: disabled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PrimaryButton, {\n        onClick: handleRemoveFiles,\n        disabled: disabled,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FileInputField, \"iD9XNNsNOlNDckBemnvlLS+aHYk=\");\n\n_c3 = FileInputField;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"FakeInput\");\n$RefreshReg$(_c2, \"ClipboardButton\");\n$RefreshReg$(_c3, \"FileInputField\");","map":{"version":3,"sources":["F:/DiscordHookSite/common/input/file/FileInputField.tsx"],"names":["React","useRef","styled","getHumanReadableSize","SCREEN_SMALL","FlexContainer","PrimaryButton","Input","InputConstraint","InputContainer","InputLabel","PasteFileButton","FakeInput","theme","accent","primary","ClipboardButton","FileInputField","props","id","value","onChange","handleChange","label","disabled","maxSize","inputRef","handleRemoveFiles","current","position","opacity","pointerEvents","event","Array","from","target","files","map","file","name","join","cursor","click"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { getHumanReadableSize } from \"../../../modules/message/preview/attachment/helpers/getHumanReadableSize\"\r\nimport { SCREEN_SMALL } from \"../../layout/breakpoints\"\r\nimport { FlexContainer } from \"../../layout/FlexContainer\"\r\nimport { PrimaryButton } from \"../button/PrimaryButton\"\r\nimport { Input } from \"../layout/Input\"\r\nimport { InputConstraint } from \"../layout/InputConstraint\"\r\nimport { InputContainer } from \"../layout/InputContainer\"\r\nimport { InputLabel } from \"../layout/InputLabel\"\r\nimport { PasteFileButton } from \"./PasteFileButton\"\r\n\r\nexport const FakeInput = styled(Input)`\r\n  flex: 1;\r\n\r\n  input:focus + && {\r\n    border-color: ${({ theme }) => theme.accent.primary};\r\n  }\r\n`\r\n\r\nconst ClipboardButton = styled(PasteFileButton)`\r\n  ${SCREEN_SMALL} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nexport type FileInputProps = {\r\n  id: string\r\n  value: readonly File[]\r\n  onChange: (value: File[]) => void\r\n  label: string\r\n  disabled?: boolean\r\n  maxSize?: number\r\n}\r\n\r\nexport function FileInputField(props: FileInputProps) {\r\n  const {\r\n    id,\r\n    value,\r\n    onChange: handleChange,\r\n    label,\r\n    disabled = false,\r\n    maxSize,\r\n  } = props\r\n\r\n  const inputRef = useRef<HTMLInputElement>(null)\r\n\r\n  const handleRemoveFiles = () => {\r\n    if (!inputRef.current) return\r\n\r\n    inputRef.current.value = \"\"\r\n    handleChange([])\r\n  }\r\n\r\n  return (\r\n    <InputContainer>\r\n      <InputLabel>\r\n        <label htmlFor={id}>{label}</label>\r\n        {maxSize && (\r\n          <InputConstraint>\r\n            {getHumanReadableSize(maxSize)} max.\r\n          </InputConstraint>\r\n        )}\r\n      </InputLabel>\r\n      <FlexContainer>\r\n        <input\r\n          ref={inputRef}\r\n          id={id}\r\n          type=\"file\"\r\n          multiple\r\n          disabled={disabled}\r\n          style={{ position: \"absolute\", opacity: 0, pointerEvents: \"none\" }}\r\n          onChange={event => {\r\n            handleChange(Array.from(event.target.files ?? []))\r\n          }}\r\n        />\r\n        <FakeInput\r\n          value={value.map(file => file.name).join(\", \")}\r\n          readOnly\r\n          disabled={disabled}\r\n          tabIndex={-1}\r\n          style={{ cursor: \"default\" }}\r\n          onClick={() => {\r\n            inputRef.current?.click()\r\n          }}\r\n        />\r\n        <ClipboardButton onChange={handleChange} disabled={disabled} />\r\n        <PrimaryButton onClick={handleRemoveFiles} disabled={disabled}>\r\n          Clear\r\n        </PrimaryButton>\r\n      </FlexContainer>\r\n    </InputContainer>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}