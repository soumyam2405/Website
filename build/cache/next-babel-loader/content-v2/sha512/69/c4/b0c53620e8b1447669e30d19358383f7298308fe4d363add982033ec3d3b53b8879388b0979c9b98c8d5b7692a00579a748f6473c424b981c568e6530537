{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { animated, useTransition } from \"@react-spring/web\";\nimport { useObserver } from \"mobx-react-lite\";\nimport { cover, rgb } from \"polished\";\nimport React from \"react\";\nimport { FocusOn } from \"react-focus-on\";\nimport styled from \"styled-components\";\nimport { Z_INDEX_MODALS } from \"../layout/constants\";\nimport { useRequiredContext } from \"../state/useRequiredContext\";\nimport { ModalProvider } from \"./ModalContext\";\nimport { ModalManagerContext } from \"./ModalManagerContext\";\nconst Container = styled.div.withConfig({\n  componentId: \"bzx27k-0\"\n})([\"position:fixed;z-index:\", \";top:0;right:0;bottom:0;left:0;width:100%;pointer-events:none;\"], Z_INDEX_MODALS);\nconst Item = styled.div.withConfig({\n  componentId: \"bzx27k-1\"\n})([\"\", \";\"], cover());\nconst Focus = styled(FocusOn).withConfig({\n  componentId: \"bzx27k-2\"\n})([\"width:100%;height:100%;display:flex;justify-content:center;align-items:center;\"]);\nconst Filter = styled(animated.div).withConfig({\n  componentId: \"bzx27k-3\"\n})([\"\", \";background:\", \";opacity:0.85;pointer-events:all;\"], cover(), rgb(0, 0, 0));\nconst Content = styled(animated.div).withConfig({\n  componentId: \"bzx27k-4\"\n})([\"position:relative;width:100%;height:100%;display:flex;justify-content:center;align-items:center;pointer-events:none;& > *{pointer-events:all;}\"]);\nexport function ModalOverlay() {\n  const manager = useRequiredContext(ModalManagerContext);\n  const modals = useObserver(() => manager.modals.slice());\n  const transition = useTransition(modals, {\n    key: modal => modal.id,\n    config: {\n      friction: 15,\n      tension: 300,\n      clamp: true\n    },\n    from: {\n      contentOpacity: 0,\n      contentScale: 0.9,\n      filterOpacity: 0\n    },\n    enter: {\n      contentOpacity: 1,\n      contentScale: 1,\n      filterOpacity: 0.85\n    },\n    leave: {\n      contentOpacity: 0,\n      contentScale: 0.9,\n      filterOpacity: 0\n    }\n  });\n  return /*#__PURE__*/_jsx(Container, {\n    children: transition((style, item) => /*#__PURE__*/_jsx(ModalProvider, {\n      value: item,\n      children: /*#__PURE__*/_jsxs(Item, {\n        children: [/*#__PURE__*/_jsx(Filter, {\n          style: {\n            opacity: style.filterOpacity\n          }\n        }), /*#__PURE__*/_jsx(Focus, {\n          onClickOutside: () => item.dismiss(),\n          onEscapeKey: () => item.dismiss(),\n          children: /*#__PURE__*/_jsx(Content, {\n            role: \"dialog\",\n            style: {\n              opacity: style.contentOpacity,\n              scale: style.contentScale\n            },\n            children: item.render()\n          })\n        })]\n      })\n    }))\n  });\n}","map":{"version":3,"sources":["F:/DiscordHookSite/common/modal/ModalOverlay.tsx"],"names":["animated","useTransition","useObserver","cover","rgb","React","FocusOn","styled","Z_INDEX_MODALS","useRequiredContext","ModalProvider","ModalManagerContext","Container","div","Item","Focus","Filter","Content","ModalOverlay","manager","modals","slice","transition","key","modal","id","config","friction","tension","clamp","from","contentOpacity","contentScale","filterOpacity","enter","leave","style","item","opacity","dismiss","scale","render"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,aAAnB,QAAwC,mBAAxC;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,KAAT,EAAgBC,GAAhB,QAA2B,UAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,kBAAT,QAAmC,6BAAnC;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,mBAAT,QAAoC,uBAApC;AAEA,MAAMC,SAAS,GAAGL,MAAM,CAACM,GAAV;AAAA;AAAA,kGAEFL,cAFE,CAAf;AAcA,MAAMM,IAAI,GAAGP,MAAM,CAACM,GAAV;AAAA;AAAA,cACNV,KAAK,EADC,CAAV;AAIA,MAAMY,KAAK,GAAGR,MAAM,CAACD,OAAD,CAAT;AAAA;AAAA,sFAAX;AASA,MAAMU,MAAM,GAAGT,MAAM,CAACP,QAAQ,CAACa,GAAV,CAAT;AAAA;AAAA,8DACRV,KAAK,EADG,EAGIC,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHP,CAAZ;AASA,MAAMa,OAAO,GAAGV,MAAM,CAACP,QAAQ,CAACa,GAAV,CAAT;AAAA;AAAA,sJAAb;AAgBA,OAAO,SAASK,YAAT,GAAwB;AAC7B,QAAMC,OAAO,GAAGV,kBAAkB,CAACE,mBAAD,CAAlC;AAEA,QAAMS,MAAM,GAAGlB,WAAW,CAAC,MAAMiB,OAAO,CAACC,MAAR,CAAeC,KAAf,EAAP,CAA1B;AAEA,QAAMC,UAAU,GAAGrB,aAAa,CAACmB,MAAD,EAAS;AACvCG,IAAAA,GAAG,EAAEC,KAAK,IAAIA,KAAK,CAACC,EADmB;AAEvCC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,OAAO,EAAE,GAAzB;AAA8BC,MAAAA,KAAK,EAAE;AAArC,KAF+B;AAGvCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,cAAc,EAAG,CADb;AAEJC,MAAAA,YAAY,EAAE,GAFV;AAGJC,MAAAA,aAAa,EAAG;AAHZ,KAHiC;AAQvCC,IAAAA,KAAK,EAAE;AACLH,MAAAA,cAAc,EAAG,CADZ;AAELC,MAAAA,YAAY,EAAE,CAFT;AAGLC,MAAAA,aAAa,EAAG;AAHX,KARgC;AAavCE,IAAAA,KAAK,EAAE;AACLJ,MAAAA,cAAc,EAAG,CADZ;AAELC,MAAAA,YAAY,EAAE,GAFT;AAGLC,MAAAA,aAAa,EAAG;AAHX;AAbgC,GAAT,CAAhC;AAoBA,sBACE,KAAC,SAAD;AAAA,cACGX,UAAU,CAAC,CAACc,KAAD,EAAQC,IAAR,kBACV,KAAC,aAAD;AAAe,MAAA,KAAK,EAAEA,IAAtB;AAAA,6BACE,MAAC,IAAD;AAAA,gCACE,KAAC,MAAD;AAAQ,UAAA,KAAK,EAAE;AAAEC,YAAAA,OAAO,EAAEF,KAAK,CAACH;AAAjB;AAAf,UADF,eAEE,KAAC,KAAD;AACE,UAAA,cAAc,EAAE,MAAMI,IAAI,CAACE,OAAL,EADxB;AAEE,UAAA,WAAW,EAAE,MAAMF,IAAI,CAACE,OAAL,EAFrB;AAAA,iCAIE,KAAC,OAAD;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,KAAK,EAAE;AACLD,cAAAA,OAAO,EAAEF,KAAK,CAACL,cADV;AAELS,cAAAA,KAAK,EAAEJ,KAAK,CAACJ;AAFR,aAFT;AAAA,sBAOGK,IAAI,CAACI,MAAL;AAPH;AAJF,UAFF;AAAA;AADF,MADS;AADb,IADF;AAyBD","sourcesContent":["import { animated, useTransition } from \"@react-spring/web\"\r\nimport { useObserver } from \"mobx-react-lite\"\r\nimport { cover, rgb } from \"polished\"\r\nimport React from \"react\"\r\nimport { FocusOn } from \"react-focus-on\"\r\nimport styled from \"styled-components\"\r\nimport { Z_INDEX_MODALS } from \"../layout/constants\"\r\nimport { useRequiredContext } from \"../state/useRequiredContext\"\r\nimport { ModalProvider } from \"./ModalContext\"\r\nimport { ModalManagerContext } from \"./ModalManagerContext\"\r\n\r\nconst Container = styled.div`\r\n  position: fixed;\r\n  z-index: ${Z_INDEX_MODALS};\r\n\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n\r\n  width: 100%;\r\n\r\n  pointer-events: none;\r\n`\r\n\r\nconst Item = styled.div`\r\n  ${cover()};\r\n`\r\n\r\nconst Focus = styled(FocusOn)`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst Filter = styled(animated.div)`\r\n  ${cover()};\r\n\r\n  background: ${rgb(0, 0, 0)};\r\n  opacity: 0.85;\r\n\r\n  pointer-events: all;\r\n`\r\n\r\nconst Content = styled(animated.div)`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  pointer-events: none;\r\n\r\n  & > * {\r\n    pointer-events: all;\r\n  }\r\n`\r\n\r\nexport function ModalOverlay() {\r\n  const manager = useRequiredContext(ModalManagerContext)\r\n\r\n  const modals = useObserver(() => manager.modals.slice())\r\n\r\n  const transition = useTransition(modals, {\r\n    key: modal => modal.id,\r\n    config: { friction: 15, tension: 300, clamp: true },\r\n    from: {\r\n      contentOpacity: (0 as unknown) as undefined,\r\n      contentScale: 0.9,\r\n      filterOpacity: (0 as unknown) as undefined,\r\n    },\r\n    enter: {\r\n      contentOpacity: (1 as unknown) as undefined,\r\n      contentScale: 1,\r\n      filterOpacity: (0.85 as unknown) as undefined,\r\n    },\r\n    leave: {\r\n      contentOpacity: (0 as unknown) as undefined,\r\n      contentScale: 0.9,\r\n      filterOpacity: (0 as unknown) as undefined,\r\n    },\r\n  })\r\n\r\n  return (\r\n    <Container>\r\n      {transition((style, item) => (\r\n        <ModalProvider value={item}>\r\n          <Item>\r\n            <Filter style={{ opacity: style.filterOpacity }} />\r\n            <Focus\r\n              onClickOutside={() => item.dismiss()}\r\n              onEscapeKey={() => item.dismiss()}\r\n            >\r\n              <Content\r\n                role=\"dialog\"\r\n                style={{\r\n                  opacity: style.contentOpacity,\r\n                  scale: style.contentScale,\r\n                }}\r\n              >\r\n                {item.render()}\r\n              </Content>\r\n            </Focus>\r\n          </Item>\r\n        </ModalProvider>\r\n      ))}\r\n    </Container>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}