{"version":3,"sources":["webpack://_N_E/./modules/editor/data/validation/first.ts","webpack://_N_E/./modules/editor/data/validation/isArray.ts","webpack://_N_E/./modules/editor/data/validation/contains.ts","webpack://_N_E/./modules/editor/data/validation/isNumber.ts","webpack://_N_E/./modules/editor/data/validation/isObject.ts","webpack://_N_E/./modules/editor/data/validation/isShape.ts","webpack://_N_E/./modules/editor/data/validation/isString.ts","webpack://_N_E/./modules/editor/data/validation/isUrl.ts","webpack://_N_E/./modules/editor/data/validation/length.ts","webpack://_N_E/./modules/editor/data/validation/minLength.ts","webpack://_N_E/./modules/editor/data/validation/maxLength.ts","webpack://_N_E/./modules/editor/data/validation/noExcessiveKeys.ts","webpack://_N_E/./modules/editor/data/validation/optional.ts","webpack://_N_E/./modules/editor/data/validation/requiresKey.ts","webpack://_N_E/./modules/editor/data/validation/isAuthor.ts","webpack://_N_E/./modules/editor/data/validation/isDate.ts","webpack://_N_E/./modules/editor/data/validation/isField.ts","webpack://_N_E/./modules/editor/data/validation/requiresKeys.ts","webpack://_N_E/./modules/editor/data/validation/all.ts","webpack://_N_E/./modules/editor/data/validation/isBoolean.ts","webpack://_N_E/./modules/editor/data/validation/isFooter.ts","webpack://_N_E/./modules/editor/data/validation/nullable.ts","webpack://_N_E/./modules/editor/data/validation/isEmbed.ts","webpack://_N_E/./modules/editor/data/validation/between.ts","webpack://_N_E/./modules/editor/data/validation/isMessage.ts","webpack://_N_E/./modules/editor/data/DataEditorModal.tsx","webpack://_N_E/./common/object/parseJson.ts","webpack://_N_E/./modules/message/helpers/messageOf.ts"],"names":["first","validators","value","key","reduce","results","validate","some","result","isArray","Array","contains","flatMap","item","index","isNumber","isObject","Date","isShape","shape","Object","entries","shapeKey","prototype","hasOwnProperty","call","isString","isUrl","test","length","min","max","trim","maxLength","noExcessiveKeys","keys","filter","includes","map","excessiveKey","JSON","stringify","optional","undefined","requiresKey","requiredKey","join","isAuthor","name","url","icon_url","isDate","isField","all","requiresKeys","inline","isFooter","text","nullable","isEmbed","title","description","timestamp","color","footer","image","thumbnail","author","fields","isMessage","content","embeds","username","avatar_url","Container","styled","ModalContainer","Body","ModalBody","CodeInput","Input","theme","font","mono","ErrorContainer","div","ErrorLine","code","accent","danger","DataEditorModal","props","message","modal","useRequiredContext","ModalContext","setValue","useState","stringifyMessage","data","error","json","parse","replace","parseJson","errors","useObserver","ModalHeader","ModalTitle","ModalAction","icon","remove","label","onClick","dismiss","as","id","onChange","event","target","ModalFooter","SecondaryButton","copyTextToClipboard","PrimaryButton","disabled","applySnapshot","messageOf","snapshot","avatar","embedData","embed","gallery","push","authorUrl","authorIcon","footerIcon","Number","NaN","Boolean","ColorModel","create","setRaw","fieldData","field"],"mappings":"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","file":"static/chunks/208.96870d3bd7ff77d31afe.js","sourcesContent":["import type { Validator } from \"./Validator\"\r\n\r\nexport const first = (...validators: Validator[]): Validator => (value, key) =>\r\n  validators.reduce<string[]>(\r\n    (results, validate) =>\r\n      results.some(result => typeof result === \"string\")\r\n        ? results\r\n        : validate(value, key),\r\n    [],\r\n  )\r\n","import type { Validator } from \"./Validator\"\r\n\r\nexport const isArray: Validator = (value, key) =>\r\n  Array.isArray(value) ? [] : [`${key}: Must be array`]\r\n","import { first } from \"./first\"\r\nimport { isArray } from \"./isArray\"\r\nimport type { Validator } from \"./Validator\"\r\n\r\nexport const contains = (validate: Validator): Validator =>\r\n  first(isArray, (value, key) =>\r\n    (value as unknown[]).flatMap((item, index) =>\r\n      validate(item, `${key}[${index}]`),\r\n    ),\r\n  )\r\n","import type { Validator } from \"./Validator\"\r\n\r\nexport const isNumber: Validator = (value, key) =>\r\n  typeof value === \"number\" ? [] : [`${key}: Must be number`]\r\n","import type { Validator } from \"./Validator\"\r\n\r\nexport const isObject: Validator = (value, key) =>\r\n  typeof value === \"object\" &&\r\n  value !== null &&\r\n  !Array.isArray(value) &&\r\n  !(value instanceof Date)\r\n    ? []\r\n    : [`${key}: Must be object`]\r\n","import { first } from \"./first\"\r\nimport { isObject } from \"./isObject\"\r\nimport type { Validator } from \"./Validator\"\r\n\r\nexport const isShape = (shape: Record<string, Validator>): Validator =>\r\n  first(isObject, (value, key) =>\r\n    Object.entries(shape).flatMap(([shapeKey, validate]) =>\r\n      Object.prototype.hasOwnProperty.call(value, shapeKey)\r\n        ? validate(\r\n            (value as Record<string, unknown>)[shapeKey],\r\n            `${key}.${shapeKey}`,\r\n          )\r\n        : [],\r\n    ),\r\n  )\r\n","import type { Validator } from \"./Validator\"\r\n\r\nexport const isString: Validator = (value, key) =>\r\n  typeof value === \"string\" ? [] : [`${key}: Must be string`]\r\n","import { first } from \"./first\"\r\nimport { isString } from \"./isString\"\r\nimport type { Validator } from \"./Validator\"\r\n\r\nexport const isUrl: Validator = first(isString, (value, key) =>\r\n  /^https?:\\/\\//.test(value as string) ? [] : [`${key}: Must be URL`],\r\n)\r\n","import { first } from \"./first\"\r\nimport { maxLength } from \"./maxLength\"\r\nimport { minLength } from \"./minLength\"\r\nimport type { Validator } from \"./Validator\"\r\n\r\nexport const length = (min: number, max: number): Validator =>\r\n  first(minLength(min), maxLength(max))\r\n","import type { Validator } from \"./Validator\"\r\n\r\nexport const minLength = (length: number): Validator => (value, key) =>\r\n  typeof value === \"string\" && value.trim().length < length\r\n    ? [`${key}: Must be at least ${length} character long`]\r\n    : Array.isArray(value) && value.length < length\r\n    ? [`${key}: Must contain at least ${length} value`]\r\n    : []\r\n","import type { Validator } from \"./Validator\"\r\n\r\nexport const maxLength = (length: number): Validator => (value, key) =>\r\n  typeof value === \"string\" && value.trim().length > length\r\n    ? [`${key}: Must be at most ${length} long`]\r\n    : Array.isArray(value) && value.length > length\r\n    ? [`${key}: Must contain at most ${length} values`]\r\n    : []\r\n","import { first } from \"./first\"\r\nimport { isObject } from \"./isObject\"\r\nimport type { Validator } from \"./Validator\"\r\n\r\nexport const noExcessiveKeys = (...keys: string[]): Validator =>\r\n  first(isObject, (value, key) =>\r\n    Object.keys(value as Record<string, unknown>)\r\n      .filter(key => !keys.includes(key))\r\n      .map(\r\n        excessiveKey => `${key}: Excessive key ${JSON.stringify(excessiveKey)}`,\r\n      ),\r\n  )\r\n","import type { Validator } from \"./Validator\"\r\n\r\nexport const optional = (validate: Validator): Validator => (value, key) =>\r\n  value === undefined ? [] : validate(value, key)\r\n","import { first } from \"./first\"\r\nimport { isObject } from \"./isObject\"\r\nimport type { Validator } from \"./Validator\"\r\n\r\nexport const requiresKey = (...keys: string[]): Validator =>\r\n  first(isObject, (value, key) =>\r\n    keys\r\n      .map(requiredKey =>\r\n        Object.prototype.hasOwnProperty.call(\r\n          value as Record<string, unknown>,\r\n          requiredKey,\r\n        ),\r\n      )\r\n      .some(result => result)\r\n      ? []\r\n      : keys.length === 1\r\n      ? [`${key}: Expected key ${JSON.stringify(keys[0])}`]\r\n      : [\r\n          `${key}: Expected one of following keys: ${keys\r\n            .map(key => JSON.stringify(key))\r\n            .join(\", \")}`,\r\n        ],\r\n  )\r\n","import { first } from \"./first\"\r\nimport { isShape } from \"./isShape\"\r\nimport { isString } from \"./isString\"\r\nimport { isUrl } from \"./isUrl\"\r\nimport { length } from \"./length\"\r\nimport { noExcessiveKeys } from \"./noExcessiveKeys\"\r\nimport { optional } from \"./optional\"\r\nimport { requiresKey } from \"./requiresKey\"\r\nimport type { Validator } from \"./Validator\"\r\n\r\nexport const isAuthor: Validator = first(\r\n  noExcessiveKeys(\"name\", \"url\", \"icon_url\"),\r\n  requiresKey(\"name\"),\r\n  isShape({\r\n    name: first(isString, length(1, 256)),\r\n    url: optional(isUrl),\r\n    icon_url: optional(isUrl),\r\n  }),\r\n)\r\n","import { first } from \"./first\"\r\nimport { isString } from \"./isString\"\r\nimport type { Validator } from \"./Validator\"\r\n\r\nexport const isDate: Validator = first(isString, (value, key) =>\r\n  /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}?Z$/.test(value as string)\r\n    ? []\r\n    : [`${key}: Must be date in ISO 8601 format`],\r\n)\r\n","import { first } from \"./first\"\r\nimport { isBoolean } from \"./isBoolean\"\r\nimport { isShape } from \"./isShape\"\r\nimport { isString } from \"./isString\"\r\nimport { length } from \"./length\"\r\nimport { noExcessiveKeys } from \"./noExcessiveKeys\"\r\nimport { optional } from \"./optional\"\r\nimport { requiresKeys } from \"./requiresKeys\"\r\nimport type { Validator } from \"./Validator\"\r\n\r\nexport const isField: Validator = first(\r\n  noExcessiveKeys(\"name\", \"value\", \"inline\"),\r\n  requiresKeys(\"name\", \"value\"),\r\n  isShape({\r\n    name: first(isString, length(1, 256)),\r\n    value: first(isString, length(1, 1024)),\r\n    inline: optional(isBoolean),\r\n  }),\r\n)\r\n","import { all } from \"./all\"\r\nimport { first } from \"./first\"\r\nimport { isObject } from \"./isObject\"\r\nimport { requiresKey } from \"./requiresKey\"\r\nimport type { Validator } from \"./Validator\"\r\n\r\nexport const requiresKeys = (...keys: string[]): Validator =>\r\n  first(isObject, all(...keys.map(key => requiresKey(key))))\r\n","import type { Validator } from \"./Validator\"\r\n\r\nexport const all = (...validators: Validator[]): Validator => (value, key) =>\r\n  validators.flatMap(validate => validate(value, key))\r\n","import type { Validator } from \"./Validator\"\r\n\r\nexport const isBoolean: Validator = (value, key) =>\r\n  typeof value === \"boolean\" ? [] : [`${key}: Must be boolean`]\r\n","import { first } from \"./first\"\r\nimport { isShape } from \"./isShape\"\r\nimport { isString } from \"./isString\"\r\nimport { isUrl } from \"./isUrl\"\r\nimport { length } from \"./length\"\r\nimport { noExcessiveKeys } from \"./noExcessiveKeys\"\r\nimport { optional } from \"./optional\"\r\nimport { requiresKey } from \"./requiresKey\"\r\nimport type { Validator } from \"./Validator\"\r\n\r\nexport const isFooter: Validator = first(\r\n  requiresKey(\"text\"),\r\n  noExcessiveKeys(\"text\", \"icon_url\"),\r\n  isShape({\r\n    text: first(isString, length(1, 2048)),\r\n    icon_url: optional(isUrl),\r\n  }),\r\n)\r\n","import type { Validator } from \"./Validator\"\r\n\r\nexport const nullable = (validate: Validator): Validator => (value, key) =>\r\n  value === null ? [] : validate(value, key)\r\n","import { between } from \"./between\"\r\nimport { contains } from \"./contains\"\r\nimport { first } from \"./first\"\r\nimport { isAuthor } from \"./isAuthor\"\r\nimport { isDate } from \"./isDate\"\r\nimport { isField } from \"./isField\"\r\nimport { isFooter } from \"./isFooter\"\r\nimport { isShape } from \"./isShape\"\r\nimport { isString } from \"./isString\"\r\nimport { isUrl } from \"./isUrl\"\r\nimport { length } from \"./length\"\r\nimport { noExcessiveKeys } from \"./noExcessiveKeys\"\r\nimport { nullable } from \"./nullable\"\r\nimport { optional } from \"./optional\"\r\nimport { requiresKey } from \"./requiresKey\"\r\nimport type { Validator } from \"./Validator\"\r\n\r\nexport const isEmbed: Validator = first(\r\n  noExcessiveKeys(\r\n    \"title\",\r\n    \"description\",\r\n    \"url\",\r\n    \"timestamp\",\r\n    \"color\",\r\n    \"footer\",\r\n    \"image\",\r\n    \"thumbnail\",\r\n    \"author\",\r\n    \"fields\",\r\n  ),\r\n  requiresKey(\r\n    \"title\",\r\n    \"description\",\r\n    \"url\",\r\n    \"timestamp\",\r\n    \"color\",\r\n    \"footer\",\r\n    \"image\",\r\n    \"thumbnail\",\r\n    \"author\",\r\n    \"fields\",\r\n  ),\r\n  isShape({\r\n    title: optional(first(isString, length(1, 256))),\r\n    description: optional(first(isString, length(1, 4096))),\r\n    url: optional(isUrl),\r\n    timestamp: optional(isDate),\r\n    color: optional(nullable(between(0, 0xffffff))),\r\n    footer: optional(isFooter),\r\n    image: optional(\r\n      first(\r\n        noExcessiveKeys(\"url\"),\r\n        requiresKey(\"url\"),\r\n        isShape({ url: isUrl }),\r\n      ),\r\n    ),\r\n    thumbnail: optional(\r\n      first(\r\n        noExcessiveKeys(\"url\"),\r\n        requiresKey(\"url\"),\r\n        isShape({ url: isUrl }),\r\n      ),\r\n    ),\r\n    author: optional(isAuthor),\r\n    fields: optional(first(contains(isField), length(1, 25))),\r\n  }),\r\n)\r\n","import { first } from \"./first\"\r\nimport { isNumber } from \"./isNumber\"\r\nimport type { Validator } from \"./Validator\"\r\n\r\nexport const between = (min: number, max: number): Validator =>\r\n  first(isNumber, (value, key) =>\r\n    min > (value as number) || max < (value as number)\r\n      ? [`${key}: Must be between ${min} and ${max} inclusive`]\r\n      : [],\r\n  )\r\n","import { contains } from \"./contains\"\r\nimport { first } from \"./first\"\r\nimport { isEmbed } from \"./isEmbed\"\r\nimport { isShape } from \"./isShape\"\r\nimport { isString } from \"./isString\"\r\nimport { isUrl } from \"./isUrl\"\r\nimport { length } from \"./length\"\r\nimport { noExcessiveKeys } from \"./noExcessiveKeys\"\r\nimport { nullable } from \"./nullable\"\r\nimport { optional } from \"./optional\"\r\nimport { requiresKey } from \"./requiresKey\"\r\nimport type { Validator } from \"./Validator\"\r\n\r\nexport const isMessage: Validator = first(\r\n  noExcessiveKeys(\"content\", \"embeds\", \"username\", \"avatar_url\"),\r\n  requiresKey(\"content\", \"embeds\"),\r\n  isShape({\r\n    content: optional(nullable(first(isString, length(1, 2000)))),\r\n    embeds: optional(nullable(first(contains(isEmbed), length(1, 10)))),\r\n    username: optional(first(isString, length(1, 256))),\r\n    avatar_url: optional(isUrl),\r\n  }),\r\n)\r\n","import { useObserver } from \"mobx-react-lite\"\r\nimport { applySnapshot } from \"mobx-state-tree\"\r\nimport React, { ChangeEvent, useState } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { copyTextToClipboard } from \"../../../common/dom/copyTextToClipboard\"\r\nimport { PrimaryButton } from \"../../../common/input/button/PrimaryButton\"\r\nimport { SecondaryButton } from \"../../../common/input/button/SecondaryButton\"\r\nimport { Input } from \"../../../common/input/layout/Input\"\r\nimport { ModalAction } from \"../../../common/modal/layout/ModalAction\"\r\nimport { ModalBody } from \"../../../common/modal/layout/ModalBody\"\r\nimport { ModalContainer } from \"../../../common/modal/layout/ModalContainer\"\r\nimport { ModalFooter } from \"../../../common/modal/layout/ModalFooter\"\r\nimport { ModalHeader } from \"../../../common/modal/layout/ModalHeader\"\r\nimport { ModalTitle } from \"../../../common/modal/layout/ModalTitle\"\r\nimport { ModalContext } from \"../../../common/modal/ModalContext\"\r\nimport { parseJson } from \"../../../common/object/parseJson\"\r\nimport { useRequiredContext } from \"../../../common/state/useRequiredContext\"\r\nimport { remove } from \"../../../icons/remove\"\r\nimport { messageOf } from \"../../message/helpers/messageOf\"\r\nimport { stringifyMessage } from \"../../message/helpers/stringifyMessage\"\r\nimport type { MessageLike } from \"../../message/state/models/MessageModel\"\r\nimport { isMessage } from \"./validation/isMessage\"\r\n\r\nconst Container = styled(ModalContainer)`\r\n  width: 1024px;\r\n  height: 768px;\r\n\r\n  display: flex;\r\n  flex-flow: column;\r\n`\r\n\r\nconst Body = styled(ModalBody)`\r\n  flex: 1;\r\n\r\n  display: flex;\r\n  flex-flow: column;\r\n`\r\n\r\nconst CodeInput = styled(Input)`\r\n  && {\r\n    width: 100%;\r\n    resize: none;\r\n  }\r\n\r\n  flex: 1;\r\n\r\n  font-family: ${({ theme }) => theme.font.mono};\r\n  font-size: 14px;\r\n  line-height: 1.375;\r\n\r\n  overflow-y: auto;\r\n`\r\n\r\nconst ErrorContainer = styled.div`\r\n  margin-top: 8px;\r\n\r\n  max-height: max(20%, 96px);\r\n  overflow-y: auto;\r\n`\r\n\r\nconst ErrorLine = styled.code`\r\n  display: block;\r\n\r\n  color: ${({ theme }) => theme.accent.danger};\r\n  font-size: 14px;\r\n  line-height: 1.375;\r\n\r\n  & + & {\r\n    margin-top: 8px;\r\n  }\r\n`\r\n\r\nexport type DataEditorModalProps = {\r\n  message: MessageLike\r\n}\r\n\r\nexport function DataEditorModal(props: DataEditorModalProps) {\r\n  const { message } = props\r\n\r\n  const modal = useRequiredContext(ModalContext)\r\n\r\n  const [value, setValue] = useState(() => stringifyMessage(message.data))\r\n\r\n  const { value: data, error } = parseJson(value)\r\n  const errors = error ? [error] : isMessage(data, \"$\")\r\n\r\n  return useObserver(() => (\r\n    <Container>\r\n      <ModalHeader>\r\n        <ModalTitle>JSON Editor</ModalTitle>\r\n        <ModalAction\r\n          icon={remove}\r\n          label=\"Close\"\r\n          onClick={() => modal.dismiss()}\r\n        />\r\n      </ModalHeader>\r\n      <Body>\r\n        <CodeInput\r\n          as=\"textarea\"\r\n          id=\"data-editor\"\r\n          value={value}\r\n          onChange={(event: ChangeEvent<HTMLTextAreaElement>) => {\r\n            setValue(event.target.value)\r\n          }}\r\n        />\r\n        {errors.length > 0 && (\r\n          <ErrorContainer>\r\n            {errors.map((error, index) => (\r\n              // eslint-disable-next-line react/no-array-index-key\r\n              <ErrorLine key={index}>{error}</ErrorLine>\r\n            ))}\r\n          </ErrorContainer>\r\n        )}\r\n      </Body>\r\n      <ModalFooter>\r\n        <SecondaryButton onClick={() => copyTextToClipboard(value)}>\r\n          Copy to Clipboard\r\n        </SecondaryButton>\r\n        <SecondaryButton onClick={() => modal.dismiss()}>\r\n          Cancel\r\n        </SecondaryButton>\r\n        <PrimaryButton\r\n          disabled={errors.length > 0}\r\n          onClick={() => {\r\n            applySnapshot(message, {\r\n              ...messageOf(JSON.parse(value)),\r\n              id: message.id,\r\n            })\r\n            modal.dismiss()\r\n          }}\r\n        >\r\n          Apply Changes\r\n        </PrimaryButton>\r\n      </ModalFooter>\r\n    </Container>\r\n  ))\r\n}\r\n","import type { JsonType } from \"./JsonType\"\r\n\r\nexport const parseJson = (json: string) => {\r\n  try {\r\n    return { value: JSON.parse(json) as JsonType }\r\n  } catch (error) {\r\n    const message = error.message.replace(/^JSON\\.parse: /, \"\")\r\n    return { error: message as string }\r\n  }\r\n}\r\n","import type { SnapshotIn } from \"mobx-state-tree\"\r\nimport { ColorModel } from \"../../../common/input/color/ColorModel\"\r\nimport type { MessageData } from \"../state/data/MessageData\"\r\nimport type { MessageModel } from \"../state/models/MessageModel\"\r\n\r\nexport const messageOf = (data: MessageData) => {\r\n  const snapshot: Record<string, unknown> = {}\r\n\r\n  snapshot.content = data.content ?? \"\"\r\n  snapshot.username = data.username ?? \"\"\r\n  snapshot.avatar = data.avatar_url ?? \"\"\r\n\r\n  const embeds: Record<string, unknown>[] = []\r\n  snapshot.embeds = embeds\r\n\r\n  for (const embedData of data.embeds ?? []) {\r\n    let embed = embeds.length > 0 ? embeds[embeds.length - 1] : undefined\r\n\r\n    if (embed?.url && embed.url === embedData.url) {\r\n      const gallery = embed.gallery as string[]\r\n      if (embedData.image?.url && gallery.length < 4) {\r\n        gallery.push(embedData.image.url)\r\n      }\r\n\r\n      continue\r\n    }\r\n\r\n    embed = {}\r\n    embeds.push(embed)\r\n\r\n    embed.title = embedData.title ?? \"\"\r\n    embed.description = embedData.description ?? \"\"\r\n    embed.url = embedData.url ?? \"\"\r\n    embed.author = embedData.author?.name ?? \"\"\r\n    embed.authorUrl = embedData.author?.url ?? \"\"\r\n    embed.authorIcon = embedData.author?.icon_url ?? \"\"\r\n    embed.footer = embedData.footer?.text ?? \"\"\r\n    embed.footerIcon = embedData.footer?.icon_url ?? \"\"\r\n    embed.timestamp = new Date(embedData.timestamp ?? Number.NaN)\r\n    embed.gallery = [embedData.image?.url ?? \"\"].filter(Boolean)\r\n    embed.thumbnail = embedData.thumbnail?.url ?? \"\"\r\n\r\n    const color = ColorModel.create()\r\n    color.setRaw(embedData.color ?? null)\r\n    embed.color = color\r\n\r\n    const fields: Record<string, unknown>[] = []\r\n    embed.fields = fields\r\n\r\n    for (const fieldData of embedData.fields ?? []) {\r\n      const field: Record<string, unknown> = {}\r\n      fields.push(field)\r\n\r\n      field.name = fieldData.name ?? \"\"\r\n      field.value = fieldData.value ?? \"\"\r\n      field.inline = fieldData.inline ?? false\r\n    }\r\n  }\r\n\r\n  return snapshot as SnapshotIn<typeof MessageModel>\r\n}\r\n"],"sourceRoot":""}